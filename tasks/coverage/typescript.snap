TypeScript Summary:
AST Parsed     : 2304/2334 (98.71%)
Positive Passed: 2304/2334 (98.71%)
Negative Passed: 578/2531 (22.84%)
Expect Syntax Error: "Symbols/ES5SymbolProperty2.ts"
Expect Syntax Error: "Symbols/ES5SymbolProperty6.ts"
Expect Syntax Error: "additionalChecks/noPropertyAccessFromIndexSignature1.ts"
Expect Syntax Error: "ambient/ambientDeclarationsPatterns_tooManyAsterisks.ts"
Expect Syntax Error: "ambient/ambientErrors.ts"
Expect Syntax Error: "ambient/ambientExternalModuleInsideNonAmbient.ts"
Expect Syntax Error: "ambient/ambientExternalModuleInsideNonAmbientExternalModule.ts"
Expect Syntax Error: "async/es2017/asyncArrowFunction/asyncArrowFunction10_es2017.ts"
Expect Syntax Error: "async/es2017/asyncArrowFunction/asyncArrowFunction3_es2017.ts"
Expect Syntax Error: "async/es2017/asyncArrowFunction/asyncArrowFunction5_es2017.ts"
Expect Syntax Error: "async/es2017/asyncArrowFunction/asyncArrowFunction9_es2017.ts"
Expect Syntax Error: "async/es2017/asyncArrowFunction/asyncArrowFunction_allowJs.ts"
Expect Syntax Error: "async/es2017/asyncAwaitIsolatedModules_es2017.ts"
Expect Syntax Error: "async/es2017/await_incorrectThisType.ts"
Expect Syntax Error: "async/es2017/await_unaryExpression_es2017_1.ts"
Expect Syntax Error: "async/es2017/await_unaryExpression_es2017_2.ts"
Expect Syntax Error: "async/es2017/functionDeclarations/asyncFunctionDeclaration10_es2017.ts"
Expect Syntax Error: "async/es2017/functionDeclarations/asyncFunctionDeclaration12_es2017.ts"
Expect Syntax Error: "async/es2017/functionDeclarations/asyncFunctionDeclaration13_es2017.ts"
Expect Syntax Error: "async/es2017/functionDeclarations/asyncFunctionDeclaration3_es2017.ts"
Expect Syntax Error: "async/es2017/functionDeclarations/asyncFunctionDeclaration5_es2017.ts"
Expect Syntax Error: "async/es2017/functionDeclarations/asyncFunctionDeclaration8_es2017.ts"
Expect Syntax Error: "async/es5/asyncAliasReturnType_es5.ts"
Expect Syntax Error: "async/es5/asyncArrowFunction/asyncArrowFunction10_es5.ts"
Expect Syntax Error: "async/es5/asyncArrowFunction/asyncArrowFunction3_es5.ts"
Expect Syntax Error: "async/es5/asyncArrowFunction/asyncArrowFunction5_es5.ts"
Expect Syntax Error: "async/es5/asyncArrowFunction/asyncArrowFunction9_es5.ts"
Expect Syntax Error: "async/es5/asyncArrowFunction/asyncArrowFunctionCapturesArguments_es5.ts"
Expect Syntax Error: "async/es5/asyncAwaitIsolatedModules_es5.ts"
Expect Syntax Error: "async/es5/asyncClass_es5.ts"
Expect Syntax Error: "async/es5/asyncDeclare_es5.ts"
Expect Syntax Error: "async/es5/asyncEnum_es5.ts"
Expect Syntax Error: "async/es5/asyncInterface_es5.ts"
Expect Syntax Error: "async/es5/asyncModule_es5.ts"
Expect Syntax Error: "async/es5/functionDeclarations/asyncFunctionDeclaration10_es5.ts"
Expect Syntax Error: "async/es5/functionDeclarations/asyncFunctionDeclaration12_es5.ts"
Expect Syntax Error: "async/es5/functionDeclarations/asyncFunctionDeclaration13_es5.ts"
Expect Syntax Error: "async/es5/functionDeclarations/asyncFunctionDeclaration15_es5.ts"
Expect Syntax Error: "async/es5/functionDeclarations/asyncFunctionDeclaration3_es5.ts"
Expect Syntax Error: "async/es5/functionDeclarations/asyncFunctionDeclaration5_es5.ts"
Expect Syntax Error: "async/es5/functionDeclarations/asyncFunctionDeclaration8_es5.ts"
Expect Syntax Error: "async/es5/functionDeclarations/asyncFunctionDeclarationCapturesArguments_es5.ts"
Expect Syntax Error: "async/es6/asyncArrowFunction/asyncArrowFunction10_es6.ts"
Expect Syntax Error: "async/es6/asyncArrowFunction/asyncArrowFunction3_es6.ts"
Expect Syntax Error: "async/es6/asyncArrowFunction/asyncArrowFunction5_es6.ts"
Expect Syntax Error: "async/es6/asyncArrowFunction/asyncArrowFunction9_es6.ts"
Expect Syntax Error: "async/es6/asyncAwaitIsolatedModules_es6.ts"
Expect Syntax Error: "async/es6/asyncClass_es6.ts"
Expect Syntax Error: "async/es6/asyncDeclare_es6.ts"
Expect Syntax Error: "async/es6/asyncEnum_es6.ts"
Expect Syntax Error: "async/es6/asyncInterface_es6.ts"
Expect Syntax Error: "async/es6/asyncModule_es6.ts"
Expect Syntax Error: "async/es6/asyncQualifiedReturnType_es6.ts"
Expect Syntax Error: "async/es6/await_unaryExpression_es6_1.ts"
Expect Syntax Error: "async/es6/await_unaryExpression_es6_2.ts"
Expect Syntax Error: "async/es6/functionDeclarations/asyncFunctionDeclaration10_es6.ts"
Expect Syntax Error: "async/es6/functionDeclarations/asyncFunctionDeclaration12_es6.ts"
Expect Syntax Error: "async/es6/functionDeclarations/asyncFunctionDeclaration13_es6.ts"
Expect Syntax Error: "async/es6/functionDeclarations/asyncFunctionDeclaration15_es6.ts"
Expect Syntax Error: "async/es6/functionDeclarations/asyncFunctionDeclaration3_es6.ts"
Expect Syntax Error: "async/es6/functionDeclarations/asyncFunctionDeclaration5_es6.ts"
Expect Syntax Error: "async/es6/functionDeclarations/asyncFunctionDeclaration8_es6.ts"
Expect Syntax Error: "async/es6/functionDeclarations/asyncOrYieldAsBindingIdentifier1.ts"
Expect Syntax Error: "classes/awaitAndYieldInProperty.ts"
Expect Syntax Error: "classes/classDeclarations/classAbstractKeyword/classAbstractAccessor.ts"
Expect Syntax Error: "classes/classDeclarations/classAbstractKeyword/classAbstractAssignabilityConstructorFunction.ts"
Expect Syntax Error: "classes/classDeclarations/classAbstractKeyword/classAbstractClinterfaceAssignability.ts"
Expect Syntax Error: "classes/classDeclarations/classAbstractKeyword/classAbstractConstructor.ts"
Expect Syntax Error: "classes/classDeclarations/classAbstractKeyword/classAbstractConstructorAssignability.ts"
Expect Syntax Error: "classes/classDeclarations/classAbstractKeyword/classAbstractDeclarations.d.ts"
Expect Syntax Error: "classes/classDeclarations/classAbstractKeyword/classAbstractExtends.ts"
Expect Syntax Error: "classes/classDeclarations/classAbstractKeyword/classAbstractFactoryFunction.ts"
Expect Syntax Error: "classes/classDeclarations/classAbstractKeyword/classAbstractGeneric.ts"
Expect Syntax Error: "classes/classDeclarations/classAbstractKeyword/classAbstractImportInstantiation.ts"
Expect Syntax Error: "classes/classDeclarations/classAbstractKeyword/classAbstractInAModule.ts"
Expect Syntax Error: "classes/classDeclarations/classAbstractKeyword/classAbstractInheritance.ts"
Expect Syntax Error: "classes/classDeclarations/classAbstractKeyword/classAbstractInstantiations1.ts"
Expect Syntax Error: "classes/classDeclarations/classAbstractKeyword/classAbstractInstantiations2.ts"
Expect Syntax Error: "classes/classDeclarations/classAbstractKeyword/classAbstractMergedDeclaration.ts"
Expect Syntax Error: "classes/classDeclarations/classAbstractKeyword/classAbstractMethodInNonAbstractClass.ts"
Expect Syntax Error: "classes/classDeclarations/classAbstractKeyword/classAbstractMethodWithImplementation.ts"
Expect Syntax Error: "classes/classDeclarations/classAbstractKeyword/classAbstractOverloads.ts"
Expect Syntax Error: "classes/classDeclarations/classAbstractKeyword/classAbstractOverrideWithAbstract.ts"
Expect Syntax Error: "classes/classDeclarations/classAbstractKeyword/classAbstractProperties.ts"
Expect Syntax Error: "classes/classDeclarations/classAbstractKeyword/classAbstractSingleLineDecl.ts"
Expect Syntax Error: "classes/classDeclarations/classAbstractKeyword/classAbstractSuperCalls.ts"
Expect Syntax Error: "classes/classDeclarations/classAbstractKeyword/classAbstractUsingAbstractMethod1.ts"
Expect Syntax Error: "classes/classDeclarations/classAbstractKeyword/classAbstractUsingAbstractMethods2.ts"
Expect Syntax Error: "classes/classDeclarations/classAbstractKeyword/classAbstractWithInterface.ts"
Expect Syntax Error: "classes/classDeclarations/classAndInterfaceMergeConflictingMembers.ts"
Expect Syntax Error: "classes/classDeclarations/classAndVariableWithSameName.ts"
Expect Syntax Error: "classes/classDeclarations/classExtendingClassLikeType.ts"
Expect Syntax Error: "classes/classDeclarations/classExtendingNonConstructor.ts"
Expect Syntax Error: "classes/classDeclarations/classHeritageSpecification/classExtendsItself.ts"
Expect Syntax Error: "classes/classDeclarations/classHeritageSpecification/classExtendsItselfIndirectly.ts"
Expect Syntax Error: "classes/classDeclarations/classHeritageSpecification/classExtendsItselfIndirectly2.ts"
Expect Syntax Error: "classes/classDeclarations/classHeritageSpecification/classExtendsShadowedConstructorFunction.ts"
Expect Syntax Error: "classes/classDeclarations/classHeritageSpecification/classExtendsValidConstructorFunction.ts"
Expect Syntax Error: "classes/classDeclarations/classHeritageSpecification/classIsSubtypeOfBaseType.ts"
Expect Syntax Error: "classes/classDeclarations/classImplementsMergedClassInterface.ts"
Expect Syntax Error: "classes/classDeclarations/classWithPredefinedTypesAsNames.ts"
Expect Syntax Error: "classes/classExpressions/classWithStaticFieldInParameterBindingPattern.2.ts"
Expect Syntax Error: "classes/classExpressions/classWithStaticFieldInParameterInitializer.2.ts"
Expect Syntax Error: "classes/classStaticBlock/classStaticBlock19.ts"
Expect Syntax Error: "classes/classStaticBlock/classStaticBlock23.ts"
Expect Syntax Error: "classes/classStaticBlock/classStaticBlock3.ts"
Expect Syntax Error: "classes/classStaticBlock/classStaticBlock4.ts"
Expect Syntax Error: "classes/classStaticBlock/classStaticBlock7.ts"
Expect Syntax Error: "classes/classStaticBlock/classStaticBlock9.ts"
Expect Syntax Error: "classes/classStaticBlock/classStaticBlockUseBeforeDef2.ts"
Expect Syntax Error: "classes/classStaticBlock/classStaticBlockUseBeforeDef3.ts"
Expect Syntax Error: "classes/constructorDeclarations/automaticConstructors/classWithoutExplicitConstructor.ts"
Expect Syntax Error: "classes/constructorDeclarations/automaticConstructors/derivedClassWithoutExplicitConstructor.ts"
Expect Syntax Error: "classes/constructorDeclarations/automaticConstructors/derivedClassWithoutExplicitConstructor2.ts"
Expect Syntax Error: "classes/constructorDeclarations/automaticConstructors/derivedClassWithoutExplicitConstructor3.ts"
Expect Syntax Error: "classes/constructorDeclarations/classConstructorAccessibility.ts"
Expect Syntax Error: "classes/constructorDeclarations/classConstructorAccessibility2.ts"
Expect Syntax Error: "classes/constructorDeclarations/classConstructorAccessibility3.ts"
Expect Syntax Error: "classes/constructorDeclarations/classConstructorAccessibility5.ts"
Expect Syntax Error: "classes/constructorDeclarations/classConstructorOverloadsAccessibility.ts"
Expect Syntax Error: "classes/constructorDeclarations/classConstructorParametersAccessibility.ts"
Expect Syntax Error: "classes/constructorDeclarations/classConstructorParametersAccessibility2.ts"
Expect Syntax Error: "classes/constructorDeclarations/classWithTwoConstructorDefinitions.ts"
Expect Syntax Error: "classes/constructorDeclarations/constructorParameters/constructorDefaultValuesReferencingThis.ts"
Expect Syntax Error: "classes/constructorDeclarations/constructorParameters/constructorImplementationWithDefaultValues2.ts"
Expect Syntax Error: "classes/constructorDeclarations/constructorParameters/constructorOverloadsWithDefaultValues.ts"
Expect Syntax Error: "classes/constructorDeclarations/constructorParameters/constructorParameterProperties.ts"
Expect Syntax Error: "classes/constructorDeclarations/constructorParameters/constructorParameterProperties2.ts"
Expect Syntax Error: "classes/constructorDeclarations/constructorParameters/readonlyConstructorAssignment.ts"
Expect Syntax Error: "classes/constructorDeclarations/constructorParameters/readonlyInAmbientClass.ts"
Expect Syntax Error: "classes/constructorDeclarations/constructorParameters/readonlyInConstructorParameters.ts"
Expect Syntax Error: "classes/constructorDeclarations/constructorParameters/readonlyReadonly.ts"
Expect Syntax Error: "classes/constructorDeclarations/constructorWithAssignableReturnExpression.ts"
Expect Syntax Error: "classes/constructorDeclarations/superCalls/derivedClassConstructorWithoutSuperCall.ts"
Expect Syntax Error: "classes/constructorDeclarations/superCalls/derivedClassParameterProperties.ts"
Expect Syntax Error: "classes/constructorDeclarations/superCalls/derivedClassSuperCallsWithThisArg.ts"
Expect Syntax Error: "classes/constructorDeclarations/superCalls/derivedClassSuperProperties.ts"
Expect Syntax Error: "classes/constructorDeclarations/superCalls/derivedClassSuperStatementPosition.ts"
Expect Syntax Error: "classes/constructorDeclarations/superCalls/superCallInConstructorWithNoBaseType.ts"
Expect Syntax Error: "classes/constructorDeclarations/superCalls/superPropertyInConstructorBeforeSuperCall.ts"
Expect Syntax Error: "classes/indexMemberDeclarations/privateIndexer.ts"
Expect Syntax Error: "classes/indexMemberDeclarations/publicIndexer.ts"
Expect Syntax Error: "classes/indexMemberDeclarations/staticIndexers.ts"
Expect Syntax Error: "classes/members/accessibility/classPropertyAsPrivate.ts"
Expect Syntax Error: "classes/members/accessibility/classPropertyAsProtected.ts"
Expect Syntax Error: "classes/members/accessibility/privateProtectedMembersAreNotAccessibleDestructuring.ts"
Expect Syntax Error: "classes/members/accessibility/privateStaticMemberAccessibility.ts"
Expect Syntax Error: "classes/members/accessibility/privateStaticNotAccessibleInClodule.ts"
Expect Syntax Error: "classes/members/accessibility/privateStaticNotAccessibleInClodule2.ts"
Expect Syntax Error: "classes/members/accessibility/protectedClassPropertyAccessibleWithinNestedSubclass.ts"
Expect Syntax Error: "classes/members/accessibility/protectedClassPropertyAccessibleWithinNestedSubclass1.ts"
Expect Syntax Error: "classes/members/accessibility/protectedClassPropertyAccessibleWithinSubclass2.ts"
Expect Syntax Error: "classes/members/accessibility/protectedClassPropertyAccessibleWithinSubclass3.ts"
Expect Syntax Error: "classes/members/accessibility/protectedInstanceMemberAccessibility.ts"
Expect Syntax Error: "classes/members/accessibility/protectedStaticClassPropertyAccessibleWithinSubclass.ts"
Expect Syntax Error: "classes/members/accessibility/protectedStaticClassPropertyAccessibleWithinSubclass2.ts"
Expect Syntax Error: "classes/members/accessibility/protectedStaticNotAccessibleInClodule.ts"
Expect Syntax Error: "classes/members/classTypes/genericSetterInClassTypeJsDoc.ts"
Expect Syntax Error: "classes/members/classTypes/instancePropertiesInheritedIntoClassType.ts"
Expect Syntax Error: "classes/members/classTypes/instancePropertyInClassType.ts"
Expect Syntax Error: "classes/members/classTypes/staticPropertyNotInClassType.ts"
Expect Syntax Error: "classes/members/constructorFunctionTypes/classWithBaseClassButNoConstructor.ts"
Expect Syntax Error: "classes/members/constructorFunctionTypes/classWithConstructors.ts"
Expect Syntax Error: "classes/members/inheritanceAndOverriding/derivedClassFunctionOverridesBaseClassAccessor.ts"
Expect Syntax Error: "classes/members/inheritanceAndOverriding/derivedClassOverridesPrivates.ts"
Expect Syntax Error: "classes/members/inheritanceAndOverriding/derivedClassOverridesProtectedMembers3.ts"
Expect Syntax Error: "classes/members/inheritanceAndOverriding/derivedClassOverridesProtectedMembers4.ts"
Expect Syntax Error: "classes/members/inheritanceAndOverriding/derivedClassTransitivity.ts"
Expect Syntax Error: "classes/members/inheritanceAndOverriding/derivedClassTransitivity2.ts"
Expect Syntax Error: "classes/members/inheritanceAndOverriding/derivedClassTransitivity3.ts"
Expect Syntax Error: "classes/members/inheritanceAndOverriding/derivedClassTransitivity4.ts"
Expect Syntax Error: "classes/members/inheritanceAndOverriding/derivedClassWithAny.ts"
Expect Syntax Error: "classes/members/inheritanceAndOverriding/derivedClassWithPrivateInstanceShadowingProtectedInstance.ts"
Expect Syntax Error: "classes/members/inheritanceAndOverriding/derivedClassWithPrivateInstanceShadowingPublicInstance.ts"
Expect Syntax Error: "classes/members/inheritanceAndOverriding/derivedClassWithPrivateStaticShadowingProtectedStatic.ts"
Expect Syntax Error: "classes/members/inheritanceAndOverriding/derivedClassWithPrivateStaticShadowingPublicStatic.ts"
Expect Syntax Error: "classes/members/inheritanceAndOverriding/derivedGenericClassWithAny.ts"
Expect Syntax Error: "classes/members/instanceAndStaticMembers/typeOfThisInInstanceMember.ts"
Expect Syntax Error: "classes/members/instanceAndStaticMembers/typeOfThisInStaticMembers10.ts"
Expect Syntax Error: "classes/members/instanceAndStaticMembers/typeOfThisInStaticMembers11.ts"
Expect Syntax Error: "classes/members/instanceAndStaticMembers/typeOfThisInStaticMembers12.ts"
Expect Syntax Error: "classes/members/instanceAndStaticMembers/typeOfThisInStaticMembers13.ts"
Expect Syntax Error: "classes/members/instanceAndStaticMembers/typeOfThisInStaticMembers6.ts"
Expect Syntax Error: "classes/members/instanceAndStaticMembers/typeOfThisInStaticMembers8.ts"
Expect Syntax Error: "classes/members/instanceAndStaticMembers/typeOfThisInStaticMembers9.ts"
Expect Syntax Error: "classes/members/instanceAndStaticMembers/typeOfThisInstanceMemberNarrowedWithLoopAntecedent.ts"
Expect Syntax Error: "classes/members/privateNames/privateNameAccessors.ts"
Expect Syntax Error: "classes/members/privateNames/privateNameAmbientNoImplicitAny.ts"
Expect Syntax Error: "classes/members/privateNames/privateNameAndObjectRestSpread.ts"
Expect Syntax Error: "classes/members/privateNames/privateNameBadSuper.ts"
Expect Syntax Error: "classes/members/privateNames/privateNameBadSuperUseDefineForClassFields.ts"
Expect Syntax Error: "classes/members/privateNames/privateNameCircularReference.ts"
Expect Syntax Error: "classes/members/privateNames/privateNameDeclarationMerging.ts"
Expect Syntax Error: "classes/members/privateNames/privateNameES5Ban.ts"
Expect Syntax Error: "classes/members/privateNames/privateNameFieldsESNext.ts"
Expect Syntax Error: "classes/members/privateNames/privateNameInInExpressionUnused.ts"
Expect Syntax Error: "classes/members/privateNames/privateNameMethod.ts"
Expect Syntax Error: "classes/members/privateNames/privateNameMethodAssignment.ts"
Expect Syntax Error: "classes/members/privateNames/privateNameNestedClassAccessorsShadowing.ts"
Expect Syntax Error: "classes/members/privateNames/privateNameNestedClassFieldShadowing.ts"
Expect Syntax Error: "classes/members/privateNames/privateNameNestedClassMethodShadowing.ts"
Expect Syntax Error: "classes/members/privateNames/privateNameReadonly.ts"
Expect Syntax Error: "classes/members/privateNames/privateNameSetterNoGetter.ts"
Expect Syntax Error: "classes/members/privateNames/privateNameStaticAccessors.ts"
Expect Syntax Error: "classes/members/privateNames/privateNameStaticFieldAccess.ts"
Expect Syntax Error: "classes/members/privateNames/privateNameStaticMethod.ts"
Expect Syntax Error: "classes/members/privateNames/privateNameStaticMethodAssignment.ts"
Expect Syntax Error: "classes/members/privateNames/privateNameUnused.ts"
Expect Syntax Error: "classes/members/privateNames/privateNamesAndDecorators.ts"
Expect Syntax Error: "classes/members/privateNames/privateNamesAndStaticFields.ts"
Expect Syntax Error: "classes/members/privateNames/privateNamesAndkeyof.ts"
Expect Syntax Error: "classes/members/privateNames/privateNamesConstructorChain-1.ts"
Expect Syntax Error: "classes/members/privateNames/privateNamesConstructorChain-2.ts"
Expect Syntax Error: "classes/members/privateNames/privateNamesInNestedClasses-1.ts"
Expect Syntax Error: "classes/members/privateNames/privateNamesInNestedClasses-2.ts"
Expect Syntax Error: "classes/members/privateNames/privateNamesIncompatibleModifiersJs.ts"
Expect Syntax Error: "classes/members/privateNames/privateNamesNoDelete.ts"
Expect Syntax Error: "classes/members/privateNames/privateNamesUnique-1.ts"
Expect Syntax Error: "classes/members/privateNames/privateNamesUnique-4.ts"
Expect Syntax Error: "classes/members/privateNames/privateNamesUnique-5.ts"
Expect Syntax Error: "classes/members/privateNames/privateNamesUseBeforeDef.ts"
Expect Syntax Error: "classes/members/privateNames/privateWriteOnlyAccessorRead.ts"
Expect Syntax Error: "classes/mixinAbstractClasses.2.ts"
Expect Syntax Error: "classes/mixinAccessModifiers.ts"
Expect Syntax Error: "classes/propertyMemberDeclarations/abstractPropertyInitializer.ts"
Expect Syntax Error: "classes/propertyMemberDeclarations/accessibilityModifiers.ts"
Expect Syntax Error: "classes/propertyMemberDeclarations/accessorsOverrideMethod.ts"
Expect Syntax Error: "classes/propertyMemberDeclarations/accessorsOverrideProperty.ts"
Expect Syntax Error: "classes/propertyMemberDeclarations/accessorsOverrideProperty2.ts"
Expect Syntax Error: "classes/propertyMemberDeclarations/accessorsOverrideProperty3.ts"
Expect Syntax Error: "classes/propertyMemberDeclarations/accessorsOverrideProperty4.ts"
Expect Syntax Error: "classes/propertyMemberDeclarations/accessorsOverrideProperty6.ts"
Expect Syntax Error: "classes/propertyMemberDeclarations/accessorsOverrideProperty7.ts"
Expect Syntax Error: "classes/propertyMemberDeclarations/assignParameterPropertyToPropertyDeclarationESNext.ts"
Expect Syntax Error: "classes/propertyMemberDeclarations/autoAccessor5.ts"
Expect Syntax Error: "classes/propertyMemberDeclarations/autoAccessorExperimentalDecorators.ts"
Expect Syntax Error: "classes/propertyMemberDeclarations/constructorParameterShadowsOuterScopes.ts"
Expect Syntax Error: "classes/propertyMemberDeclarations/constructorParameterShadowsOuterScopes2.ts"
Expect Syntax Error: "classes/propertyMemberDeclarations/definePropertyOutputES3.ts"
Expect Syntax Error: "classes/propertyMemberDeclarations/derivedUninitializedPropertyDeclaration.ts"
Expect Syntax Error: "classes/propertyMemberDeclarations/initializerReferencingConstructorLocals.ts"
Expect Syntax Error: "classes/propertyMemberDeclarations/initializerReferencingConstructorParameters.ts"
Expect Syntax Error: "classes/propertyMemberDeclarations/memberAccessorDeclarations/accessorWithES3.ts"
Expect Syntax Error: "classes/propertyMemberDeclarations/memberAccessorDeclarations/ambientAccessors.ts"
Expect Syntax Error: "classes/propertyMemberDeclarations/memberFunctionDeclarations/derivedTypeAccessesHiddenBaseCallViaSuperPropertyAccess.ts"
Expect Syntax Error: "classes/propertyMemberDeclarations/memberFunctionDeclarations/instanceMemberAssignsToClassPrototype.ts"
Expect Syntax Error: "classes/propertyMemberDeclarations/memberFunctionDeclarations/memberFunctionOverloadMixingStaticAndInstance.ts"
Expect Syntax Error: "classes/propertyMemberDeclarations/memberFunctionDeclarations/memberFunctionsWithPrivateOverloads.ts"
Expect Syntax Error: "classes/propertyMemberDeclarations/memberFunctionDeclarations/memberFunctionsWithPublicPrivateOverloads.ts"
Expect Syntax Error: "classes/propertyMemberDeclarations/memberFunctionDeclarations/staticMemberAssignsToConstructorFunctionMembers.ts"
Expect Syntax Error: "classes/propertyMemberDeclarations/propertyAndAccessorWithSameName.ts"
Expect Syntax Error: "classes/propertyMemberDeclarations/propertyAndFunctionWithSameName.ts"
Expect Syntax Error: "classes/propertyMemberDeclarations/propertyOverridesAccessors.ts"
Expect Syntax Error: "classes/propertyMemberDeclarations/propertyOverridesAccessors2.ts"
Expect Syntax Error: "classes/propertyMemberDeclarations/propertyOverridesAccessors3.ts"
Expect Syntax Error: "classes/propertyMemberDeclarations/propertyOverridesAccessors4.ts"
Expect Syntax Error: "classes/propertyMemberDeclarations/propertyOverridesAccessors5.ts"
Expect Syntax Error: "classes/propertyMemberDeclarations/redeclaredProperty.ts"
Expect Syntax Error: "classes/propertyMemberDeclarations/redefinedPararameterProperty.ts"
Expect Syntax Error: "classes/propertyMemberDeclarations/strictPropertyInitialization.ts"
Expect Syntax Error: "classes/propertyMemberDeclarations/twoAccessorsWithSameName.ts"
Expect Syntax Error: "classes/propertyMemberDeclarations/twoAccessorsWithSameName2.ts"
Expect Syntax Error: "classes/staticIndexSignature/staticIndexSignature1.ts"
Expect Syntax Error: "classes/staticIndexSignature/staticIndexSignature2.ts"
Expect Syntax Error: "classes/staticIndexSignature/staticIndexSignature3.ts"
Expect Syntax Error: "classes/staticIndexSignature/staticIndexSignature7.ts"
Expect Syntax Error: "constEnums/constEnum2.ts"
Expect Syntax Error: "constEnums/constEnumPropertyAccess1.ts"
Expect Syntax Error: "constEnums/constEnumPropertyAccess2.ts"
Expect Syntax Error: "controlFlow/controlFlowAliasing.ts"
Expect Syntax Error: "controlFlow/controlFlowBindingPatternOrder.ts"
Expect Syntax Error: "controlFlow/controlFlowDeleteOperator.ts"
Expect Syntax Error: "controlFlow/controlFlowGenericTypes.ts"
Expect Syntax Error: "controlFlow/controlFlowIIFE.ts"
Expect Syntax Error: "controlFlow/controlFlowIterationErrors.ts"
Expect Syntax Error: "controlFlow/controlFlowIterationErrorsAsync.ts"
Expect Syntax Error: "controlFlow/controlFlowNullishCoalesce.ts"
Expect Syntax Error: "controlFlow/controlFlowOptionalChain.ts"
Expect Syntax Error: "controlFlow/controlFlowTypeofObject.ts"
Expect Syntax Error: "controlFlow/controlFlowWhileStatement.ts"
Expect Syntax Error: "controlFlow/dependentDestructuredVariables.ts"
Expect Syntax Error: "controlFlow/exhaustiveSwitchStatements1.ts"
Expect Syntax Error: "controlFlow/neverReturningFunctions1.ts"
Expect Syntax Error: "declarationEmit/typePredicates/declarationEmitThisPredicates02.ts"
Expect Syntax Error: "declarationEmit/typePredicates/declarationEmitThisPredicatesWithPrivateName02.ts"
Expect Syntax Error: "decorators/class/accessor/decoratorOnClassAccessor7.ts"
Expect Syntax Error: "decorators/class/constructableDecoratorOnClass01.ts"
Expect Syntax Error: "decorators/class/constructor/decoratorOnClassConstructor1.ts"
Expect Syntax Error: "decorators/class/decoratorChecksFunctionBodies.ts"
Expect Syntax Error: "decorators/class/decoratorOnClass8.ts"
Expect Syntax Error: "decorators/class/method/decoratorOnClassMethod10.ts"
Expect Syntax Error: "decorators/class/method/decoratorOnClassMethod11.ts"
Expect Syntax Error: "decorators/class/method/decoratorOnClassMethod12.ts"
Expect Syntax Error: "decorators/class/method/decoratorOnClassMethod6.ts"
Expect Syntax Error: "decorators/class/method/decoratorOnClassMethod8.ts"
Expect Syntax Error: "decorators/class/method/decoratorOnClassMethodOverload1.ts"
Expect Syntax Error: "decorators/class/method/parameter/decoratorOnClassMethodParameter3.ts"
Expect Syntax Error: "decorators/class/method/parameter/decoratorOnClassMethodThisParameter.ts"
Expect Syntax Error: "decorators/class/property/decoratorOnClassProperty11.ts"
Expect Syntax Error: "decorators/class/property/decoratorOnClassProperty6.ts"
Expect Syntax Error: "decorators/class/property/decoratorOnClassProperty7.ts"
Expect Syntax Error: "decorators/decoratorCallGeneric.ts"
Expect Syntax Error: "decorators/invalid/decoratorOnEnum.ts"
Expect Syntax Error: "decorators/invalid/decoratorOnFunctionDeclaration.ts"
Expect Syntax Error: "decorators/invalid/decoratorOnFunctionParameter.ts"
Expect Syntax Error: "decorators/invalid/decoratorOnImportEquals1.ts"
Expect Syntax Error: "decorators/invalid/decoratorOnInterface.ts"
Expect Syntax Error: "decorators/invalid/decoratorOnInternalModule.ts"
Expect Syntax Error: "decorators/invalid/decoratorOnTypeAlias.ts"
Expect Syntax Error: "decorators/invalid/decoratorOnVar.ts"
Expect Syntax Error: "directives/ts-expect-error-js.ts"
Expect Syntax Error: "directives/ts-expect-error.ts"
Expect Syntax Error: "directives/ts-ignore.ts"
Expect Syntax Error: "dynamicImport/importCallExpressionAsyncES3AMD.ts"
Expect Syntax Error: "dynamicImport/importCallExpressionAsyncES3CJS.ts"
Expect Syntax Error: "dynamicImport/importCallExpressionAsyncES3System.ts"
Expect Syntax Error: "dynamicImport/importCallExpressionAsyncES3UMD.ts"
Expect Syntax Error: "dynamicImport/importCallExpressionSpecifierNotStringTypeError.ts"
Expect Syntax Error: "enums/awaitAndYield.ts"
Expect Syntax Error: "enums/enumConstantMemberWithString.ts"
Expect Syntax Error: "enums/enumConstantMemberWithTemplateLiterals.ts"
Expect Syntax Error: "enums/enumConstantMembers.ts"
Expect Syntax Error: "enums/enumMergingErrors.ts"
Expect Syntax Error: "es2017/useObjectValuesAndEntries2.ts"
Expect Syntax Error: "es2017/useObjectValuesAndEntries3.ts"
Expect Syntax Error: "es2017/useSharedArrayBuffer2.ts"
Expect Syntax Error: "es2017/useSharedArrayBuffer3.ts"
Expect Syntax Error: "es2017/useSharedArrayBuffer6.ts"
Expect Syntax Error: "es2019/globalThisAmbientModules.ts"
Expect Syntax Error: "es2019/globalThisBlockscopedProperties.ts"
Expect Syntax Error: "es2019/globalThisCollision.ts"
Expect Syntax Error: "es2019/globalThisGlobalExportAsGlobal.ts"
Expect Syntax Error: "es2019/globalThisPropertyAssignment.ts"
Expect Syntax Error: "es2019/globalThisReadonlyProperties.ts"
Expect Syntax Error: "es2019/globalThisUnknown.ts"
Expect Syntax Error: "es2019/globalThisUnknownNoImplicitAny.ts"
Expect Syntax Error: "es2020/constructBigint.ts"
Expect Syntax Error: "es2020/es2020IntlAPIs.ts"
Expect Syntax Error: "es2020/modules/exportAsNamespace_nonExistent.ts"
Expect Syntax Error: "es2021/logicalAssignment/logicalAssignment4.ts"
Expect Syntax Error: "es2021/logicalAssignment/logicalAssignment5.ts"
Expect Syntax Error: "es2021/logicalAssignment/logicalAssignment6.ts"
Expect Syntax Error: "es2021/logicalAssignment/logicalAssignment7.ts"
Expect Syntax Error: "es2021/logicalAssignment/logicalAssignment8.ts"
Expect Syntax Error: "es6/Symbols/symbolDeclarationEmit12.ts"
Expect Syntax Error: "es6/Symbols/symbolProperty10.ts"
Expect Syntax Error: "es6/Symbols/symbolProperty12.ts"
Expect Syntax Error: "es6/Symbols/symbolProperty17.ts"
Expect Syntax Error: "es6/Symbols/symbolProperty21.ts"
Expect Syntax Error: "es6/Symbols/symbolProperty24.ts"
Expect Syntax Error: "es6/Symbols/symbolProperty25.ts"
Expect Syntax Error: "es6/Symbols/symbolProperty3.ts"
Expect Syntax Error: "es6/Symbols/symbolProperty30.ts"
Expect Syntax Error: "es6/Symbols/symbolProperty32.ts"
Expect Syntax Error: "es6/Symbols/symbolProperty33.ts"
Expect Syntax Error: "es6/Symbols/symbolProperty34.ts"
Expect Syntax Error: "es6/Symbols/symbolProperty35.ts"
Expect Syntax Error: "es6/Symbols/symbolProperty39.ts"
Expect Syntax Error: "es6/Symbols/symbolProperty42.ts"
Expect Syntax Error: "es6/Symbols/symbolProperty43.ts"
Expect Syntax Error: "es6/Symbols/symbolProperty44.ts"
Expect Syntax Error: "es6/Symbols/symbolProperty46.ts"
Expect Syntax Error: "es6/Symbols/symbolProperty47.ts"
Expect Syntax Error: "es6/Symbols/symbolProperty52.ts"
Expect Syntax Error: "es6/Symbols/symbolProperty53.ts"
Expect Syntax Error: "es6/Symbols/symbolProperty54.ts"
Expect Syntax Error: "es6/Symbols/symbolProperty59.ts"
Expect Syntax Error: "es6/Symbols/symbolProperty7.ts"
Expect Syntax Error: "es6/Symbols/symbolProperty9.ts"
Expect Syntax Error: "es6/Symbols/symbolType1.ts"
Expect Syntax Error: "es6/Symbols/symbolType10.ts"
Expect Syntax Error: "es6/Symbols/symbolType12.ts"
Expect Syntax Error: "es6/Symbols/symbolType13.ts"
Expect Syntax Error: "es6/Symbols/symbolType14.ts"
Expect Syntax Error: "es6/Symbols/symbolType15.ts"
Expect Syntax Error: "es6/Symbols/symbolType2.ts"
Expect Syntax Error: "es6/Symbols/symbolType20.ts"
Expect Syntax Error: "es6/Symbols/symbolType3.ts"
Expect Syntax Error: "es6/Symbols/symbolType4.ts"
Expect Syntax Error: "es6/Symbols/symbolType5.ts"
Expect Syntax Error: "es6/Symbols/symbolType6.ts"
Expect Syntax Error: "es6/Symbols/symbolType7.ts"
Expect Syntax Error: "es6/Symbols/symbolType8.ts"
Expect Syntax Error: "es6/Symbols/symbolType9.ts"
Expect Syntax Error: "es6/arrowFunction/emitArrowFunctionThisCapturing.ts"
Expect Syntax Error: "es6/arrowFunction/emitArrowFunctionThisCapturingES6.ts"
Expect Syntax Error: "es6/arrowFunction/emitArrowFunctionWhenUsingArguments01.ts"
Expect Syntax Error: "es6/arrowFunction/emitArrowFunctionWhenUsingArguments01_ES6.ts"
Expect Syntax Error: "es6/arrowFunction/emitArrowFunctionWhenUsingArguments02.ts"
Expect Syntax Error: "es6/arrowFunction/emitArrowFunctionWhenUsingArguments02_ES6.ts"
Expect Syntax Error: "es6/arrowFunction/emitArrowFunctionWhenUsingArguments03.ts"
Expect Syntax Error: "es6/arrowFunction/emitArrowFunctionWhenUsingArguments04.ts"
Expect Syntax Error: "es6/arrowFunction/emitArrowFunctionWhenUsingArguments05.ts"
Expect Syntax Error: "es6/arrowFunction/emitArrowFunctionWhenUsingArguments06.ts"
Expect Syntax Error: "es6/arrowFunction/emitArrowFunctionWhenUsingArguments07.ts"
Expect Syntax Error: "es6/arrowFunction/emitArrowFunctionWhenUsingArguments09.ts"
Expect Syntax Error: "es6/arrowFunction/emitArrowFunctionWhenUsingArguments10.ts"
Expect Syntax Error: "es6/arrowFunction/emitArrowFunctionWhenUsingArguments11.ts"
Expect Syntax Error: "es6/arrowFunction/emitArrowFunctionWhenUsingArguments12.ts"
Expect Syntax Error: "es6/arrowFunction/emitArrowFunctionWhenUsingArguments12_ES6.ts"
Expect Syntax Error: "es6/arrowFunction/emitArrowFunctionWhenUsingArguments14.ts"
Expect Syntax Error: "es6/arrowFunction/emitArrowFunctionWhenUsingArguments15.ts"
Expect Syntax Error: "es6/arrowFunction/emitArrowFunctionWhenUsingArguments16.ts"
Expect Syntax Error: "es6/arrowFunction/emitArrowFunctionWhenUsingArguments17.ts"
Expect Syntax Error: "es6/arrowFunction/emitArrowFunctionWhenUsingArguments18.ts"
Expect Syntax Error: "es6/arrowFunction/emitArrowFunctionWhenUsingArguments19.ts"
Expect Syntax Error: "es6/classDeclaration/superCallBeforeThisAccessing3.ts"
Expect Syntax Error: "es6/classDeclaration/superCallBeforeThisAccessing4.ts"
Expect Syntax Error: "es6/classDeclaration/superCallBeforeThisAccessing6.ts"
Expect Syntax Error: "es6/classDeclaration/superCallBeforeThisAccessing7.ts"
Expect Syntax Error: "es6/classDeclaration/superCallFromClassThatHasNoBaseTypeButWithSameSymbolInterface.ts"
Expect Syntax Error: "es6/classExpressions/typeArgumentInferenceWithClassExpression2.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames12_ES5.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames12_ES6.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames14_ES5.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames14_ES6.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames15_ES5.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames15_ES6.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames17_ES5.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames17_ES6.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames19_ES5.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames19_ES6.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames21_ES5.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames21_ES6.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames23_ES5.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames23_ES6.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames24_ES5.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames24_ES6.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames26_ES5.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames26_ES6.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames27_ES5.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames27_ES6.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames2_ES5.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames2_ES6.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames30_ES5.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames30_ES6.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames32_ES5.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames32_ES6.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames34_ES5.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames34_ES6.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames35_ES5.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames35_ES6.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames36_ES5.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames36_ES6.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames38_ES5.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames38_ES6.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames39_ES5.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames39_ES6.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames3_ES5.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames3_ES6.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames40_ES5.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames40_ES6.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames42_ES5.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames42_ES6.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames43_ES5.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames43_ES6.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames44_ES5.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames44_ES6.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames45_ES5.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames45_ES6.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames51_ES5.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames51_ES6.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames52.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames5_ES5.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames5_ES6.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames6_ES5.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames6_ES6.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames8_ES5.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames8_ES6.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames9_ES5.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNames9_ES6.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNamesContextualType10_ES5.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNamesContextualType10_ES6.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNamesContextualType8_ES5.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNamesContextualType8_ES6.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNamesContextualType9_ES5.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNamesContextualType9_ES6.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNamesDeclarationEmit3_ES5.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNamesDeclarationEmit3_ES6.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNamesDeclarationEmit4_ES5.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNamesDeclarationEmit4_ES6.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNamesDeclarationEmit6_ES5.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNamesDeclarationEmit6_ES6.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNamesOnOverloads_ES5.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNamesOnOverloads_ES6.ts"
Expect Syntax Error: "es6/computedProperties/computedPropertyNamesWithStaticProperty.ts"
Expect Syntax Error: "es6/destructuring/declarationsAndAssignments.ts"
Expect Syntax Error: "es6/destructuring/destructuringArrayBindingPatternAndAssignment1ES5.ts"
Expect Syntax Error: "es6/destructuring/destructuringArrayBindingPatternAndAssignment1ES5iterable.ts"
Expect Syntax Error: "es6/destructuring/destructuringArrayBindingPatternAndAssignment1ES6.ts"
Expect Syntax Error: "es6/destructuring/destructuringArrayBindingPatternAndAssignment2.ts"
Expect Syntax Error: "es6/destructuring/destructuringArrayBindingPatternAndAssignment3.ts"
Expect Syntax Error: "es6/destructuring/destructuringArrayBindingPatternAndAssignment4.ts"
Expect Syntax Error: "es6/destructuring/destructuringAssignabilityCheck.ts"
Expect Syntax Error: "es6/destructuring/destructuringControlFlow.ts"
Expect Syntax Error: "es6/destructuring/destructuringInFunctionType.ts"
Expect Syntax Error: "es6/destructuring/destructuringObjectBindingPatternAndAssignment4.ts"
Expect Syntax Error: "es6/destructuring/destructuringParameterDeclaration1ES5.ts"
Expect Syntax Error: "es6/destructuring/destructuringParameterDeclaration1ES5iterable.ts"
Expect Syntax Error: "es6/destructuring/destructuringParameterDeclaration1ES6.ts"
Expect Syntax Error: "es6/destructuring/destructuringParameterDeclaration3ES5.ts"
Expect Syntax Error: "es6/destructuring/destructuringParameterDeclaration3ES5iterable.ts"
Expect Syntax Error: "es6/destructuring/destructuringParameterDeclaration3ES6.ts"
Expect Syntax Error: "es6/destructuring/destructuringParameterDeclaration4.ts"
Expect Syntax Error: "es6/destructuring/destructuringParameterDeclaration5.ts"
Expect Syntax Error: "es6/destructuring/destructuringParameterDeclaration8.ts"
Expect Syntax Error: "es6/destructuring/destructuringParameterProperties1.ts"
Expect Syntax Error: "es6/destructuring/destructuringParameterProperties2.ts"
Expect Syntax Error: "es6/destructuring/destructuringParameterProperties3.ts"
Expect Syntax Error: "es6/destructuring/destructuringParameterProperties4.ts"
Expect Syntax Error: "es6/destructuring/destructuringParameterProperties5.ts"
Expect Syntax Error: "es6/destructuring/destructuringSameNames.ts"
Expect Syntax Error: "es6/destructuring/destructuringSpread.ts"
Expect Syntax Error: "es6/destructuring/destructuringTypeAssertionsES5_1.ts"
Expect Syntax Error: "es6/destructuring/destructuringTypeAssertionsES5_2.ts"
Expect Syntax Error: "es6/destructuring/destructuringTypeAssertionsES5_3.ts"
Expect Syntax Error: "es6/destructuring/destructuringTypeAssertionsES5_4.ts"
Expect Syntax Error: "es6/destructuring/destructuringTypeAssertionsES5_6.ts"
Expect Syntax Error: "es6/destructuring/destructuringTypeAssertionsES5_7.ts"
Expect Syntax Error: "es6/destructuring/destructuringVariableDeclaration2.ts"
Expect Syntax Error: "es6/destructuring/destructuringVoidStrictNullChecks.ts"
Expect Syntax Error: "es6/destructuring/destructuringWithLiteralInitializers2.ts"
Expect Syntax Error: "es6/destructuring/iterableArrayPattern10.ts"
Expect Syntax Error: "es6/destructuring/iterableArrayPattern13.ts"
Expect Syntax Error: "es6/destructuring/iterableArrayPattern16.ts"
Expect Syntax Error: "es6/destructuring/iterableArrayPattern17.ts"
Expect Syntax Error: "es6/destructuring/iterableArrayPattern18.ts"
Expect Syntax Error: "es6/destructuring/iterableArrayPattern19.ts"
Expect Syntax Error: "es6/destructuring/iterableArrayPattern21.ts"
Expect Syntax Error: "es6/destructuring/iterableArrayPattern22.ts"
Expect Syntax Error: "es6/destructuring/iterableArrayPattern23.ts"
Expect Syntax Error: "es6/destructuring/iterableArrayPattern24.ts"
Expect Syntax Error: "es6/destructuring/iterableArrayPattern25.ts"
Expect Syntax Error: "es6/destructuring/iterableArrayPattern26.ts"
Expect Syntax Error: "es6/destructuring/iterableArrayPattern28.ts"
Expect Syntax Error: "es6/destructuring/iterableArrayPattern29.ts"
Expect Syntax Error: "es6/destructuring/iterableArrayPattern5.ts"
Expect Syntax Error: "es6/destructuring/iterableArrayPattern6.ts"
Expect Syntax Error: "es6/destructuring/iterableArrayPattern7.ts"
Expect Syntax Error: "es6/destructuring/iterableArrayPattern8.ts"
Expect Syntax Error: "es6/destructuring/missingAndExcessProperties.ts"
Expect Syntax Error: "es6/destructuring/nonIterableRestElement3.ts"
Expect Syntax Error: "es6/destructuring/optionalBindingParameters1.ts"
Expect Syntax Error: "es6/destructuring/optionalBindingParameters2.ts"
Expect Syntax Error: "es6/destructuring/optionalBindingParameters3.ts"
Expect Syntax Error: "es6/destructuring/optionalBindingParametersInOverloads1.ts"
Expect Syntax Error: "es6/destructuring/optionalBindingParametersInOverloads2.ts"
Expect Syntax Error: "es6/destructuring/restElementWithAssignmentPattern2.ts"
Expect Syntax Error: "es6/destructuring/restElementWithAssignmentPattern4.ts"
Expect Syntax Error: "es6/destructuring/restElementWithBindingPattern2.ts"
Expect Syntax Error: "es6/destructuring/restElementWithInitializer1.ts"
Expect Syntax Error: "es6/destructuring/restElementWithNullInitializer.ts"
Expect Syntax Error: "es6/for-ofStatements/for-of10.ts"
Expect Syntax Error: "es6/for-ofStatements/for-of11.ts"
Expect Syntax Error: "es6/for-ofStatements/for-of12.ts"
Expect Syntax Error: "es6/for-ofStatements/for-of14.ts"
Expect Syntax Error: "es6/for-ofStatements/for-of15.ts"
Expect Syntax Error: "es6/for-ofStatements/for-of16.ts"
Expect Syntax Error: "es6/for-ofStatements/for-of17.ts"
Expect Syntax Error: "es6/for-ofStatements/for-of29.ts"
Expect Syntax Error: "es6/for-ofStatements/for-of30.ts"
Expect Syntax Error: "es6/for-ofStatements/for-of32.ts"
Expect Syntax Error: "es6/for-ofStatements/for-of33.ts"
Expect Syntax Error: "es6/for-ofStatements/for-of34.ts"
Expect Syntax Error: "es6/for-ofStatements/for-of35.ts"
Expect Syntax Error: "es6/for-ofStatements/for-of39.ts"
Expect Syntax Error: "es6/for-ofStatements/for-of46.ts"
Expect Syntax Error: "es6/for-ofStatements/for-of47.ts"
Expect Syntax Error: "es6/for-ofStatements/for-of48.ts"
Expect Syntax Error: "es6/for-ofStatements/for-of52.ts"
Expect Syntax Error: "es6/for-ofStatements/for-of54.ts"
Expect Syntax Error: "es6/for-ofStatements/for-of55.ts"
Expect Syntax Error: "es6/for-ofStatements/for-of6.ts"
Expect Syntax Error: "es6/for-ofStatements/for-of7.ts"
Expect Syntax Error: "es6/functionDeclarations/FunctionDeclaration10_es6.ts"
Expect Syntax Error: "es6/functionDeclarations/FunctionDeclaration12_es6.ts"
Expect Syntax Error: "es6/functionDeclarations/FunctionDeclaration13_es6.ts"
Expect Syntax Error: "es6/functionDeclarations/FunctionDeclaration3_es6.ts"
Expect Syntax Error: "es6/functionDeclarations/FunctionDeclaration5_es6.ts"
Expect Syntax Error: "es6/functionDeclarations/FunctionDeclaration6_es6.ts"
Expect Syntax Error: "es6/functionDeclarations/FunctionDeclaration7_es6.ts"
Expect Syntax Error: "es6/functionDeclarations/FunctionDeclaration8_es6.ts"
Expect Syntax Error: "es6/functionPropertyAssignments/FunctionPropertyAssignments5_es6.ts"
Expect Syntax Error: "es6/memberFunctionDeclarations/MemberFunctionDeclaration3_es6.ts"
Expect Syntax Error: "es6/modules/defaultExportsCannotMerge04.ts"
Expect Syntax Error: "es6/modules/importEmptyFromModuleNotExisted.ts"
Expect Syntax Error: "es6/modules/multipleDefaultExports03.ts"
Expect Syntax Error: "es6/modules/multipleDefaultExports04.ts"
Expect Syntax Error: "es6/modules/multipleDefaultExports05.ts"
Expect Syntax Error: "es6/newTarget/invalidNewTarget.es5.ts"
Expect Syntax Error: "es6/newTarget/invalidNewTarget.es6.ts"
Expect Syntax Error: "es6/restParameters/readonlyRestParameters.ts"
Expect Syntax Error: "es6/shorthandPropertyAssignment/objectLiteralShorthandPropertiesAssignmentError.ts"
Expect Syntax Error: "es6/shorthandPropertyAssignment/objectLiteralShorthandPropertiesAssignmentErrorFromMissingIdentifier.ts"
Expect Syntax Error: "es6/shorthandPropertyAssignment/objectLiteralShorthandPropertiesErrorFromNoneExistingIdentifier.ts"
Expect Syntax Error: "es6/shorthandPropertyAssignment/objectLiteralShorthandPropertiesFunctionArgument2.ts"
Expect Syntax Error: "es6/spread/iteratorSpreadInArray10.ts"
Expect Syntax Error: "es6/spread/iteratorSpreadInArray5.ts"
Expect Syntax Error: "es6/spread/iteratorSpreadInArray6.ts"
Expect Syntax Error: "es6/spread/iteratorSpreadInArray8.ts"
Expect Syntax Error: "es6/spread/iteratorSpreadInCall.ts"
Expect Syntax Error: "es6/spread/iteratorSpreadInCall10.ts"
Expect Syntax Error: "es6/spread/iteratorSpreadInCall2.ts"
Expect Syntax Error: "es6/spread/iteratorSpreadInCall4.ts"
Expect Syntax Error: "es6/spread/iteratorSpreadInCall6.ts"
Expect Syntax Error: "es6/spread/iteratorSpreadInCall7.ts"
Expect Syntax Error: "es6/spread/iteratorSpreadInCall8.ts"
Expect Syntax Error: "es6/spread/iteratorSpreadInCall9.ts"
Expect Syntax Error: "es6/templates/taggedTemplateStringsTypeArgumentInference.ts"
Expect Syntax Error: "es6/templates/taggedTemplateStringsTypeArgumentInferenceES6.ts"
Expect Syntax Error: "es6/templates/taggedTemplateStringsWithIncompatibleTypedTags.ts"
Expect Syntax Error: "es6/templates/taggedTemplateStringsWithIncompatibleTypedTagsES6.ts"
Expect Syntax Error: "es6/templates/taggedTemplateStringsWithOverloadResolution1.ts"
Expect Syntax Error: "es6/templates/taggedTemplateStringsWithOverloadResolution1_ES6.ts"
Expect Syntax Error: "es6/templates/taggedTemplateStringsWithOverloadResolution3.ts"
Expect Syntax Error: "es6/templates/taggedTemplateStringsWithOverloadResolution3_ES6.ts"
Expect Syntax Error: "es6/templates/taggedTemplateStringsWithTypeErrorInFunctionExpressionsInSubstitutionExpression.ts"
Expect Syntax Error: "es6/templates/taggedTemplateStringsWithTypeErrorInFunctionExpressionsInSubstitutionExpressionES6.ts"
Expect Syntax Error: "es6/templates/taggedTemplateWithConstructableTag01.ts"
Expect Syntax Error: "es6/templates/taggedTemplateWithConstructableTag02.ts"
Expect Syntax Error: "es6/templates/templateStringBinaryOperationsES6Invalid.ts"
Expect Syntax Error: "es6/templates/templateStringBinaryOperationsInvalid.ts"
Expect Syntax Error: "es6/templates/templateStringInCallExpression.ts"
Expect Syntax Error: "es6/templates/templateStringInCallExpressionES6.ts"
Expect Syntax Error: "es6/templates/templateStringInDeleteExpression.ts"
Expect Syntax Error: "es6/templates/templateStringInDeleteExpressionES6.ts"
Expect Syntax Error: "es6/templates/templateStringInDivision.ts"
Expect Syntax Error: "es6/templates/templateStringInInstanceOf.ts"
Expect Syntax Error: "es6/templates/templateStringInInstanceOfES6.ts"
Expect Syntax Error: "es6/templates/templateStringInModulo.ts"
Expect Syntax Error: "es6/templates/templateStringInModuloES6.ts"
Expect Syntax Error: "es6/templates/templateStringInMultiplication.ts"
Expect Syntax Error: "es6/templates/templateStringInMultiplicationES6.ts"
Expect Syntax Error: "es6/templates/templateStringInNewExpression.ts"
Expect Syntax Error: "es6/templates/templateStringInNewExpressionES6.ts"
Expect Syntax Error: "es6/templates/templateStringInNewOperator.ts"
Expect Syntax Error: "es6/templates/templateStringInNewOperatorES6.ts"
Expect Syntax Error: "es6/templates/templateStringInTaggedTemplate.ts"
Expect Syntax Error: "es6/templates/templateStringInTaggedTemplateES6.ts"
Expect Syntax Error: "es6/templates/templateStringWithEmbeddedInstanceOf.ts"
Expect Syntax Error: "es6/templates/templateStringWithEmbeddedInstanceOfES6.ts"
Expect Syntax Error: "es6/templates/templateStringsWithTypeErrorInFunctionExpressionsInSubstitutionExpression.ts"
Expect Syntax Error: "es6/templates/templateStringsWithTypeErrorInFunctionExpressionsInSubstitutionExpressionES6.ts"
Expect Syntax Error: "es6/yieldExpressions/YieldExpression10_es6.ts"
Expect Syntax Error: "es6/yieldExpressions/YieldExpression11_es6.ts"
Expect Syntax Error: "es6/yieldExpressions/YieldExpression12_es6.ts"
Expect Syntax Error: "es6/yieldExpressions/YieldExpression14_es6.ts"
Expect Syntax Error: "es6/yieldExpressions/YieldExpression15_es6.ts"
Expect Syntax Error: "es6/yieldExpressions/YieldExpression16_es6.ts"
Expect Syntax Error: "es6/yieldExpressions/YieldExpression17_es6.ts"
Expect Syntax Error: "es6/yieldExpressions/YieldExpression18_es6.ts"
Expect Syntax Error: "es6/yieldExpressions/YieldExpression1_es6.ts"
Expect Syntax Error: "es6/yieldExpressions/YieldExpression2_es6.ts"
Expect Syntax Error: "es6/yieldExpressions/YieldExpression6_es6.ts"
Expect Syntax Error: "es6/yieldExpressions/YieldExpression8_es6.ts"
Expect Syntax Error: "es6/yieldExpressions/YieldExpression9_es6.ts"
Expect Syntax Error: "es6/yieldExpressions/YieldStarExpression1_es6.ts"
Expect Syntax Error: "es6/yieldExpressions/generatorInAmbientContext1.ts"
Expect Syntax Error: "es6/yieldExpressions/generatorInAmbientContext2.ts"
Expect Syntax Error: "es6/yieldExpressions/generatorInAmbientContext3.d.ts"
Expect Syntax Error: "es6/yieldExpressions/generatorInAmbientContext4.d.ts"
Expect Syntax Error: "es6/yieldExpressions/generatorOverloads1.ts"
Expect Syntax Error: "es6/yieldExpressions/generatorOverloads2.ts"
Expect Syntax Error: "es6/yieldExpressions/generatorOverloads3.ts"
Expect Syntax Error: "es6/yieldExpressions/generatorTypeCheck18.ts"
Expect Syntax Error: "es6/yieldExpressions/generatorTypeCheck20.ts"
Expect Syntax Error: "es6/yieldExpressions/generatorTypeCheck21.ts"
Expect Syntax Error: "es6/yieldExpressions/generatorTypeCheck25.ts"
Expect Syntax Error: "es6/yieldExpressions/generatorTypeCheck31.ts"
Expect Syntax Error: "es6/yieldExpressions/generatorTypeCheck32.ts"
Expect Syntax Error: "es6/yieldExpressions/generatorTypeCheck39.ts"
Expect Syntax Error: "es6/yieldExpressions/generatorTypeCheck48.ts"
Expect Syntax Error: "es6/yieldExpressions/generatorTypeCheck50.ts"
Expect Syntax Error: "es6/yieldExpressions/generatorTypeCheck57.ts"
Expect Syntax Error: "es6/yieldExpressions/generatorTypeCheck58.ts"
Expect Syntax Error: "es6/yieldExpressions/generatorTypeCheck6.ts"
Expect Syntax Error: "es6/yieldExpressions/generatorTypeCheck63.ts"
Expect Syntax Error: "es6/yieldExpressions/generatorTypeCheck7.ts"
Expect Syntax Error: "es6/yieldExpressions/generatorTypeCheck8.ts"
Expect Syntax Error: "es6/yieldExpressions/generatorTypeCheck9.ts"
Expect Syntax Error: "es7/exponentiationOperator/compoundExponentiationAssignmentLHSCanBeAssigned1.ts"
Expect Syntax Error: "es7/exponentiationOperator/compoundExponentiationAssignmentLHSCannotBeAssigned.ts"
Expect Syntax Error: "es7/exponentiationOperator/emitExponentiationOperator4.ts"
Expect Syntax Error: "es7/exponentiationOperator/exponentiationOperatorInTemplateStringWithSyntaxError1.ts"
Expect Syntax Error: "es7/exponentiationOperator/exponentiationOperatorInTemplateStringWithSyntaxError2.ts"
Expect Syntax Error: "es7/exponentiationOperator/exponentiationOperatorInTemplateStringWithSyntaxError3.ts"
Expect Syntax Error: "es7/exponentiationOperator/exponentiationOperatorSyntaxError1.ts"
Expect Syntax Error: "es7/exponentiationOperator/exponentiationOperatorSyntaxError2.ts"
Expect Syntax Error: "es7/exponentiationOperator/exponentiationOperatorWithInvalidOperands.ts"
Expect Syntax Error: "es7/exponentiationOperator/exponentiationOperatorWithInvalidSimpleUnaryExpressionOperands.ts"
Expect Syntax Error: "es7/exponentiationOperator/exponentiationOperatorWithNew.ts"
Expect Syntax Error: "es7/exponentiationOperator/exponentiationOperatorWithNullValueAndInvalidOperands.ts"
Expect Syntax Error: "es7/exponentiationOperator/exponentiationOperatorWithNullValueAndValidOperands.ts"
Expect Syntax Error: "es7/exponentiationOperator/exponentiationOperatorWithOnlyNullValueOrUndefinedValue.ts"
Expect Syntax Error: "es7/exponentiationOperator/exponentiationOperatorWithTemplateStringInvalid.ts"
Expect Syntax Error: "es7/exponentiationOperator/exponentiationOperatorWithTemplateStringInvalidES6.ts"
Expect Syntax Error: "es7/exponentiationOperator/exponentiationOperatorWithTypeParameter.ts"
Expect Syntax Error: "es7/exponentiationOperator/exponentiationOperatorWithUndefinedValueAndInvalidOperands.ts"
Expect Syntax Error: "es7/exponentiationOperator/exponentiationOperatorWithUndefinedValueAndValidOperands.ts"
Expect Syntax Error: "esDecorators/classDeclaration/accessors/esDecorators-classDeclaration-accessors-nonStaticAbstract.ts"
Expect Syntax Error: "esDecorators/classDeclaration/esDecorators-classDeclaration-parameterDecorators.ts"
Expect Syntax Error: "esDecorators/classDeclaration/fields/esDecorators-classDeclaration-fields-nonStaticAbstract.ts"
Expect Syntax Error: "esDecorators/classDeclaration/fields/esDecorators-classDeclaration-fields-nonStaticAbstractAccessor.ts"
Expect Syntax Error: "esDecorators/classDeclaration/fields/esDecorators-classDeclaration-fields-nonStaticAmbient.ts"
Expect Syntax Error: "esDecorators/classDeclaration/fields/esDecorators-classDeclaration-fields-staticAmbient.ts"
Expect Syntax Error: "esDecorators/classDeclaration/methods/esDecorators-classDeclaration-methods-nonStaticAbstract.ts"
Expect Syntax Error: "esDecorators/esDecorators-arguments.ts"
Expect Syntax Error: "expressions/arrayLiterals/arrayLiterals.ts"
Expect Syntax Error: "expressions/arrayLiterals/arrayLiterals3.ts"
Expect Syntax Error: "expressions/asOperator/asOperator2.ts"
Expect Syntax Error: "expressions/asOperator/asOperatorAmbiguity.ts"
Expect Syntax Error: "expressions/asOperator/asOperatorContextualType.ts"
Expect Syntax Error: "expressions/asOperator/asOperatorNames.ts"
Expect Syntax Error: "expressions/assignmentOperator/compoundAdditionAssignmentLHSCanBeAssigned.ts"
Expect Syntax Error: "expressions/assignmentOperator/compoundAdditionAssignmentLHSCannotBeAssigned.ts"
Expect Syntax Error: "expressions/assignmentOperator/compoundAdditionAssignmentWithInvalidOperands.ts"
Expect Syntax Error: "expressions/assignmentOperator/compoundArithmeticAssignmentLHSCanBeAssigned.ts"
Expect Syntax Error: "expressions/assignmentOperator/compoundArithmeticAssignmentWithInvalidOperands.ts"
Expect Syntax Error: "expressions/binaryOperators/additionOperator/additionOperatorWithInvalidOperands.ts"
Expect Syntax Error: "expressions/binaryOperators/additionOperator/additionOperatorWithNullValueAndInvalidOperator.ts"
Expect Syntax Error: "expressions/binaryOperators/additionOperator/additionOperatorWithNullValueAndValidOperator.ts"
Expect Syntax Error: "expressions/binaryOperators/additionOperator/additionOperatorWithOnlyNullValueOrUndefinedValue.ts"
Expect Syntax Error: "expressions/binaryOperators/additionOperator/additionOperatorWithTypeParameter.ts"
Expect Syntax Error: "expressions/binaryOperators/additionOperator/additionOperatorWithUndefinedValueAndInvalidOperands.ts"
Expect Syntax Error: "expressions/binaryOperators/additionOperator/additionOperatorWithUndefinedValueAndValidOperator.ts"
Expect Syntax Error: "expressions/binaryOperators/arithmeticOperator/arithmeticOperatorWithInvalidOperands.ts"
Expect Syntax Error: "expressions/binaryOperators/arithmeticOperator/arithmeticOperatorWithNullValueAndInvalidOperands.ts"
Expect Syntax Error: "expressions/binaryOperators/arithmeticOperator/arithmeticOperatorWithNullValueAndValidOperands.ts"
Expect Syntax Error: "expressions/binaryOperators/arithmeticOperator/arithmeticOperatorWithOnlyNullValueOrUndefinedValue.ts"
Expect Syntax Error: "expressions/binaryOperators/arithmeticOperator/arithmeticOperatorWithTypeParameter.ts"
Expect Syntax Error: "expressions/binaryOperators/arithmeticOperator/arithmeticOperatorWithUndefinedValueAndInvalidOperands.ts"
Expect Syntax Error: "expressions/binaryOperators/arithmeticOperator/arithmeticOperatorWithUndefinedValueAndValidOperands.ts"
Expect Syntax Error: "expressions/binaryOperators/comparisonOperator/comparisonOperatorWithIdenticalPrimitiveType.ts"
Expect Syntax Error: "expressions/binaryOperators/comparisonOperator/comparisonOperatorWithIntersectionType.ts"
Expect Syntax Error: "expressions/binaryOperators/comparisonOperator/comparisonOperatorWithNoRelationshipObjectsOnCallSignature.ts"
Expect Syntax Error: "expressions/binaryOperators/comparisonOperator/comparisonOperatorWithNoRelationshipObjectsOnConstructorSignature.ts"
Expect Syntax Error: "expressions/binaryOperators/comparisonOperator/comparisonOperatorWithNoRelationshipObjectsOnIndexSignature.ts"
Expect Syntax Error: "expressions/binaryOperators/comparisonOperator/comparisonOperatorWithNoRelationshipObjectsOnOptionalProperty.ts"
Expect Syntax Error: "expressions/binaryOperators/comparisonOperator/comparisonOperatorWithNoRelationshipObjectsOnProperty.ts"
Expect Syntax Error: "expressions/binaryOperators/comparisonOperator/comparisonOperatorWithNoRelationshipPrimitiveType.ts"
Expect Syntax Error: "expressions/binaryOperators/comparisonOperator/comparisonOperatorWithNoRelationshipTypeParameter.ts"
Expect Syntax Error: "expressions/binaryOperators/comparisonOperator/comparisonOperatorWithNumberOperand.ts"
Expect Syntax Error: "expressions/binaryOperators/comparisonOperator/comparisonOperatorWithOneOperandIsNull.ts"
Expect Syntax Error: "expressions/binaryOperators/comparisonOperator/comparisonOperatorWithTypeParameter.ts"
Expect Syntax Error: "expressions/binaryOperators/inOperator/inOperatorWithInvalidOperands.ts"
Expect Syntax Error: "expressions/binaryOperators/inOperator/inOperatorWithValidOperands.ts"
Expect Syntax Error: "expressions/binaryOperators/instanceofOperator/instanceofOperatorWithInvalidOperands.ts"
Expect Syntax Error: "expressions/binaryOperators/logicalAndOperator/logicalAndOperatorStrictMode.ts"
Expect Syntax Error: "expressions/binaryOperators/logicalAndOperator/logicalAndOperatorWithEveryType.ts"
Expect Syntax Error: "expressions/binaryOperators/logicalOrOperator/logicalOrExpressionIsContextuallyTyped.ts"
Expect Syntax Error: "expressions/binaryOperators/logicalOrOperator/logicalOrOperatorWithEveryType.ts"
Expect Syntax Error: "expressions/commaOperator/commaOperatorInvalidAssignmentType.ts"
Expect Syntax Error: "expressions/commaOperator/commaOperatorOtherInvalidOperation.ts"
Expect Syntax Error: "expressions/conditonalOperator/conditionalOperatorConditionIsObjectType.ts"
Expect Syntax Error: "expressions/conditonalOperator/conditionalOperatorWithoutIdenticalBCT.ts"
Expect Syntax Error: "expressions/contextualTyping/argumentExpressionContextualTyping.ts"
Expect Syntax Error: "expressions/contextualTyping/arrayLiteralExpressionContextualTyping.ts"
Expect Syntax Error: "expressions/contextualTyping/functionExpressionContextualTyping2.ts"
Expect Syntax Error: "expressions/contextualTyping/getSetAccessorContextualTyping.ts"
Expect Syntax Error: "expressions/contextualTyping/objectLiteralContextualTyping.ts"
Expect Syntax Error: "expressions/contextualTyping/parenthesizedContexualTyping1.ts"
Expect Syntax Error: "expressions/contextualTyping/parenthesizedContexualTyping2.ts"
Expect Syntax Error: "expressions/contextualTyping/superCallParameterContextualTyping2.ts"
Expect Syntax Error: "expressions/functionCalls/callOverload.ts"
Expect Syntax Error: "expressions/functionCalls/callWithMissingVoid.ts"
Expect Syntax Error: "expressions/functionCalls/callWithSpread2.ts"
Expect Syntax Error: "expressions/functionCalls/callWithSpread3.ts"
Expect Syntax Error: "expressions/functionCalls/callWithSpread4.ts"
Expect Syntax Error: "expressions/functionCalls/callWithSpread5.ts"
Expect Syntax Error: "expressions/functionCalls/forgottenNew.ts"
Expect Syntax Error: "expressions/functionCalls/functionCalls.ts"
Expect Syntax Error: "expressions/functionCalls/grammarAmbiguities.ts"
Expect Syntax Error: "expressions/functionCalls/overloadResolution.ts"
Expect Syntax Error: "expressions/functionCalls/overloadResolutionClassConstructors.ts"
Expect Syntax Error: "expressions/functionCalls/overloadResolutionConstructors.ts"
Expect Syntax Error: "expressions/functionCalls/typeArgumentInference.ts"
Expect Syntax Error: "expressions/functionCalls/typeArgumentInferenceConstructSignatures.ts"
Expect Syntax Error: "expressions/functionCalls/typeArgumentInferenceErrors.ts"
Expect Syntax Error: "expressions/functionCalls/typeArgumentInferenceWithConstraints.ts"
Expect Syntax Error: "expressions/functionCalls/typeArgumentInferenceWithObjectLiteral.ts"
Expect Syntax Error: "expressions/functions/contextuallyTypedIifeStrict.ts"
Expect Syntax Error: "expressions/identifiers/scopeResolutionIdentifiers.ts"
Expect Syntax Error: "expressions/literals/literals.ts"
Expect Syntax Error: "expressions/literals/strictModeOctalLiterals.ts"
Expect Syntax Error: "expressions/newOperator/newOperatorErrorCases_noImplicitAny.ts"
Expect Syntax Error: "expressions/nullishCoalescingOperator/nullishCoalescingOperator11.ts"
Expect Syntax Error: "expressions/nullishCoalescingOperator/nullishCoalescingOperator4.ts"
Expect Syntax Error: "expressions/nullishCoalescingOperator/nullishCoalescingOperator5.ts"
Expect Syntax Error: "expressions/nullishCoalescingOperator/nullishCoalescingOperatorInParameterBindingPattern.2.ts"
Expect Syntax Error: "expressions/nullishCoalescingOperator/nullishCoalescingOperatorInParameterInitializer.2.ts"
Expect Syntax Error: "expressions/objectLiterals/objectLiteralErrorsES3.ts"
Expect Syntax Error: "expressions/objectLiterals/objectLiteralNormalization.ts"
Expect Syntax Error: "expressions/optionalChaining/callChain/callChain.3.ts"
Expect Syntax Error: "expressions/optionalChaining/delete/deleteChain.ts"
Expect Syntax Error: "expressions/optionalChaining/optionalChainingInParameterBindingPattern.2.ts"
Expect Syntax Error: "expressions/optionalChaining/optionalChainingInParameterInitializer.2.ts"
Expect Syntax Error: "expressions/optionalChaining/privateIdentifierChain/privateIdentifierChain.1.ts"
Expect Syntax Error: "expressions/propertyAccess/propertyAccess.ts"
Expect Syntax Error: "expressions/propertyAccess/propertyAccessNumericLiterals.ts"
Expect Syntax Error: "expressions/propertyAccess/propertyAccessStringIndexSignature.ts"
Expect Syntax Error: "expressions/propertyAccess/propertyAccessStringIndexSignatureNoImplicitAny.ts"
Expect Syntax Error: "expressions/propertyAccess/propertyAccessWidening.ts"
Expect Syntax Error: "expressions/superPropertyAccess/errorSuperPropertyAccess.ts"
Expect Syntax Error: "expressions/superPropertyAccess/superSymbolIndexedAccess3.ts"
Expect Syntax Error: "expressions/superPropertyAccess/superSymbolIndexedAccess4.ts"
Expect Syntax Error: "expressions/thisKeyword/thisInInvalidContexts.ts"
Expect Syntax Error: "expressions/thisKeyword/thisInInvalidContextsExternalModule.ts"
Expect Syntax Error: "expressions/thisKeyword/thisInObjectLiterals.ts"
Expect Syntax Error: "expressions/thisKeyword/typeOfThisGeneral.ts"
Expect Syntax Error: "expressions/thisKeyword/typeOfThisInConstructorParamList.ts"
Expect Syntax Error: "expressions/typeAssertions/constAssertions.ts"
Expect Syntax Error: "expressions/typeAssertions/duplicatePropertiesInTypeAssertions01.ts"
Expect Syntax Error: "expressions/typeAssertions/duplicatePropertiesInTypeAssertions02.ts"
Expect Syntax Error: "expressions/typeGuards/typeGuardFunctionOfFormThisErrors.ts"
Expect Syntax Error: "expressions/typeGuards/typeGuardInClass.ts"
Expect Syntax Error: "expressions/typeGuards/typeGuardOfFormTypeOfEqualEqualHasNoEffect.ts"
Expect Syntax Error: "expressions/typeGuards/typeGuardOfFormTypeOfNotEqualHasNoEffect.ts"
Expect Syntax Error: "expressions/typeGuards/typeGuardOfFormTypeOfOther.ts"
Expect Syntax Error: "expressions/typeGuards/typeGuardsDefeat.ts"
Expect Syntax Error: "expressions/typeGuards/typeGuardsInIfStatement.ts"
Expect Syntax Error: "expressions/typeGuards/typeGuardsWithAny.ts"
Expect Syntax Error: "expressions/typeGuards/typeGuardsWithInstanceOf.ts"
Expect Syntax Error: "expressions/typeGuards/typeGuardsWithInstanceOfByConstructorSignature.ts"
Expect Syntax Error: "expressions/unaryOperators/bitwiseNotOperator/bitwiseNotOperatorWithAnyOtherType.ts"
Expect Syntax Error: "expressions/unaryOperators/decrementOperator/decrementOperatorWithEnumType.ts"
Expect Syntax Error: "expressions/unaryOperators/deleteOperator/deleteOperatorWithAnyOtherType.ts"
Expect Syntax Error: "expressions/unaryOperators/deleteOperator/deleteOperatorWithBooleanType.ts"
Expect Syntax Error: "expressions/unaryOperators/deleteOperator/deleteOperatorWithEnumType.ts"
Expect Syntax Error: "expressions/unaryOperators/deleteOperator/deleteOperatorWithNumberType.ts"
Expect Syntax Error: "expressions/unaryOperators/deleteOperator/deleteOperatorWithStringType.ts"
Expect Syntax Error: "expressions/unaryOperators/incrementOperator/incrementOperatorWithEnumType.ts"
Expect Syntax Error: "expressions/unaryOperators/logicalNotOperator/logicalNotOperatorWithAnyOtherType.ts"
Expect Syntax Error: "expressions/unaryOperators/logicalNotOperator/logicalNotOperatorWithBooleanType.ts"
Expect Syntax Error: "expressions/unaryOperators/logicalNotOperator/logicalNotOperatorWithEnumType.ts"
Expect Syntax Error: "expressions/unaryOperators/logicalNotOperator/logicalNotOperatorWithNumberType.ts"
Expect Syntax Error: "expressions/unaryOperators/logicalNotOperator/logicalNotOperatorWithStringType.ts"
Expect Syntax Error: "expressions/unaryOperators/negateOperator/negateOperatorWithAnyOtherType.ts"
Expect Syntax Error: "expressions/unaryOperators/negateOperator/negateOperatorWithBooleanType.ts"
Expect Syntax Error: "expressions/unaryOperators/negateOperator/negateOperatorWithEnumType.ts"
Expect Syntax Error: "expressions/unaryOperators/negateOperator/negateOperatorWithNumberType.ts"
Expect Syntax Error: "expressions/unaryOperators/negateOperator/negateOperatorWithStringType.ts"
Expect Syntax Error: "expressions/unaryOperators/plusOperator/plusOperatorWithAnyOtherType.ts"
Expect Syntax Error: "expressions/unaryOperators/plusOperator/plusOperatorWithBooleanType.ts"
Expect Syntax Error: "expressions/unaryOperators/plusOperator/plusOperatorWithEnumType.ts"
Expect Syntax Error: "expressions/unaryOperators/plusOperator/plusOperatorWithNumberType.ts"
Expect Syntax Error: "expressions/unaryOperators/plusOperator/plusOperatorWithStringType.ts"
Expect Syntax Error: "expressions/unaryOperators/typeofOperator/typeofOperatorWithAnyOtherType.ts"
Expect Syntax Error: "expressions/unaryOperators/typeofOperator/typeofOperatorWithBooleanType.ts"
Expect Syntax Error: "expressions/unaryOperators/typeofOperator/typeofOperatorWithEnumType.ts"
Expect Syntax Error: "expressions/unaryOperators/typeofOperator/typeofOperatorWithNumberType.ts"
Expect Syntax Error: "expressions/unaryOperators/typeofOperator/typeofOperatorWithStringType.ts"
Expect Syntax Error: "expressions/unaryOperators/voidOperator/voidOperatorWithAnyOtherType.ts"
Expect Syntax Error: "expressions/valuesAndReferences/assignmentToParenthesizedIdentifiers.ts"
Expect Syntax Error: "expressions/valuesAndReferences/assignments.ts"
Expect Syntax Error: "externalModules/es6/es6modulekindWithES5Target10.ts"
Expect Syntax Error: "externalModules/es6/es6modulekindWithES5Target9.ts"
Expect Syntax Error: "externalModules/esnext/esnextmodulekindWithES5Target10.ts"
Expect Syntax Error: "externalModules/esnext/esnextmodulekindWithES5Target9.ts"
Expect Syntax Error: "externalModules/exportAssignmentAndDeclaration.ts"
Expect Syntax Error: "externalModules/exportClassNameWithObjectAMD.ts"
Expect Syntax Error: "externalModules/exportClassNameWithObjectCommonJS.ts"
Expect Syntax Error: "externalModules/exportClassNameWithObjectSystem.ts"
Expect Syntax Error: "externalModules/exportClassNameWithObjectUMD.ts"
Expect Syntax Error: "externalModules/exportDefaultClassNameWithObject.ts"
Expect Syntax Error: "externalModules/exportNonLocalDeclarations.ts"
Expect Syntax Error: "externalModules/initializersInDeclarations.ts"
Expect Syntax Error: "externalModules/moduleResolutionWithoutExtension2.ts"
Expect Syntax Error: "externalModules/moduleResolutionWithoutExtension5.ts"
Expect Syntax Error: "externalModules/moduleResolutionWithoutExtension6.ts"
Expect Syntax Error: "externalModules/moduleResolutionWithoutExtension7.ts"
Expect Syntax Error: "externalModules/moduleResolutionWithoutExtension8.ts"
Expect Syntax Error: "externalModules/multipleExportDefault1.ts"
Expect Syntax Error: "externalModules/multipleExportDefault2.ts"
Expect Syntax Error: "externalModules/multipleExportDefault3.ts"
Expect Syntax Error: "externalModules/multipleExportDefault4.ts"
Expect Syntax Error: "externalModules/multipleExportDefault5.ts"
Expect Syntax Error: "externalModules/multipleExportDefault6.ts"
Expect Syntax Error: "externalModules/topLevelAwaitNonModule.ts"
Expect Syntax Error: "externalModules/typeOnly/exportSpecifiers_js.ts"
Expect Syntax Error: "externalModules/typeOnly/preserveValueImports_module.ts"
Expect Syntax Error: "externalModules/verbatimModuleSyntaxCompat.ts"
Expect Syntax Error: "externalModules/verbatimModuleSyntaxInternalImportEquals.ts"
Expect Syntax Error: "fixSignatureCaching.ts"
Expect Syntax Error: "functions/functionImplementationErrors.ts"
Expect Syntax Error: "functions/functionImplementations.ts"
Expect Syntax Error: "functions/functionNameConflicts.ts"
Expect Syntax Error: "functions/functionOverloadCompatibilityWithVoid01.ts"
Expect Syntax Error: "functions/functionOverloadErrors.ts"
Expect Syntax Error: "functions/functionWithUseStrictAndSimpleParameterList_es2016.ts"
Expect Syntax Error: "functions/parameterInitializersForwardReferencing.2.ts"
Expect Syntax Error: "functions/parameterInitializersForwardReferencing.ts"
Expect Syntax Error: "functions/parameterInitializersForwardReferencing1.ts"
Expect Syntax Error: "functions/parameterInitializersForwardReferencing1_es6.ts"
Expect Syntax Error: "functions/strictBindCallApply1.ts"
Expect Syntax Error: "generators/generatorAssignability.ts"
Expect Syntax Error: "generators/generatorExplicitReturnType.ts"
Expect Syntax Error: "generators/generatorImplicitAny.ts"
Expect Syntax Error: "generators/generatorReturnContextualType.ts"
Expect Syntax Error: "generators/generatorReturnTypeFallback.2.ts"
Expect Syntax Error: "generators/generatorReturnTypeFallback.3.ts"
Expect Syntax Error: "generators/generatorReturnTypeInference.ts"
Expect Syntax Error: "generators/generatorReturnTypeInferenceNonStrict.ts"
Expect Syntax Error: "interfaces/declarationMerging/genericAndNonGenericInterfaceWithTheSameName.ts"
Expect Syntax Error: "interfaces/declarationMerging/mergedInheritedMembersSatisfyAbstractBase.ts"
Expect Syntax Error: "interfaces/declarationMerging/mergedInterfacesWithConflictingPropertyNames.ts"
Expect Syntax Error: "interfaces/declarationMerging/mergedInterfacesWithIndexers2.ts"
Expect Syntax Error: "interfaces/declarationMerging/mergedInterfacesWithInheritedPrivates.ts"
Expect Syntax Error: "interfaces/declarationMerging/mergedInterfacesWithInheritedPrivates2.ts"
Expect Syntax Error: "interfaces/declarationMerging/mergedInterfacesWithInheritedPrivates3.ts"
Expect Syntax Error: "interfaces/declarationMerging/mergedInterfacesWithMultipleBases4.ts"
Expect Syntax Error: "interfaces/declarationMerging/twoGenericInterfacesDifferingByTypeParameterName.ts"
Expect Syntax Error: "interfaces/declarationMerging/twoGenericInterfacesDifferingByTypeParameterName2.ts"
Expect Syntax Error: "interfaces/declarationMerging/twoGenericInterfacesWithDifferentConstraints.ts"
Expect Syntax Error: "interfaces/declarationMerging/twoGenericInterfacesWithTheSameNameButDifferentArity.ts"
Expect Syntax Error: "interfaces/declarationMerging/twoInterfacesDifferentRootModule.ts"
Expect Syntax Error: "interfaces/declarationMerging/twoInterfacesDifferentRootModule2.ts"
Expect Syntax Error: "interfaces/interfaceDeclarations/asiPreventsParsingAsInterface05.ts"
Expect Syntax Error: "interfaces/interfaceDeclarations/derivedInterfaceIncompatibleWithBaseIndexer.ts"
Expect Syntax Error: "interfaces/interfaceDeclarations/interfaceExtendingOptionalChain.ts"
Expect Syntax Error: "interfaces/interfaceDeclarations/interfaceExtendsObjectIntersectionErrors.ts"
Expect Syntax Error: "interfaces/interfaceDeclarations/interfaceThatHidesBaseProperty2.ts"
Expect Syntax Error: "interfaces/interfaceDeclarations/interfaceThatIndirectlyInheritsFromItself.ts"
Expect Syntax Error: "interfaces/interfaceDeclarations/interfaceThatInheritsFromItself.ts"
Expect Syntax Error: "interfaces/interfaceDeclarations/interfaceWithAccessibilityModifiers.ts"
Expect Syntax Error: "interfaces/interfaceDeclarations/interfaceWithMultipleBaseTypes.ts"
Expect Syntax Error: "interfaces/interfaceDeclarations/interfaceWithMultipleBaseTypes2.ts"
Expect Syntax Error: "interfaces/interfaceDeclarations/interfaceWithPropertyThatIsPrivateInBaseType.ts"
Expect Syntax Error: "interfaces/interfaceDeclarations/interfaceWithPropertyThatIsPrivateInBaseType2.ts"
Expect Syntax Error: "interfaces/interfaceDeclarations/interfaceWithStringIndexerHidingBaseTypeIndexer.ts"
Expect Syntax Error: "interfaces/interfaceDeclarations/interfaceWithStringIndexerHidingBaseTypeIndexer2.ts"
Expect Syntax Error: "interfaces/interfaceDeclarations/interfaceWithStringIndexerHidingBaseTypeIndexer3.ts"
Expect Syntax Error: "interfaces/interfacesExtendingClasses/implementingAnInterfaceExtendingClassWithPrivates.ts"
Expect Syntax Error: "interfaces/interfacesExtendingClasses/implementingAnInterfaceExtendingClassWithPrivates2.ts"
Expect Syntax Error: "interfaces/interfacesExtendingClasses/implementingAnInterfaceExtendingClassWithProtecteds.ts"
Expect Syntax Error: "interfaces/interfacesExtendingClasses/interfaceExtendingClassWithPrivates.ts"
Expect Syntax Error: "interfaces/interfacesExtendingClasses/interfaceExtendingClassWithPrivates2.ts"
Expect Syntax Error: "interfaces/interfacesExtendingClasses/interfaceExtendingClassWithProtecteds.ts"
Expect Syntax Error: "interfaces/interfacesExtendingClasses/interfaceExtendingClassWithProtecteds2.ts"
Expect Syntax Error: "internalModules/DeclarationMerging/ClassAndModuleThatMergeWithModuleMemberThatUsesClassTypeParameter.ts"
Expect Syntax Error: "internalModules/DeclarationMerging/ClassAndModuleThatMergeWithModulesExportedGenericFunctionAndGenericClassStaticFunctionOfTheSameName.ts"
Expect Syntax Error: "internalModules/DeclarationMerging/ClassAndModuleThatMergeWithModulesExportedGenericFunctionAndNonGenericClassStaticFunctionOfTheSameName.ts"
Expect Syntax Error: "internalModules/DeclarationMerging/ClassAndModuleThatMergeWithModulesExportedStaticFunctionUsingClassPrivateStatics.ts"
Expect Syntax Error: "internalModules/DeclarationMerging/ClassAndModuleThatMergeWithStaticFunctionAndExportedFunctionThatShareAName.ts"
Expect Syntax Error: "internalModules/DeclarationMerging/ClassAndModuleThatMergeWithStaticVariableAndExportedVarThatShareAName.ts"
Expect Syntax Error: "internalModules/DeclarationMerging/TwoInternalModulesThatMergeEachWithExportedClassesOfTheSameName.ts"
Expect Syntax Error: "internalModules/codeGeneration/importStatementsInterfaces.ts"
Expect Syntax Error: "internalModules/exportDeclarations/ModuleWithExportedAndNonExportedClasses.ts"
Expect Syntax Error: "internalModules/exportDeclarations/ModuleWithExportedAndNonExportedEnums.ts"
Expect Syntax Error: "internalModules/exportDeclarations/ModuleWithExportedAndNonExportedFunctions.ts"
Expect Syntax Error: "internalModules/exportDeclarations/ModuleWithExportedAndNonExportedImportAlias.ts"
Expect Syntax Error: "internalModules/exportDeclarations/ModuleWithExportedAndNonExportedVariables.ts"
Expect Syntax Error: "internalModules/importDeclarations/circularImportAlias.ts"
Expect Syntax Error: "internalModules/importDeclarations/invalidImportAliasIdentifiers.ts"
Expect Syntax Error: "internalModules/importDeclarations/shadowedInternalModule.ts"
Expect Syntax Error: "internalModules/moduleBody/invalidModuleWithStatementsOfEveryKind.ts"
Expect Syntax Error: "internalModules/moduleBody/invalidModuleWithVarStatements.ts"
Expect Syntax Error: "internalModules/moduleDeclarations/InvalidNonInstantiatedModule.ts"
Expect Syntax Error: "internalModules/moduleDeclarations/invalidInstantiatedModule.ts"
Expect Syntax Error: "internalModules/moduleDeclarations/invalidNestedModules.ts"
Expect Syntax Error: "jsdoc/assertionsAndNonReturningFunctions.ts"
Expect Syntax Error: "jsdoc/callOfPropertylessConstructorFunction.ts"
Expect Syntax Error: "jsdoc/callbackTag2.ts"
Expect Syntax Error: "jsdoc/checkJsdocOnEndOfFile.ts"
Expect Syntax Error: "jsdoc/checkJsdocOptionalParamOrder.ts"
Expect Syntax Error: "jsdoc/checkJsdocParamOnVariableDeclaredFunctionExpression.ts"
Expect Syntax Error: "jsdoc/checkJsdocReturnTag1.ts"
Expect Syntax Error: "jsdoc/checkJsdocReturnTag2.ts"
Expect Syntax Error: "jsdoc/checkJsdocSatisfiesTag1.ts"
Expect Syntax Error: "jsdoc/checkJsdocSatisfiesTag10.ts"
Expect Syntax Error: "jsdoc/checkJsdocSatisfiesTag11.ts"
Expect Syntax Error: "jsdoc/checkJsdocSatisfiesTag12.ts"
Expect Syntax Error: "jsdoc/checkJsdocSatisfiesTag13.ts"
Expect Syntax Error: "jsdoc/checkJsdocSatisfiesTag14.ts"
Expect Syntax Error: "jsdoc/checkJsdocSatisfiesTag3.ts"
Expect Syntax Error: "jsdoc/checkJsdocSatisfiesTag6.ts"
Expect Syntax Error: "jsdoc/checkJsdocSatisfiesTag7.ts"
Expect Syntax Error: "jsdoc/checkJsdocSatisfiesTag8.ts"
Expect Syntax Error: "jsdoc/checkJsdocSatisfiesTag9.ts"
Expect Syntax Error: "jsdoc/checkJsdocTypeTag1.ts"
Expect Syntax Error: "jsdoc/checkJsdocTypeTag2.ts"
Expect Syntax Error: "jsdoc/checkJsdocTypeTag5.ts"
Expect Syntax Error: "jsdoc/checkJsdocTypeTag6.ts"
Expect Syntax Error: "jsdoc/checkJsdocTypeTagOnObjectProperty2.ts"
Expect Syntax Error: "jsdoc/checkJsdocTypedefOnlySourceFile.ts"
Expect Syntax Error: "jsdoc/constructorTagOnObjectLiteralMethod.ts"
Expect Syntax Error: "jsdoc/declarations/jsDeclarationsClassLikeHeuristic.ts"
Expect Syntax Error: "jsdoc/declarations/jsDeclarationsClassesErr.ts"
Expect Syntax Error: "jsdoc/declarations/jsDeclarationsEnums.ts"
Expect Syntax Error: "jsdoc/declarations/jsDeclarationsExportAssignedConstructorFunctionWithSub.ts"
Expect Syntax Error: "jsdoc/declarations/jsDeclarationsInterfaces.ts"
Expect Syntax Error: "jsdoc/enumTag.ts"
Expect Syntax Error: "jsdoc/enumTagCircularReference.ts"
Expect Syntax Error: "jsdoc/errorOnFunctionReturnType.ts"
Expect Syntax Error: "jsdoc/extendsTag2.ts"
Expect Syntax Error: "jsdoc/extendsTag4.ts"
Expect Syntax Error: "jsdoc/jsdocAccessibilityTags.ts"
Expect Syntax Error: "jsdoc/jsdocAccessibilityTagsDeclarations.ts"
Expect Syntax Error: "jsdoc/jsdocAugmentsMissingType.ts"
Expect Syntax Error: "jsdoc/jsdocAugments_errorInExtendsExpression.ts"
Expect Syntax Error: "jsdoc/jsdocAugments_nameMismatch.ts"
Expect Syntax Error: "jsdoc/jsdocAugments_noExtends.ts"
Expect Syntax Error: "jsdoc/jsdocAugments_notAClass.ts"
Expect Syntax Error: "jsdoc/jsdocCatchClauseWithTypeAnnotation.ts"
Expect Syntax Error: "jsdoc/jsdocFunctionType.ts"
Expect Syntax Error: "jsdoc/jsdocFunction_missingReturn.ts"
Expect Syntax Error: "jsdoc/jsdocImplements_class.ts"
Expect Syntax Error: "jsdoc/jsdocImplements_missingType.ts"
Expect Syntax Error: "jsdoc/jsdocImplements_properties.ts"
Expect Syntax Error: "jsdoc/jsdocIndexSignature.ts"
Expect Syntax Error: "jsdoc/jsdocLiteral.ts"
Expect Syntax Error: "jsdoc/jsdocNeverUndefinedNull.ts"
Expect Syntax Error: "jsdoc/jsdocOuterTypeParameters1.ts"
Expect Syntax Error: "jsdoc/jsdocOuterTypeParameters2.ts"
Expect Syntax Error: "jsdoc/jsdocOuterTypeParameters3.ts"
Expect Syntax Error: "jsdoc/jsdocOverrideTag1.ts"
Expect Syntax Error: "jsdoc/jsdocParamTag2.ts"
Expect Syntax Error: "jsdoc/jsdocParamTagTypeLiteral.ts"
Expect Syntax Error: "jsdoc/jsdocParseDotDotDotInJSDocFunction.ts"
Expect Syntax Error: "jsdoc/jsdocPostfixEqualsAddsOptionality.ts"
Expect Syntax Error: "jsdoc/jsdocPrefixPostfixParsing.ts"
Expect Syntax Error: "jsdoc/jsdocPrivateName1.ts"
Expect Syntax Error: "jsdoc/jsdocPrivateName2.ts"
Expect Syntax Error: "jsdoc/jsdocPrototypePropertyAccessWithType.ts"
Expect Syntax Error: "jsdoc/jsdocReadonly.ts"
Expect Syntax Error: "jsdoc/jsdocReadonlyDeclarations.ts"
Expect Syntax Error: "jsdoc/jsdocReturnTag1.ts"
Expect Syntax Error: "jsdoc/jsdocTemplateClass.ts"
Expect Syntax Error: "jsdoc/jsdocTemplateConstructorFunction.ts"
Expect Syntax Error: "jsdoc/jsdocTemplateConstructorFunction2.ts"
Expect Syntax Error: "jsdoc/jsdocTemplateTag.ts"
Expect Syntax Error: "jsdoc/jsdocTemplateTag3.ts"
Expect Syntax Error: "jsdoc/jsdocTemplateTagDefault.ts"
Expect Syntax Error: "jsdoc/jsdocTemplateTagNameResolution.ts"
Expect Syntax Error: "jsdoc/jsdocTypeFromChainedAssignment.ts"
Expect Syntax Error: "jsdoc/jsdocTypeTagParameterType.ts"
Expect Syntax Error: "jsdoc/jsdocTypeTagRequiredParameters.ts"
Expect Syntax Error: "jsdoc/noAssertForUnparseableTypedefs.ts"
Expect Syntax Error: "jsdoc/noDuplicateJsdoc1.ts"
Expect Syntax Error: "jsdoc/overloadTag1.ts"
Expect Syntax Error: "jsdoc/overloadTag2.ts"
Expect Syntax Error: "jsdoc/paramTagNestedWithoutTopLevelObject.ts"
Expect Syntax Error: "jsdoc/paramTagNestedWithoutTopLevelObject2.ts"
Expect Syntax Error: "jsdoc/paramTagNestedWithoutTopLevelObject3.ts"
Expect Syntax Error: "jsdoc/paramTagNestedWithoutTopLevelObject4.ts"
Expect Syntax Error: "jsdoc/typeTagCircularReferenceOnConstructorFunction.ts"
Expect Syntax Error: "jsdoc/typeTagModuleExports.ts"
Expect Syntax Error: "jsdoc/typeTagNoErasure.ts"
Expect Syntax Error: "jsdoc/typeTagPrototypeAssignment.ts"
Expect Syntax Error: "jsdoc/typedefCrossModule3.ts"
Expect Syntax Error: "jsdoc/typedefCrossModule4.ts"
Expect Syntax Error: "jsdoc/typedefDuplicateTypeDeclaration.ts"
Expect Syntax Error: "jsdoc/typedefInnerNamepaths.ts"
Expect Syntax Error: "jsdoc/typedefScope1.ts"
Expect Syntax Error: "jsdoc/typedefTagTypeResolution.ts"
Expect Syntax Error: "jsx/checkJsxChildrenCanBeTupleType.tsx"
Expect Syntax Error: "jsx/checkJsxChildrenProperty13.tsx"
Expect Syntax Error: "jsx/checkJsxChildrenProperty14.tsx"
Expect Syntax Error: "jsx/checkJsxChildrenProperty15.tsx"
Expect Syntax Error: "jsx/checkJsxChildrenProperty2.tsx"
Expect Syntax Error: "jsx/checkJsxChildrenProperty4.tsx"
Expect Syntax Error: "jsx/checkJsxChildrenProperty5.tsx"
Expect Syntax Error: "jsx/checkJsxChildrenProperty7.tsx"
Expect Syntax Error: "jsx/checkJsxGenericTagHasCorrectInferences.tsx"
Expect Syntax Error: "jsx/jsxSpreadOverwritesAttributeStrict.tsx"
Expect Syntax Error: "jsx/tsxAttributeErrors.tsx"
Expect Syntax Error: "jsx/tsxAttributeResolution1.tsx"
Expect Syntax Error: "jsx/tsxAttributeResolution15.tsx"
Expect Syntax Error: "jsx/tsxAttributeResolution2.tsx"
Expect Syntax Error: "jsx/tsxAttributeResolution3.tsx"
Expect Syntax Error: "jsx/tsxAttributeResolution4.tsx"
Expect Syntax Error: "jsx/tsxAttributeResolution5.tsx"
Expect Syntax Error: "jsx/tsxAttributeResolution6.tsx"
Expect Syntax Error: "jsx/tsxAttributeResolution7.tsx"
Expect Syntax Error: "jsx/tsxDefaultAttributesResolution3.tsx"
Expect Syntax Error: "jsx/tsxDynamicTagName2.tsx"
Expect Syntax Error: "jsx/tsxDynamicTagName3.tsx"
Expect Syntax Error: "jsx/tsxElementResolution1.tsx"
Expect Syntax Error: "jsx/tsxElementResolution10.tsx"
Expect Syntax Error: "jsx/tsxElementResolution11.tsx"
Expect Syntax Error: "jsx/tsxElementResolution12.tsx"
Expect Syntax Error: "jsx/tsxElementResolution15.tsx"
Expect Syntax Error: "jsx/tsxElementResolution16.tsx"
Expect Syntax Error: "jsx/tsxElementResolution18.tsx"
Expect Syntax Error: "jsx/tsxElementResolution3.tsx"
Expect Syntax Error: "jsx/tsxElementResolution4.tsx"
Expect Syntax Error: "jsx/tsxElementResolution6.tsx"
Expect Syntax Error: "jsx/tsxElementResolution7.tsx"
Expect Syntax Error: "jsx/tsxElementResolution8.tsx"
Expect Syntax Error: "jsx/tsxElementResolution9.tsx"
Expect Syntax Error: "jsx/tsxEmit3.tsx"
Expect Syntax Error: "jsx/tsxGenericArrowFunctionParsing.tsx"
Expect Syntax Error: "jsx/tsxIntrinsicAttributeErrors.tsx"
Expect Syntax Error: "jsx/tsxLibraryManagedAttributes.tsx"
Expect Syntax Error: "jsx/tsxReactComponentWithDefaultTypeParameter3.tsx"
Expect Syntax Error: "jsx/tsxReactEmit4.tsx"
Expect Syntax Error: "jsx/tsxReactEmit7.tsx"
Expect Syntax Error: "jsx/tsxSfcReturnUndefinedStrictNullChecks.tsx"
Expect Syntax Error: "jsx/tsxSpreadAttributesResolution10.tsx"
Expect Syntax Error: "jsx/tsxSpreadAttributesResolution12.tsx"
Expect Syntax Error: "jsx/tsxSpreadAttributesResolution14.tsx"
Expect Syntax Error: "jsx/tsxSpreadAttributesResolution16.tsx"
Expect Syntax Error: "jsx/tsxSpreadAttributesResolution17.tsx"
Expect Syntax Error: "jsx/tsxSpreadAttributesResolution2.tsx"
Expect Syntax Error: "jsx/tsxSpreadAttributesResolution4.tsx"
Expect Syntax Error: "jsx/tsxSpreadAttributesResolution5.tsx"
Expect Syntax Error: "jsx/tsxSpreadAttributesResolution6.tsx"
Expect Syntax Error: "jsx/tsxSpreadInvalidType.tsx"
Expect Syntax Error: "jsx/tsxStatelessFunctionComponentOverload1.tsx"
Expect Syntax Error: "jsx/tsxStatelessFunctionComponentOverload4.tsx"
Expect Syntax Error: "jsx/tsxStatelessFunctionComponentOverload5.tsx"
Expect Syntax Error: "jsx/tsxStatelessFunctionComponentWithDefaultTypeParameter2.tsx"
Expect Syntax Error: "jsx/tsxStatelessFunctionComponents2.tsx"
Expect Syntax Error: "jsx/tsxStatelessFunctionComponentsWithTypeArguments2.tsx"
Expect Syntax Error: "jsx/tsxStatelessFunctionComponentsWithTypeArguments4.tsx"
Expect Syntax Error: "jsx/tsxTypeArgumentResolution.tsx"
Expect Syntax Error: "jsx/tsxUnionElementType1.tsx"
Expect Syntax Error: "jsx/tsxUnionElementType2.tsx"
Expect Syntax Error: "jsx/tsxUnionElementType3.tsx"
Expect Syntax Error: "jsx/tsxUnionElementType4.tsx"
Expect Syntax Error: "jsx/tsxUnionElementType6.tsx"
Expect Syntax Error: "jsx/tsxUnionTypeComponent2.tsx"
Expect Syntax Error: "override/override1.ts"
Expect Syntax Error: "override/override11.ts"
Expect Syntax Error: "override/override13.ts"
Expect Syntax Error: "override/override15.ts"
Expect Syntax Error: "override/override19.ts"
Expect Syntax Error: "override/override2.ts"
Expect Syntax Error: "override/override20.ts"
Expect Syntax Error: "override/override3.ts"
Expect Syntax Error: "override/override4.ts"
Expect Syntax Error: "override/override5.ts"
Expect Syntax Error: "override/override6.ts"
Expect Syntax Error: "override/override7.ts"
Expect Syntax Error: "override/override8.ts"
Expect Syntax Error: "override/override9.ts"
Expect Syntax Error: "override/overrideParameterProperty.ts"
Expect Syntax Error: "override/overrideWithoutNoImplicitOverride1.ts"
Expect Syntax Error: "override/override_js2.ts"
Expect Syntax Error: "override/override_js3.ts"
Expect Syntax Error: "override/override_js4.ts"
Expect Syntax Error: "parser/ecmascript3/Accessors/parserES3Accessors1.ts"
Expect Syntax Error: "parser/ecmascript3/Accessors/parserES3Accessors3.ts"
Expect Syntax Error: "parser/ecmascript5/Accessors/parserAccessors1.ts"
Expect Syntax Error: "parser/ecmascript5/Accessors/parserAccessors3.ts"
Expect Syntax Error: "parser/ecmascript5/Accessors/parserAccessors5.ts"
Expect Syntax Error: "parser/ecmascript5/Accessors/parserAccessors6.ts"
Expect Syntax Error: "parser/ecmascript5/Accessors/parserGetAccessorWithTypeParameters1.ts"
Expect Syntax Error: "parser/ecmascript5/Accessors/parserSetAccessorWithTypeAnnotation1.ts"
Expect Syntax Error: "parser/ecmascript5/Accessors/parserSetAccessorWithTypeParameters1.ts"
Expect Syntax Error: "parser/ecmascript5/ArrowFunctionExpressions/parserArrowFunctionExpression4.ts"
Expect Syntax Error: "parser/ecmascript5/ArrowFunctionExpressions/parserArrowFunctionExpression5.ts"
Expect Syntax Error: "parser/ecmascript5/AutomaticSemicolonInsertion/parserAutomaticSemicolonInsertion1.ts"
Expect Syntax Error: "parser/ecmascript5/CatchClauses/parserCatchClauseWithTypeAnnotation1.ts"
Expect Syntax Error: "parser/ecmascript5/ClassDeclarations/parserClass1.ts"
Expect Syntax Error: "parser/ecmascript5/ClassDeclarations/parserClass2.ts"
Expect Syntax Error: "parser/ecmascript5/ClassDeclarations/parserClassDeclaration1.ts"
Expect Syntax Error: "parser/ecmascript5/ClassDeclarations/parserClassDeclaration10.ts"
Expect Syntax Error: "parser/ecmascript5/ClassDeclarations/parserClassDeclaration11.ts"
Expect Syntax Error: "parser/ecmascript5/ClassDeclarations/parserClassDeclaration12.ts"
Expect Syntax Error: "parser/ecmascript5/ClassDeclarations/parserClassDeclaration13.ts"
Expect Syntax Error: "parser/ecmascript5/ClassDeclarations/parserClassDeclaration14.ts"
Expect Syntax Error: "parser/ecmascript5/ClassDeclarations/parserClassDeclaration15.ts"
Expect Syntax Error: "parser/ecmascript5/ClassDeclarations/parserClassDeclaration18.ts"
Expect Syntax Error: "parser/ecmascript5/ClassDeclarations/parserClassDeclaration2.ts"
Expect Syntax Error: "parser/ecmascript5/ClassDeclarations/parserClassDeclaration21.ts"
Expect Syntax Error: "parser/ecmascript5/ClassDeclarations/parserClassDeclaration22.ts"
Expect Syntax Error: "parser/ecmascript5/ClassDeclarations/parserClassDeclaration24.ts"
Expect Syntax Error: "parser/ecmascript5/ClassDeclarations/parserClassDeclaration25.ts"
Expect Syntax Error: "parser/ecmascript5/ClassDeclarations/parserClassDeclaration3.ts"
Expect Syntax Error: "parser/ecmascript5/ClassDeclarations/parserClassDeclaration4.ts"
Expect Syntax Error: "parser/ecmascript5/ClassDeclarations/parserClassDeclaration5.ts"
Expect Syntax Error: "parser/ecmascript5/ClassDeclarations/parserClassDeclaration6.ts"
Expect Syntax Error: "parser/ecmascript5/ClassDeclarations/parserClassDeclaration7.ts"
Expect Syntax Error: "parser/ecmascript5/ClassDeclarations/parserClassDeclaration8.ts"
Expect Syntax Error: "parser/ecmascript5/ClassDeclarations/parserClassDeclaration9.ts"
Expect Syntax Error: "parser/ecmascript5/ComputedPropertyNames/parserES5ComputedPropertyName1.ts"
Expect Syntax Error: "parser/ecmascript5/ComputedPropertyNames/parserES5ComputedPropertyName10.ts"
Expect Syntax Error: "parser/ecmascript5/ComputedPropertyNames/parserES5ComputedPropertyName11.ts"
Expect Syntax Error: "parser/ecmascript5/ComputedPropertyNames/parserES5ComputedPropertyName2.ts"
Expect Syntax Error: "parser/ecmascript5/ComputedPropertyNames/parserES5ComputedPropertyName3.ts"
Expect Syntax Error: "parser/ecmascript5/ComputedPropertyNames/parserES5ComputedPropertyName4.ts"
Expect Syntax Error: "parser/ecmascript5/ComputedPropertyNames/parserES5ComputedPropertyName5.ts"
Expect Syntax Error: "parser/ecmascript5/ComputedPropertyNames/parserES5ComputedPropertyName6.ts"
Expect Syntax Error: "parser/ecmascript5/ComputedPropertyNames/parserES5ComputedPropertyName7.ts"
Expect Syntax Error: "parser/ecmascript5/ComputedPropertyNames/parserES5ComputedPropertyName8.ts"
Expect Syntax Error: "parser/ecmascript5/ComputedPropertyNames/parserES5ComputedPropertyName9.ts"
Expect Syntax Error: "parser/ecmascript5/ConstructorDeclarations/parserConstructorDeclaration10.ts"
Expect Syntax Error: "parser/ecmascript5/ConstructorDeclarations/parserConstructorDeclaration11.ts"
Expect Syntax Error: "parser/ecmascript5/ConstructorDeclarations/parserConstructorDeclaration2.ts"
Expect Syntax Error: "parser/ecmascript5/ConstructorDeclarations/parserConstructorDeclaration4.ts"
Expect Syntax Error: "parser/ecmascript5/ConstructorDeclarations/parserConstructorDeclaration6.ts"
Expect Syntax Error: "parser/ecmascript5/ConstructorDeclarations/parserConstructorDeclaration7.ts"
Expect Syntax Error: "parser/ecmascript5/ConstructorDeclarations/parserConstructorDeclaration9.ts"
Expect Syntax Error: "parser/ecmascript5/EnumDeclarations/parserEnum7.ts"
Expect Syntax Error: "parser/ecmascript5/EnumDeclarations/parserEnumDeclaration2.ts"
Expect Syntax Error: "parser/ecmascript5/EnumDeclarations/parserEnumDeclaration3.d.ts"
Expect Syntax Error: "parser/ecmascript5/ErrorRecovery/AccessibilityAfterStatic/parserAccessibilityAfterStatic1.ts"
Expect Syntax Error: "parser/ecmascript5/ErrorRecovery/AccessibilityAfterStatic/parserAccessibilityAfterStatic10.ts"
Expect Syntax Error: "parser/ecmascript5/ErrorRecovery/AccessibilityAfterStatic/parserAccessibilityAfterStatic7.ts"
Expect Syntax Error: "parser/ecmascript5/ErrorRecovery/ParameterLists/parserErrorRecovery_ParameterList6.ts"
Expect Syntax Error: "parser/ecmascript5/ErrorRecovery/parserCommaInTypeMemberList2.ts"
Expect Syntax Error: "parser/ecmascript5/ErrorRecovery/parserModifierOnPropertySignature1.ts"
Expect Syntax Error: "parser/ecmascript5/ErrorRecovery/parserModifierOnStatementInBlock1.ts"
Expect Syntax Error: "parser/ecmascript5/ErrorRecovery/parserModifierOnStatementInBlock2.ts"
Expect Syntax Error: "parser/ecmascript5/ErrorRecovery/parserModifierOnStatementInBlock3.ts"
Expect Syntax Error: "parser/ecmascript5/ErrorRecovery/parserModifierOnStatementInBlock4.ts"
Expect Syntax Error: "parser/ecmascript5/ErrorRecovery/parserStatementIsNotAMemberVariableDeclaration1.ts"
Expect Syntax Error: "parser/ecmascript5/ExportAssignments/parserExportAssignment1.ts"
Expect Syntax Error: "parser/ecmascript5/ExportAssignments/parserExportAssignment2.ts"
Expect Syntax Error: "parser/ecmascript5/ExportAssignments/parserExportAssignment5.ts"
Expect Syntax Error: "parser/ecmascript5/ExportAssignments/parserExportAssignment6.ts"
Expect Syntax Error: "parser/ecmascript5/ExportAssignments/parserExportAssignment7.ts"
Expect Syntax Error: "parser/ecmascript5/ExportAssignments/parserExportAssignment8.ts"
Expect Syntax Error: "parser/ecmascript5/ExportAssignments/parserExportAssignment9.ts"
Expect Syntax Error: "parser/ecmascript5/Expressions/parserConditionalExpression1.ts"
Expect Syntax Error: "parser/ecmascript5/Expressions/parserInvocationOfMemberAccessOffOfObjectCreationExpression1.ts"
Expect Syntax Error: "parser/ecmascript5/Expressions/parserObjectCreation2.ts"
Expect Syntax Error: "parser/ecmascript5/FunctionDeclarations/parserFunctionDeclaration1.ts"
Expect Syntax Error: "parser/ecmascript5/FunctionDeclarations/parserFunctionDeclaration2.d.ts"
Expect Syntax Error: "parser/ecmascript5/FunctionDeclarations/parserFunctionDeclaration2.ts"
Expect Syntax Error: "parser/ecmascript5/FunctionDeclarations/parserFunctionDeclaration3.ts"
Expect Syntax Error: "parser/ecmascript5/FunctionDeclarations/parserFunctionDeclaration4.ts"
Expect Syntax Error: "parser/ecmascript5/FunctionDeclarations/parserFunctionDeclaration6.ts"
Expect Syntax Error: "parser/ecmascript5/FunctionDeclarations/parserFunctionDeclaration7.ts"
Expect Syntax Error: "parser/ecmascript5/Generics/parserAmbiguity1.ts"
Expect Syntax Error: "parser/ecmascript5/Generics/parserAmbiguity2.ts"
Expect Syntax Error: "parser/ecmascript5/Generics/parserAmbiguity3.ts"
Expect Syntax Error: "parser/ecmascript5/Generics/parserAmbiguityWithBinaryOperator4.ts"
Expect Syntax Error: "parser/ecmascript5/Generics/parserCastVersusArrowFunction1.ts"
Expect Syntax Error: "parser/ecmascript5/Generics/parserConstructorAmbiguity1.ts"
Expect Syntax Error: "parser/ecmascript5/Generics/parserConstructorAmbiguity2.ts"
Expect Syntax Error: "parser/ecmascript5/Generics/parserConstructorAmbiguity3.ts"
Expect Syntax Error: "parser/ecmascript5/Generics/parserConstructorAmbiguity4.ts"
Expect Syntax Error: "parser/ecmascript5/Generics/parserGenericConstraint2.ts"
Expect Syntax Error: "parser/ecmascript5/Generics/parserGenericConstraint3.ts"
Expect Syntax Error: "parser/ecmascript5/Generics/parserGenericConstraint4.ts"
Expect Syntax Error: "parser/ecmascript5/Generics/parserGenericConstraint5.ts"
Expect Syntax Error: "parser/ecmascript5/Generics/parserGenericConstraint6.ts"
Expect Syntax Error: "parser/ecmascript5/Generics/parserGenericConstraint7.ts"
Expect Syntax Error: "parser/ecmascript5/Generics/parserGenericsInInterfaceDeclaration1.ts"
Expect Syntax Error: "parser/ecmascript5/Generics/parserGenericsInTypeContexts1.ts"
Expect Syntax Error: "parser/ecmascript5/Generics/parserGenericsInTypeContexts2.ts"
Expect Syntax Error: "parser/ecmascript5/Generics/parserGenericsInVariableDeclaration1.ts"
Expect Syntax Error: "parser/ecmascript5/Generics/parserMemberAccessExpression1.ts"
Expect Syntax Error: "parser/ecmascript5/Generics/parserMemberAccessOffOfGenericType1.ts"
Expect Syntax Error: "parser/ecmascript5/Generics/parserObjectCreation1.ts"
Expect Syntax Error: "parser/ecmascript5/IndexMemberDeclarations/parserIndexMemberDeclaration10.ts"
Expect Syntax Error: "parser/ecmascript5/IndexMemberDeclarations/parserIndexMemberDeclaration5.ts"
Expect Syntax Error: "parser/ecmascript5/IndexMemberDeclarations/parserIndexMemberDeclaration7.ts"
Expect Syntax Error: "parser/ecmascript5/IndexMemberDeclarations/parserIndexMemberDeclaration8.ts"
Expect Syntax Error: "parser/ecmascript5/IndexSignatures/parserIndexSignature4.ts"
Expect Syntax Error: "parser/ecmascript5/IndexSignatures/parserIndexSignature5.ts"
Expect Syntax Error: "parser/ecmascript5/InterfaceDeclarations/parserInterfaceDeclaration1.ts"
Expect Syntax Error: "parser/ecmascript5/InterfaceDeclarations/parserInterfaceDeclaration2.ts"
Expect Syntax Error: "parser/ecmascript5/InterfaceDeclarations/parserInterfaceDeclaration3.ts"
Expect Syntax Error: "parser/ecmascript5/InterfaceDeclarations/parserInterfaceDeclaration4.ts"
Expect Syntax Error: "parser/ecmascript5/InterfaceDeclarations/parserInterfaceDeclaration6.ts"
Expect Syntax Error: "parser/ecmascript5/InterfaceDeclarations/parserInterfaceDeclaration8.ts"
Expect Syntax Error: "parser/ecmascript5/MemberAccessorDeclarations/parserMemberAccessor1.ts"
Expect Syntax Error: "parser/ecmascript5/MemberAccessorDeclarations/parserMemberAccessorDeclaration1.ts"
Expect Syntax Error: "parser/ecmascript5/MemberAccessorDeclarations/parserMemberAccessorDeclaration11.ts"
Expect Syntax Error: "parser/ecmascript5/MemberAccessorDeclarations/parserMemberAccessorDeclaration15.ts"
Expect Syntax Error: "parser/ecmascript5/MemberAccessorDeclarations/parserMemberAccessorDeclaration16.ts"
Expect Syntax Error: "parser/ecmascript5/MemberAccessorDeclarations/parserMemberAccessorDeclaration17.ts"
Expect Syntax Error: "parser/ecmascript5/MemberAccessorDeclarations/parserMemberAccessorDeclaration2.ts"
Expect Syntax Error: "parser/ecmascript5/MemberAccessorDeclarations/parserMemberAccessorDeclaration3.ts"
Expect Syntax Error: "parser/ecmascript5/MemberAccessorDeclarations/parserMemberAccessorDeclaration7.ts"
Expect Syntax Error: "parser/ecmascript5/MemberAccessorDeclarations/parserMemberAccessorDeclaration8.ts"
Expect Syntax Error: "parser/ecmascript5/MemberAccessorDeclarations/parserMemberAccessorDeclaration9.ts"
Expect Syntax Error: "parser/ecmascript5/MemberFunctionDeclarations/parserMemberFunctionDeclaration1.ts"
Expect Syntax Error: "parser/ecmascript5/MemberFunctionDeclarations/parserMemberFunctionDeclaration2.ts"
Expect Syntax Error: "parser/ecmascript5/MemberFunctionDeclarations/parserMemberFunctionDeclaration3.ts"
Expect Syntax Error: "parser/ecmascript5/MemberFunctionDeclarations/parserMemberFunctionDeclaration5.ts"
Expect Syntax Error: "parser/ecmascript5/MemberFunctionDeclarations/parserMemberFunctionDeclarationAmbiguities1.ts"
Expect Syntax Error: "parser/ecmascript5/MemberVariableDeclarations/parserMemberVariableDeclaration1.ts"
Expect Syntax Error: "parser/ecmascript5/MemberVariableDeclarations/parserMemberVariableDeclaration2.ts"
Expect Syntax Error: "parser/ecmascript5/MemberVariableDeclarations/parserMemberVariableDeclaration3.ts"
Expect Syntax Error: "parser/ecmascript5/ModuleDeclarations/parserModuleDeclaration1.d.ts"
Expect Syntax Error: "parser/ecmascript5/ModuleDeclarations/parserModuleDeclaration1.ts"
Expect Syntax Error: "parser/ecmascript5/ModuleDeclarations/parserModuleDeclaration10.ts"
Expect Syntax Error: "parser/ecmascript5/ModuleDeclarations/parserModuleDeclaration2.d.ts"
Expect Syntax Error: "parser/ecmascript5/ModuleDeclarations/parserModuleDeclaration3.ts"
Expect Syntax Error: "parser/ecmascript5/ModuleDeclarations/parserModuleDeclaration4.d.ts"
Expect Syntax Error: "parser/ecmascript5/ModuleDeclarations/parserModuleDeclaration5.ts"
Expect Syntax Error: "parser/ecmascript5/ParameterLists/parserParameterList10.ts"
Expect Syntax Error: "parser/ecmascript5/ParameterLists/parserParameterList11.ts"
Expect Syntax Error: "parser/ecmascript5/ParameterLists/parserParameterList13.ts"
Expect Syntax Error: "parser/ecmascript5/ParameterLists/parserParameterList14.ts"
Expect Syntax Error: "parser/ecmascript5/ParameterLists/parserParameterList15.ts"
Expect Syntax Error: "parser/ecmascript5/ParameterLists/parserParameterList16.ts"
Expect Syntax Error: "parser/ecmascript5/ParameterLists/parserParameterList17.ts"
Expect Syntax Error: "parser/ecmascript5/ParameterLists/parserParameterList2.ts"
Expect Syntax Error: "parser/ecmascript5/ParameterLists/parserParameterList3.ts"
Expect Syntax Error: "parser/ecmascript5/ParameterLists/parserParameterList4.ts"
Expect Syntax Error: "parser/ecmascript5/ParameterLists/parserParameterList7.ts"
Expect Syntax Error: "parser/ecmascript5/ParameterLists/parserParameterList8.ts"
Expect Syntax Error: "parser/ecmascript5/ParameterLists/parserParameterList9.ts"
Expect Syntax Error: "parser/ecmascript5/Protected/Protected1.ts"
Expect Syntax Error: "parser/ecmascript5/Protected/Protected2.ts"
Expect Syntax Error: "parser/ecmascript5/Protected/Protected4.ts"
Expect Syntax Error: "parser/ecmascript5/Protected/Protected6.ts"
Expect Syntax Error: "parser/ecmascript5/Protected/Protected7.ts"
Expect Syntax Error: "parser/ecmascript5/RealWorld/parserindenter.ts"
Expect Syntax Error: "parser/ecmascript5/RegressionTests/parser509534.ts"
Expect Syntax Error: "parser/ecmascript5/RegressionTests/parser509618.ts"
Expect Syntax Error: "parser/ecmascript5/RegressionTests/parser509668.ts"
Expect Syntax Error: "parser/ecmascript5/RegressionTests/parser509693.ts"
Expect Syntax Error: "parser/ecmascript5/RegressionTests/parser509698.ts"
Expect Syntax Error: "parser/ecmascript5/RegressionTests/parser536727.ts"
Expect Syntax Error: "parser/ecmascript5/RegressionTests/parser553699.ts"
Expect Syntax Error: "parser/ecmascript5/RegressionTests/parser618973.ts"
Expect Syntax Error: "parser/ecmascript5/RegressionTests/parserTernaryAndCommaOperators1.ts"
Expect Syntax Error: "parser/ecmascript5/RegularExpressions/parseRegularExpressionMixedWithComments.ts"
Expect Syntax Error: "parser/ecmascript5/RegularExpressions/parserRegularExpression1.ts"
Expect Syntax Error: "parser/ecmascript5/RegularExpressions/parserRegularExpression2.ts"
Expect Syntax Error: "parser/ecmascript5/RegularExpressions/parserRegularExpression3.ts"
Expect Syntax Error: "parser/ecmascript5/RegularExpressions/parserRegularExpression4.ts"
Expect Syntax Error: "parser/ecmascript5/RegularExpressions/parserRegularExpression5.ts"
Expect Syntax Error: "parser/ecmascript5/RegularExpressions/parserRegularExpressionDivideAmbiguity1.ts"
Expect Syntax Error: "parser/ecmascript5/RegularExpressions/parserRegularExpressionDivideAmbiguity2.ts"
Expect Syntax Error: "parser/ecmascript5/RegularExpressions/parserRegularExpressionDivideAmbiguity5.ts"
Expect Syntax Error: "parser/ecmascript5/Statements/BreakStatements/parser_breakInIterationOrSwitchStatement4.ts"
Expect Syntax Error: "parser/ecmascript5/Statements/ContinueStatements/parser_continueInIterationStatement4.ts"
Expect Syntax Error: "parser/ecmascript5/Statements/ContinueStatements/parser_continueNotInIterationStatement4.ts"
Expect Syntax Error: "parser/ecmascript5/Statements/ReturnStatements/parserReturnStatement1.ts"
Expect Syntax Error: "parser/ecmascript5/Statements/ReturnStatements/parserReturnStatement2.ts"
Expect Syntax Error: "parser/ecmascript5/Statements/parserBlockStatement1.d.ts"
Expect Syntax Error: "parser/ecmascript5/Statements/parserDebuggerStatement1.d.ts"
Expect Syntax Error: "parser/ecmascript5/Statements/parserDoStatement1.d.ts"
Expect Syntax Error: "parser/ecmascript5/Statements/parserES5ForOfStatement1.d.ts"
Expect Syntax Error: "parser/ecmascript5/Statements/parserES5ForOfStatement10.ts"
Expect Syntax Error: "parser/ecmascript5/Statements/parserES5ForOfStatement11.ts"
Expect Syntax Error: "parser/ecmascript5/Statements/parserES5ForOfStatement12.ts"
Expect Syntax Error: "parser/ecmascript5/Statements/parserES5ForOfStatement13.ts"
Expect Syntax Error: "parser/ecmascript5/Statements/parserES5ForOfStatement14.ts"
Expect Syntax Error: "parser/ecmascript5/Statements/parserES5ForOfStatement15.ts"
Expect Syntax Error: "parser/ecmascript5/Statements/parserES5ForOfStatement16.ts"
Expect Syntax Error: "parser/ecmascript5/Statements/parserES5ForOfStatement20.ts"
Expect Syntax Error: "parser/ecmascript5/Statements/parserES5ForOfStatement3.ts"
Expect Syntax Error: "parser/ecmascript5/Statements/parserES5ForOfStatement4.ts"
Expect Syntax Error: "parser/ecmascript5/Statements/parserES5ForOfStatement5.ts"
Expect Syntax Error: "parser/ecmascript5/Statements/parserES5ForOfStatement6.ts"
Expect Syntax Error: "parser/ecmascript5/Statements/parserES5ForOfStatement7.ts"
Expect Syntax Error: "parser/ecmascript5/Statements/parserES5ForOfStatement8.ts"
Expect Syntax Error: "parser/ecmascript5/Statements/parserES5ForOfStatement9.ts"
Expect Syntax Error: "parser/ecmascript5/Statements/parserEmptyStatement1.d.ts"
Expect Syntax Error: "parser/ecmascript5/Statements/parserExpressionStatement1.d.ts"
Expect Syntax Error: "parser/ecmascript5/Statements/parserForInStatement1.d.ts"
Expect Syntax Error: "parser/ecmascript5/Statements/parserForInStatement3.ts"
Expect Syntax Error: "parser/ecmascript5/Statements/parserForInStatement4.ts"
Expect Syntax Error: "parser/ecmascript5/Statements/parserForInStatement5.ts"
Expect Syntax Error: "parser/ecmascript5/Statements/parserForInStatement6.ts"
Expect Syntax Error: "parser/ecmascript5/Statements/parserForInStatement7.ts"
Expect Syntax Error: "parser/ecmascript5/Statements/parserForStatement1.d.ts"
Expect Syntax Error: "parser/ecmascript5/Statements/parserForStatement2.ts"
Expect Syntax Error: "parser/ecmascript5/Statements/parserForStatement3.ts"
Expect Syntax Error: "parser/ecmascript5/Statements/parserForStatement5.ts"
Expect Syntax Error: "parser/ecmascript5/Statements/parserIfStatement1.d.ts"
Expect Syntax Error: "parser/ecmascript5/Statements/parserIfStatement2.ts"
Expect Syntax Error: "parser/ecmascript5/Statements/parserLabeledStatement1.d.ts"
Expect Syntax Error: "parser/ecmascript5/Statements/parserReturnStatement1.d.ts"
Expect Syntax Error: "parser/ecmascript5/Statements/parserSwitchStatement1.d.ts"
Expect Syntax Error: "parser/ecmascript5/Statements/parserThrowStatement1.d.ts"
Expect Syntax Error: "parser/ecmascript5/Statements/parserTryStatement1.d.ts"
Expect Syntax Error: "parser/ecmascript5/Statements/parserVariableStatement1.d.ts"
Expect Syntax Error: "parser/ecmascript5/Statements/parserVariableStatement2.d.ts"
Expect Syntax Error: "parser/ecmascript5/Statements/parserWhileStatement1.d.ts"
Expect Syntax Error: "parser/ecmascript5/StrictMode/octalLiteralInStrictModeES3.ts"
Expect Syntax Error: "parser/ecmascript5/StrictMode/parserStrictMode1.ts"
Expect Syntax Error: "parser/ecmascript5/StrictMode/parserStrictMode10.ts"
Expect Syntax Error: "parser/ecmascript5/StrictMode/parserStrictMode11.ts"
Expect Syntax Error: "parser/ecmascript5/StrictMode/parserStrictMode12.ts"
Expect Syntax Error: "parser/ecmascript5/StrictMode/parserStrictMode13.ts"
Expect Syntax Error: "parser/ecmascript5/StrictMode/parserStrictMode15-negative.ts"
Expect Syntax Error: "parser/ecmascript5/StrictMode/parserStrictMode15.ts"
Expect Syntax Error: "parser/ecmascript5/StrictMode/parserStrictMode16.ts"
Expect Syntax Error: "parser/ecmascript5/StrictMode/parserStrictMode2.ts"
Expect Syntax Error: "parser/ecmascript5/StrictMode/parserStrictMode3-negative.ts"
Expect Syntax Error: "parser/ecmascript5/StrictMode/parserStrictMode3.ts"
Expect Syntax Error: "parser/ecmascript5/StrictMode/parserStrictMode4.ts"
Expect Syntax Error: "parser/ecmascript5/StrictMode/parserStrictMode5.ts"
Expect Syntax Error: "parser/ecmascript5/StrictMode/parserStrictMode6-negative.ts"
Expect Syntax Error: "parser/ecmascript5/StrictMode/parserStrictMode6.ts"
Expect Syntax Error: "parser/ecmascript5/StrictMode/parserStrictMode7.ts"
Expect Syntax Error: "parser/ecmascript5/StrictMode/parserStrictMode8.ts"
Expect Syntax Error: "parser/ecmascript5/StrictMode/parserStrictMode9.ts"
Expect Syntax Error: "parser/ecmascript5/SuperExpressions/parserSuperExpression1.ts"
Expect Syntax Error: "parser/ecmascript5/SuperExpressions/parserSuperExpression3.ts"
Expect Syntax Error: "parser/ecmascript5/SuperExpressions/parserSuperExpression4.ts"
Expect Syntax Error: "parser/ecmascript5/Symbols/parserES5SymbolProperty1.ts"
Expect Syntax Error: "parser/ecmascript5/Symbols/parserES5SymbolProperty2.ts"
Expect Syntax Error: "parser/ecmascript5/Symbols/parserES5SymbolProperty3.ts"
Expect Syntax Error: "parser/ecmascript5/Symbols/parserES5SymbolProperty4.ts"
Expect Syntax Error: "parser/ecmascript5/Symbols/parserES5SymbolProperty5.ts"
Expect Syntax Error: "parser/ecmascript5/Symbols/parserES5SymbolProperty6.ts"
Expect Syntax Error: "parser/ecmascript5/Symbols/parserES5SymbolProperty7.ts"
Expect Syntax Error: "parser/ecmascript5/Symbols/parserES5SymbolProperty8.ts"
Expect Syntax Error: "parser/ecmascript5/Symbols/parserES5SymbolProperty9.ts"
Expect Syntax Error: "parser/ecmascript5/Types/parserTypeQuery1.ts"
Expect Syntax Error: "parser/ecmascript5/Types/parserTypeQuery2.ts"
Expect Syntax Error: "parser/ecmascript5/Types/parserTypeQuery5.ts"
Expect Syntax Error: "parser/ecmascript5/Types/parserTypeQuery6.ts"
Expect Syntax Error: "parser/ecmascript5/Types/parserTypeQuery7.ts"
Expect Syntax Error: "parser/ecmascript5/Types/parserTypeQuery8.ts"
Expect Syntax Error: "parser/ecmascript5/Types/parserTypeQuery9.ts"
Expect Syntax Error: "parser/ecmascript5/VariableDeclarations/parserVariableDeclaration1.ts"
Expect Syntax Error: "parser/ecmascript5/VariableDeclarations/parserVariableDeclaration2.ts"
Expect Syntax Error: "parser/ecmascript5/VariableDeclarations/parserVariableDeclaration3.ts"
Expect Syntax Error: "parser/ecmascript5/VariableDeclarations/parserVariableDeclaration4.ts"
Expect Syntax Error: "parser/ecmascript5/parser10.1.1-8gs.ts"
Expect Syntax Error: "parser/ecmascript5/parser15.4.4.14-9-2.ts"
Expect Syntax Error: "parser/ecmascript5/parserAdditiveExpression1.ts"
Expect Syntax Error: "parser/ecmascript5/parserArgumentList1.ts"
Expect Syntax Error: "parser/ecmascript5/parserAstSpans1.ts"
Expect Syntax Error: "parser/ecmascript5/parserImportDeclaration1.ts"
Expect Syntax Error: "parser/ecmascript5/parserNoASIOnCallAfterFunctionExpression1.ts"
Expect Syntax Error: "parser/ecmascript5/parserNotRegex1.ts"
Expect Syntax Error: "parser/ecmascript5/parserObjectCreationArrayLiteral2.ts"
Expect Syntax Error: "parser/ecmascript5/parserObjectCreationArrayLiteral4.ts"
Expect Syntax Error: "parser/ecmascript5/parserRealSource1.ts"
Expect Syntax Error: "parser/ecmascript5/parserRealSource12.ts"
Expect Syntax Error: "parser/ecmascript5/parserRealSource13.ts"
Expect Syntax Error: "parser/ecmascript5/parserRealSource14.ts"
Expect Syntax Error: "parser/ecmascript5/parserRealSource2.ts"
Expect Syntax Error: "parser/ecmascript5/parserRealSource3.ts"
Expect Syntax Error: "parser/ecmascript5/parserRealSource5.ts"
Expect Syntax Error: "parser/ecmascript5/parserRealSource6.ts"
Expect Syntax Error: "parser/ecmascript5/parserRealSource8.ts"
Expect Syntax Error: "parser/ecmascript5/parserS7.2_A1.5_T2.ts"
Expect Syntax Error: "parser/ecmascript5/parserS7.3_A1.1_T2.ts"
Expect Syntax Error: "parser/ecmascript5/parserS7.6_A4.2_T1.ts"
Expect Syntax Error: "parser/ecmascript5/parserUnicode1.ts"
Expect Syntax Error: "parser/ecmascript5/parserUsingConstructorAsIdentifier.ts"
Expect Syntax Error: "parser/ecmascript5/parservoidInQualifiedName2.ts"
Expect Syntax Error: "parser/ecmascript6/ComputedPropertyNames/parserComputedPropertyName10.ts"
Expect Syntax Error: "parser/ecmascript6/ComputedPropertyNames/parserComputedPropertyName11.ts"
Expect Syntax Error: "parser/ecmascript6/ComputedPropertyNames/parserComputedPropertyName12.ts"
Expect Syntax Error: "parser/ecmascript6/ComputedPropertyNames/parserComputedPropertyName13.ts"
Expect Syntax Error: "parser/ecmascript6/ComputedPropertyNames/parserComputedPropertyName14.ts"
Expect Syntax Error: "parser/ecmascript6/ComputedPropertyNames/parserComputedPropertyName15.ts"
Expect Syntax Error: "parser/ecmascript6/ComputedPropertyNames/parserComputedPropertyName16.ts"
Expect Syntax Error: "parser/ecmascript6/ComputedPropertyNames/parserComputedPropertyName17.ts"
Expect Syntax Error: "parser/ecmascript6/ComputedPropertyNames/parserComputedPropertyName18.ts"
Expect Syntax Error: "parser/ecmascript6/ComputedPropertyNames/parserComputedPropertyName19.ts"
Expect Syntax Error: "parser/ecmascript6/ComputedPropertyNames/parserComputedPropertyName2.ts"
Expect Syntax Error: "parser/ecmascript6/ComputedPropertyNames/parserComputedPropertyName20.ts"
Expect Syntax Error: "parser/ecmascript6/ComputedPropertyNames/parserComputedPropertyName21.ts"
Expect Syntax Error: "parser/ecmascript6/ComputedPropertyNames/parserComputedPropertyName22.ts"
Expect Syntax Error: "parser/ecmascript6/ComputedPropertyNames/parserComputedPropertyName23.ts"
Expect Syntax Error: "parser/ecmascript6/ComputedPropertyNames/parserComputedPropertyName24.ts"
Expect Syntax Error: "parser/ecmascript6/ComputedPropertyNames/parserComputedPropertyName25.ts"
Expect Syntax Error: "parser/ecmascript6/ComputedPropertyNames/parserComputedPropertyName26.ts"
Expect Syntax Error: "parser/ecmascript6/ComputedPropertyNames/parserComputedPropertyName28.ts"
Expect Syntax Error: "parser/ecmascript6/ComputedPropertyNames/parserComputedPropertyName29.ts"
Expect Syntax Error: "parser/ecmascript6/ComputedPropertyNames/parserComputedPropertyName3.ts"
Expect Syntax Error: "parser/ecmascript6/ComputedPropertyNames/parserComputedPropertyName31.ts"
Expect Syntax Error: "parser/ecmascript6/ComputedPropertyNames/parserComputedPropertyName32.ts"
Expect Syntax Error: "parser/ecmascript6/ComputedPropertyNames/parserComputedPropertyName34.ts"
Expect Syntax Error: "parser/ecmascript6/ComputedPropertyNames/parserComputedPropertyName37.ts"
Expect Syntax Error: "parser/ecmascript6/ComputedPropertyNames/parserComputedPropertyName4.ts"
Expect Syntax Error: "parser/ecmascript6/ComputedPropertyNames/parserComputedPropertyName40.ts"
Expect Syntax Error: "parser/ecmascript6/ComputedPropertyNames/parserComputedPropertyName41.ts"
Expect Syntax Error: "parser/ecmascript6/ComputedPropertyNames/parserComputedPropertyName6.ts"
Expect Syntax Error: "parser/ecmascript6/ComputedPropertyNames/parserComputedPropertyName7.ts"
Expect Syntax Error: "parser/ecmascript6/ComputedPropertyNames/parserComputedPropertyName8.ts"
Expect Syntax Error: "parser/ecmascript6/ComputedPropertyNames/parserComputedPropertyName9.ts"
Expect Syntax Error: "parser/ecmascript6/Iterators/parserForOfStatement1.d.ts"
Expect Syntax Error: "parser/ecmascript6/Iterators/parserForOfStatement10.ts"
Expect Syntax Error: "parser/ecmascript6/Iterators/parserForOfStatement11.ts"
Expect Syntax Error: "parser/ecmascript6/Iterators/parserForOfStatement12.ts"
Expect Syntax Error: "parser/ecmascript6/Iterators/parserForOfStatement13.ts"
Expect Syntax Error: "parser/ecmascript6/Iterators/parserForOfStatement14.ts"
Expect Syntax Error: "parser/ecmascript6/Iterators/parserForOfStatement15.ts"
Expect Syntax Error: "parser/ecmascript6/Iterators/parserForOfStatement16.ts"
Expect Syntax Error: "parser/ecmascript6/Iterators/parserForOfStatement20.ts"
Expect Syntax Error: "parser/ecmascript6/Iterators/parserForOfStatement3.ts"
Expect Syntax Error: "parser/ecmascript6/Iterators/parserForOfStatement4.ts"
Expect Syntax Error: "parser/ecmascript6/Iterators/parserForOfStatement5.ts"
Expect Syntax Error: "parser/ecmascript6/Iterators/parserForOfStatement6.ts"
Expect Syntax Error: "parser/ecmascript6/Iterators/parserForOfStatement7.ts"
Expect Syntax Error: "parser/ecmascript6/Iterators/parserForOfStatement8.ts"
Expect Syntax Error: "parser/ecmascript6/Iterators/parserForOfStatement9.ts"
Expect Syntax Error: "pedantic/noUncheckedIndexedAccess.ts"
Expect Syntax Error: "pedantic/noUncheckedIndexedAccessDestructuring.ts"
Expect Syntax Error: "salsa/checkSpecialPropertyAssignments.ts"
Expect Syntax Error: "salsa/constructorFunctions.ts"
Expect Syntax Error: "salsa/constructorFunctionsStrict.ts"
Expect Syntax Error: "salsa/exportDefaultInJsFile01.ts"
Expect Syntax Error: "salsa/exportDefaultInJsFile02.ts"
Expect Syntax Error: "salsa/exportPropertyAssignmentNameResolution.ts"
Expect Syntax Error: "salsa/globalMergeWithCommonJSAssignmentDeclaration.ts"
Expect Syntax Error: "salsa/methodsReturningThis.ts"
Expect Syntax Error: "salsa/moduleExportAliasUnknown.ts"
Expect Syntax Error: "salsa/moduleExportsAliasLoop1.ts"
Expect Syntax Error: "salsa/moduleExportsAliasLoop2.ts"
Expect Syntax Error: "salsa/multipleDeclarations.ts"
Expect Syntax Error: "salsa/plainJSRedeclare.ts"
Expect Syntax Error: "salsa/plainJSRedeclare2.ts"
Expect Syntax Error: "salsa/plainJSReservedStrict.ts"
Expect Syntax Error: "salsa/propertyAssignmentOnUnresolvedImportedSymbol.ts"
Expect Syntax Error: "salsa/propertyAssignmentUseParentType2.ts"
Expect Syntax Error: "salsa/thisPropertyAssignment.ts"
Expect Syntax Error: "salsa/thisPropertyAssignmentComputed.ts"
Expect Syntax Error: "salsa/typeFromJSConstructor.ts"
Expect Syntax Error: "salsa/typeFromJSInitializer.ts"
Expect Syntax Error: "salsa/typeFromJSInitializer4.ts"
Expect Syntax Error: "salsa/typeFromPropertyAssignment21.ts"
Expect Syntax Error: "salsa/typeFromPropertyAssignment22.ts"
Expect Syntax Error: "salsa/typeFromPropertyAssignment26.ts"
Expect Syntax Error: "salsa/typeFromPropertyAssignment28.ts"
Expect Syntax Error: "salsa/typeFromPropertyAssignment29.ts"
Expect Syntax Error: "salsa/typeFromPropertyAssignment31.ts"
Expect Syntax Error: "salsa/typeFromPropertyAssignment36.ts"
Expect Syntax Error: "salsa/typeFromPrototypeAssignment.ts"
Expect Syntax Error: "salsa/typeFromPrototypeAssignment2.ts"
Expect Syntax Error: "salsa/typeFromPrototypeAssignment3.ts"
Expect Syntax Error: "salsa/typeLookupInIIFE.ts"
Expect Syntax Error: "scanner/ecmascript3/scannerES3NumericLiteral2.ts"
Expect Syntax Error: "scanner/ecmascript5/scanner10.1.1-8gs.ts"
Expect Syntax Error: "scanner/ecmascript5/scannerAdditiveExpression1.ts"
Expect Syntax Error: "scanner/ecmascript5/scannerClass2.ts"
Expect Syntax Error: "scanner/ecmascript5/scannerImportDeclaration1.ts"
Expect Syntax Error: "scanner/ecmascript5/scannerNumericLiteral2.ts"
Expect Syntax Error: "scanner/ecmascript5/scannerNumericLiteral8.ts"
Expect Syntax Error: "scanner/ecmascript5/scannerNumericLiteral9.ts"
Expect Syntax Error: "scanner/ecmascript5/scannerS7.2_A1.5_T2.ts"
Expect Syntax Error: "scanner/ecmascript5/scannerS7.3_A1.1_T2.ts"
Expect Syntax Error: "scanner/ecmascript5/scannerS7.6_A4.2_T1.ts"
Expect Syntax Error: "scanner/ecmascript5/scannertest1.ts"
Expect Syntax Error: "statements/VariableStatements/everyTypeWithAnnotationAndInvalidInitializer.ts"
Expect Syntax Error: "statements/VariableStatements/invalidMultipleVariableDeclarations.ts"
Expect Syntax Error: "statements/breakStatements/invalidSwitchBreakStatement.ts"
Expect Syntax Error: "statements/breakStatements/switchBreakStatements.ts"
Expect Syntax Error: "statements/for-inStatements/for-inStatements.ts"
Expect Syntax Error: "statements/for-inStatements/for-inStatementsArrayErrors.ts"
Expect Syntax Error: "statements/for-inStatements/for-inStatementsDestructuring.ts"
Expect Syntax Error: "statements/for-inStatements/for-inStatementsDestructuring2.ts"
Expect Syntax Error: "statements/for-inStatements/for-inStatementsDestructuring3.ts"
Expect Syntax Error: "statements/for-inStatements/for-inStatementsDestructuring4.ts"
Expect Syntax Error: "statements/for-inStatements/for-inStatementsInvalid.ts"
Expect Syntax Error: "statements/for-ofStatements/ES3For-ofTypeCheck1.ts"
Expect Syntax Error: "statements/for-ofStatements/ES3For-ofTypeCheck2.ts"
Expect Syntax Error: "statements/for-ofStatements/ES3For-ofTypeCheck4.ts"
Expect Syntax Error: "statements/for-ofStatements/ES3For-ofTypeCheck6.ts"
Expect Syntax Error: "statements/for-ofStatements/ES5For-of17.ts"
Expect Syntax Error: "statements/for-ofStatements/ES5For-of26.ts"
Expect Syntax Error: "statements/for-ofStatements/ES5For-of27.ts"
Expect Syntax Error: "statements/for-ofStatements/ES5For-of28.ts"
Expect Syntax Error: "statements/for-ofStatements/ES5For-of29.ts"
Expect Syntax Error: "statements/for-ofStatements/ES5For-of30.ts"
Expect Syntax Error: "statements/for-ofStatements/ES5For-of31.ts"
Expect Syntax Error: "statements/for-ofStatements/ES5For-of34.ts"
Expect Syntax Error: "statements/for-ofStatements/ES5For-of35.ts"
Expect Syntax Error: "statements/for-ofStatements/ES5For-of36.ts"
Expect Syntax Error: "statements/for-ofStatements/ES5For-of7.ts"
Expect Syntax Error: "statements/for-ofStatements/ES5For-of8.ts"
Expect Syntax Error: "statements/for-ofStatements/ES5For-ofTypeCheck10.ts"
Expect Syntax Error: "statements/for-ofStatements/ES5For-ofTypeCheck11.ts"
Expect Syntax Error: "statements/for-ofStatements/ES5For-ofTypeCheck12.ts"
Expect Syntax Error: "statements/for-ofStatements/ES5For-ofTypeCheck13.ts"
Expect Syntax Error: "statements/for-ofStatements/ES5For-ofTypeCheck14.ts"
Expect Syntax Error: "statements/for-ofStatements/ES5For-ofTypeCheck7.ts"
Expect Syntax Error: "statements/for-ofStatements/ES5For-ofTypeCheck8.ts"
Expect Syntax Error: "statements/for-ofStatements/ES5For-ofTypeCheck9.ts"
Expect Syntax Error: "statements/forStatements/forStatementsMultipleInvalidDecl.ts"
Expect Syntax Error: "statements/returnStatements/invalidReturnStatements.ts"
Expect Syntax Error: "statements/switchStatements/switchStatements.ts"
Expect Syntax Error: "statements/tryStatements/catchClauseWithTypeAnnotation.ts"
Expect Syntax Error: "types/any/anyAsConstructor.ts"
Expect Syntax Error: "types/any/anyAsGenericFunctionCall.ts"
Expect Syntax Error: "types/any/assignAnyToEveryType.ts"
Expect Syntax Error: "types/any/narrowExceptionVariableInCatchClause.ts"
Expect Syntax Error: "types/any/narrowFromAnyWithInstanceof.ts"
Expect Syntax Error: "types/any/narrowFromAnyWithTypePredicate.ts"
Expect Syntax Error: "types/asyncGenerators/types.asyncGenerators.es2018.2.ts"
Expect Syntax Error: "types/conditional/conditionalTypes1.ts"
Expect Syntax Error: "types/conditional/conditionalTypes2.ts"
Expect Syntax Error: "types/conditional/conditionalTypesExcessProperties.ts"
Expect Syntax Error: "types/conditional/inferTypes1.ts"
Expect Syntax Error: "types/conditional/inferTypesInvalidExtendsDeclaration.ts"
Expect Syntax Error: "types/conditional/inferTypesWithExtends2.ts"
Expect Syntax Error: "types/contextualTypes/commaOperator/contextuallyTypeCommaOperator02.ts"
Expect Syntax Error: "types/contextualTypes/commaOperator/contextuallyTypeCommaOperator03.ts"
Expect Syntax Error: "types/contextualTypes/jsxAttributes/contextuallyTypedStringLiteralsInJsxAttributes01.tsx"
Expect Syntax Error: "types/contextualTypes/jsxAttributes/contextuallyTypedStringLiteralsInJsxAttributes02.tsx"
Expect Syntax Error: "types/contextualTypes/logicalAnd/contextuallyTypeLogicalAnd02.ts"
Expect Syntax Error: "types/contextualTypes/logicalAnd/contextuallyTypeLogicalAnd03.ts"
Expect Syntax Error: "types/contextualTypes/methodDeclarations/contextuallyTypedBindingInitializerNegative.ts"
Expect Syntax Error: "types/contextualTypes/methodDeclarations/contextuallyTypedClassExpressionMethodDeclaration01.ts"
Expect Syntax Error: "types/contextualTypes/methodDeclarations/contextuallyTypedClassExpressionMethodDeclaration02.ts"
Expect Syntax Error: "types/contextualTypes/partiallyAnnotatedFunction/partiallyAnnotatedFunctionInferenceError.ts"
Expect Syntax Error: "types/forAwait/types.forAwait.es2018.2.ts"
Expect Syntax Error: "types/forAwait/types.forAwait.es2018.3.ts"
Expect Syntax Error: "types/import/importTypeAmbientMissing.ts"
Expect Syntax Error: "types/import/importTypeNonString.ts"
Expect Syntax Error: "types/intersection/commonTypeIntersection.ts"
Expect Syntax Error: "types/intersection/intersectionAndUnionTypes.ts"
Expect Syntax Error: "types/intersection/intersectionAsWeakTypeSource.ts"
Expect Syntax Error: "types/intersection/intersectionNarrowing.ts"
Expect Syntax Error: "types/intersection/intersectionReduction.ts"
Expect Syntax Error: "types/intersection/intersectionReductionStrict.ts"
Expect Syntax Error: "types/intersection/intersectionTypeAssignment.ts"
Expect Syntax Error: "types/intersection/intersectionTypeInference.ts"
Expect Syntax Error: "types/intersection/intersectionTypeReadonly.ts"
Expect Syntax Error: "types/intersection/intersectionWithIndexSignatures.ts"
Expect Syntax Error: "types/intersection/intersectionWithUnionConstraint.ts"
Expect Syntax Error: "types/intersection/recursiveIntersectionTypes.ts"
Expect Syntax Error: "types/keyof/circularIndexedAccessErrors.ts"
Expect Syntax Error: "types/keyof/keyofAndIndexedAccess.ts"
Expect Syntax Error: "types/keyof/keyofAndIndexedAccess2.ts"
Expect Syntax Error: "types/keyof/keyofAndIndexedAccessErrors.ts"
Expect Syntax Error: "types/literal/enumLiteralTypes3.ts"
Expect Syntax Error: "types/literal/literalTypesWidenInParameterPosition.ts"
Expect Syntax Error: "types/literal/numericLiteralTypes3.ts"
Expect Syntax Error: "types/literal/stringEnumLiteralTypes3.ts"
Expect Syntax Error: "types/literal/stringLiteralsAssertionsInEqualityComparisons02.ts"
Expect Syntax Error: "types/literal/stringLiteralsAssignedToStringMappings.ts"
Expect Syntax Error: "types/literal/stringLiteralsWithEqualityChecks01.ts"
Expect Syntax Error: "types/literal/stringLiteralsWithEqualityChecks02.ts"
Expect Syntax Error: "types/literal/stringLiteralsWithEqualityChecks03.ts"
Expect Syntax Error: "types/literal/stringLiteralsWithEqualityChecks04.ts"
Expect Syntax Error: "types/literal/stringLiteralsWithSwitchStatements01.ts"
Expect Syntax Error: "types/literal/stringLiteralsWithSwitchStatements02.ts"
Expect Syntax Error: "types/literal/stringLiteralsWithSwitchStatements03.ts"
Expect Syntax Error: "types/literal/stringLiteralsWithSwitchStatements04.ts"
Expect Syntax Error: "types/literal/stringMappingOverPatternLiterals.ts"
Expect Syntax Error: "types/literal/templateLiteralTypes1.ts"
Expect Syntax Error: "types/literal/templateLiteralTypes2.ts"
Expect Syntax Error: "types/literal/templateLiteralTypes3.ts"
Expect Syntax Error: "types/literal/templateLiteralTypes4.ts"
Expect Syntax Error: "types/literal/templateLiteralTypesPatterns.ts"
Expect Syntax Error: "types/literal/templateLiteralTypesPatternsPrefixSuffixAssignability.ts"
Expect Syntax Error: "types/localTypes/localTypes4.ts"
Expect Syntax Error: "types/mapped/mappedTypeAsClauseRelationships.ts"
Expect Syntax Error: "types/mapped/mappedTypeAsClauses.ts"
Expect Syntax Error: "types/mapped/mappedTypeConstraints2.ts"
Expect Syntax Error: "types/mapped/mappedTypeErrors.ts"
Expect Syntax Error: "types/mapped/mappedTypeErrors2.ts"
Expect Syntax Error: "types/mapped/mappedTypeInferenceErrors.ts"
Expect Syntax Error: "types/mapped/mappedTypeRelationships.ts"
Expect Syntax Error: "types/mapped/mappedTypeWithAny.ts"
Expect Syntax Error: "types/mapped/mappedTypes5.ts"
Expect Syntax Error: "types/mapped/mappedTypes6.ts"
Expect Syntax Error: "types/mapped/mappedTypesAndObjects.ts"
Expect Syntax Error: "types/mapped/recursiveMappedTypes.ts"
Expect Syntax Error: "types/members/augmentedTypeAssignmentCompatIndexSignature.ts"
Expect Syntax Error: "types/members/classWithPrivateProperty.ts"
Expect Syntax Error: "types/members/duplicateNumericIndexers.ts"
Expect Syntax Error: "types/members/duplicatePropertyNames.ts"
Expect Syntax Error: "types/members/duplicateStringIndexers.ts"
Expect Syntax Error: "types/members/indexSignatures1.ts"
Expect Syntax Error: "types/members/objectTypeHidingMembersOfExtendedObject.ts"
Expect Syntax Error: "types/members/objectTypeHidingMembersOfObjectAssignmentCompat.ts"
Expect Syntax Error: "types/members/objectTypeHidingMembersOfObjectAssignmentCompat2.ts"
Expect Syntax Error: "types/members/objectTypeWithCallSignatureHidingMembersOfFunctionAssignmentCompat.ts"
Expect Syntax Error: "types/members/objectTypeWithConstructSignatureAppearsToBeFunctionType.ts"
Expect Syntax Error: "types/members/objectTypeWithConstructSignatureHidingMembersOfFunctionAssignmentCompat.ts"
Expect Syntax Error: "types/members/objectTypeWithDuplicateNumericProperty.ts"
Expect Syntax Error: "types/members/objectTypeWithStringAndNumberIndexSignatureToAny.ts"
Expect Syntax Error: "types/members/objectTypeWithStringIndexerHidingObjectIndexer.ts"
Expect Syntax Error: "types/members/objectTypeWithStringNamedNumericProperty.ts"
Expect Syntax Error: "types/members/typesWithPrivateConstructor.ts"
Expect Syntax Error: "types/members/typesWithProtectedConstructor.ts"
Expect Syntax Error: "types/members/typesWithPublicConstructor.ts"
Expect Syntax Error: "types/namedTypes/interfaceWithPrivateMember.ts"
Expect Syntax Error: "types/never/neverIntersectionNotCallable.ts"
Expect Syntax Error: "types/never/neverTypeErrors1.ts"
Expect Syntax Error: "types/never/neverTypeErrors2.ts"
Expect Syntax Error: "types/nonPrimitive/nonPrimitiveAccessProperty.ts"
Expect Syntax Error: "types/nonPrimitive/nonPrimitiveAndTypeVariables.ts"
Expect Syntax Error: "types/nonPrimitive/nonPrimitiveAsProperty.ts"
Expect Syntax Error: "types/nonPrimitive/nonPrimitiveAssignError.ts"
Expect Syntax Error: "types/nonPrimitive/nonPrimitiveConstraintOfIndexAccessType.ts"
Expect Syntax Error: "types/nonPrimitive/nonPrimitiveInFunction.ts"
Expect Syntax Error: "types/nonPrimitive/nonPrimitiveInGeneric.ts"
Expect Syntax Error: "types/nonPrimitive/nonPrimitiveIndexingWithForInNoImplicitAny.ts"
Expect Syntax Error: "types/nonPrimitive/nonPrimitiveIndexingWithForInSupressError.ts"
Expect Syntax Error: "types/nonPrimitive/nonPrimitiveNarrow.ts"
Expect Syntax Error: "types/nonPrimitive/nonPrimitiveStrictNull.ts"
Expect Syntax Error: "types/nonPrimitive/nonPrimitiveUnionIntersection.ts"
Expect Syntax Error: "types/objectTypeLiteral/callSignatures/callSignatureWithOptionalParameterAndInitializer.ts"
Expect Syntax Error: "types/objectTypeLiteral/callSignatures/callSignaturesThatDifferOnlyByReturnType2.ts"
Expect Syntax Error: "types/objectTypeLiteral/callSignatures/callSignaturesWithDuplicateParameters.ts"
Expect Syntax Error: "types/objectTypeLiteral/callSignatures/callSignaturesWithParameterInitializers.ts"
Expect Syntax Error: "types/objectTypeLiteral/callSignatures/constructSignatureWithAccessibilityModifiersOnParameters.ts"
Expect Syntax Error: "types/objectTypeLiteral/callSignatures/constructSignatureWithAccessibilityModifiersOnParameters2.ts"
Expect Syntax Error: "types/objectTypeLiteral/callSignatures/specializedSignatureIsNotSubtypeOfNonSpecializedSignature.ts"
Expect Syntax Error: "types/objectTypeLiteral/callSignatures/stringLiteralTypesInImplementationSignatures2.ts"
Expect Syntax Error: "types/objectTypeLiteral/callSignatures/typeParameterUsedAsTypeParameterConstraint4.ts"
Expect Syntax Error: "types/objectTypeLiteral/constructSignatures/constructSignaturesWithOverloads2.ts"
Expect Syntax Error: "types/objectTypeLiteral/indexSignatures/multipleNumericIndexers.ts"
Expect Syntax Error: "types/objectTypeLiteral/indexSignatures/multipleStringIndexers.ts"
Expect Syntax Error: "types/objectTypeLiteral/indexSignatures/numericIndexerConstrainsPropertyDeclarations.ts"
Expect Syntax Error: "types/objectTypeLiteral/indexSignatures/numericIndexerConstrainsPropertyDeclarations2.ts"
Expect Syntax Error: "types/objectTypeLiteral/indexSignatures/stringIndexerConstrainsPropertyDeclarations.ts"
Expect Syntax Error: "types/objectTypeLiteral/indexSignatures/stringIndexerConstrainsPropertyDeclarations2.ts"
Expect Syntax Error: "types/objectTypeLiteral/methodSignatures/methodSignaturesWithOverloads.ts"
Expect Syntax Error: "types/objectTypeLiteral/objectTypeLiteralSyntax2.ts"
Expect Syntax Error: "types/objectTypeLiteral/propertySignatures/numericStringNamedPropertyEquivalence.ts"
Expect Syntax Error: "types/primitives/boolean/assignFromBooleanInterface.ts"
Expect Syntax Error: "types/primitives/boolean/assignFromBooleanInterface2.ts"
Expect Syntax Error: "types/primitives/boolean/boolInsteadOfBoolean.ts"
Expect Syntax Error: "types/primitives/boolean/invalidBooleanAssignments.ts"
Expect Syntax Error: "types/primitives/enum/invalidEnumAssignments.ts"
Expect Syntax Error: "types/primitives/enum/validEnumAssignments.ts"
Expect Syntax Error: "types/primitives/null/directReferenceToNull.ts"
Expect Syntax Error: "types/primitives/null/validNullAssignments.ts"
Expect Syntax Error: "types/primitives/number/assignFromNumberInterface.ts"
Expect Syntax Error: "types/primitives/number/assignFromNumberInterface2.ts"
Expect Syntax Error: "types/primitives/number/invalidNumberAssignments.ts"
Expect Syntax Error: "types/primitives/string/assignFromStringInterface.ts"
Expect Syntax Error: "types/primitives/string/assignFromStringInterface2.ts"
Expect Syntax Error: "types/primitives/string/invalidStringAssignments.ts"
Expect Syntax Error: "types/primitives/string/stringPropertyAccessWithError.ts"
Expect Syntax Error: "types/primitives/undefined/directReferenceToUndefined.ts"
Expect Syntax Error: "types/primitives/undefined/invalidUndefinedAssignments.ts"
Expect Syntax Error: "types/primitives/void/invalidAssignmentsToVoid.ts"
Expect Syntax Error: "types/primitives/void/invalidVoidAssignments.ts"
Expect Syntax Error: "types/primitives/void/invalidVoidValues.ts"
Expect Syntax Error: "types/rest/genericRestArity.ts"
Expect Syntax Error: "types/rest/genericRestArityStrict.ts"
Expect Syntax Error: "types/rest/genericRestParameters1.ts"
Expect Syntax Error: "types/rest/genericRestParameters3.ts"
Expect Syntax Error: "types/rest/objectRest.ts"
Expect Syntax Error: "types/rest/restTuplesFromContextualTypes.ts"
Expect Syntax Error: "types/specifyingTypes/predefinedTypes/objectTypesWithPredefinedTypesAsName.ts"
Expect Syntax Error: "types/specifyingTypes/typeLiterals/arrayTypeOfFunctionTypes.ts"
Expect Syntax Error: "types/specifyingTypes/typeLiterals/arrayTypeOfFunctionTypes2.ts"
Expect Syntax Error: "types/specifyingTypes/typeLiterals/unionTypeLiterals.ts"
Expect Syntax Error: "types/specifyingTypes/typeQueries/circularTypeofWithVarOrFunc.ts"
Expect Syntax Error: "types/specifyingTypes/typeQueries/recursiveTypesWithTypeof.ts"
Expect Syntax Error: "types/specifyingTypes/typeQueries/typeofANonExportedType.ts"
Expect Syntax Error: "types/specifyingTypes/typeQueries/typeofAnExportedType.ts"
Expect Syntax Error: "types/specifyingTypes/typeQueries/typeofClassWithPrivates.ts"
Expect Syntax Error: "types/specifyingTypes/typeQueries/typeofThis.ts"
Expect Syntax Error: "types/specifyingTypes/typeQueries/typeofTypeParameter.ts"
Expect Syntax Error: "types/specifyingTypes/typeReferences/genericTypeReferenceWithoutTypeArgument.d.ts"
Expect Syntax Error: "types/specifyingTypes/typeReferences/genericTypeReferenceWithoutTypeArgument.ts"
Expect Syntax Error: "types/specifyingTypes/typeReferences/genericTypeReferenceWithoutTypeArgument2.ts"
Expect Syntax Error: "types/specifyingTypes/typeReferences/genericTypeReferenceWithoutTypeArgument3.ts"
Expect Syntax Error: "types/specifyingTypes/typeReferences/nonGenericTypeReferenceWithTypeArguments.ts"
Expect Syntax Error: "types/spread/objectSpreadIndexSignature.ts"
Expect Syntax Error: "types/spread/objectSpreadNegative.ts"
Expect Syntax Error: "types/spread/objectSpreadSetonlyAccessor.ts"
Expect Syntax Error: "types/spread/objectSpreadStrictNull.ts"
Expect Syntax Error: "types/spread/spreadDuplicate.ts"
Expect Syntax Error: "types/spread/spreadDuplicateExact.ts"
Expect Syntax Error: "types/spread/spreadMethods.ts"
Expect Syntax Error: "types/spread/spreadObjectOrFalsy.ts"
Expect Syntax Error: "types/spread/spreadOverwritesPropertyStrict.ts"
Expect Syntax Error: "types/spread/spreadTypeVariable.ts"
Expect Syntax Error: "types/spread/spreadUnion2.ts"
Expect Syntax Error: "types/spread/spreadUnion3.ts"
Expect Syntax Error: "types/stringLiteral/stringLiteralTypesAndLogicalOrExpressions01.ts"
Expect Syntax Error: "types/stringLiteral/stringLiteralTypesInVariableDeclarations01.ts"
Expect Syntax Error: "types/stringLiteral/stringLiteralTypesOverloadAssignability01.ts"
Expect Syntax Error: "types/stringLiteral/stringLiteralTypesOverloadAssignability02.ts"
Expect Syntax Error: "types/stringLiteral/stringLiteralTypesOverloads05.ts"
Expect Syntax Error: "types/stringLiteral/stringLiteralTypesWithTemplateStrings02.ts"
Expect Syntax Error: "types/stringLiteral/stringLiteralTypesWithVariousOperators02.ts"
Expect Syntax Error: "types/stringLiteral/typeArgumentsWithStringLiteralTypes01.ts"
Expect Syntax Error: "types/thisType/declarationFiles.ts"
Expect Syntax Error: "types/thisType/looseThisTypeInFunctions.ts"
Expect Syntax Error: "types/thisType/thisTypeAccessibility.ts"
Expect Syntax Error: "types/thisType/thisTypeErrors.ts"
Expect Syntax Error: "types/thisType/thisTypeErrors2.ts"
Expect Syntax Error: "types/thisType/thisTypeInAccessors.ts"
Expect Syntax Error: "types/thisType/thisTypeInAccessorsNegative.ts"
Expect Syntax Error: "types/thisType/thisTypeInFunctions.ts"
Expect Syntax Error: "types/thisType/thisTypeInFunctions2.ts"
Expect Syntax Error: "types/thisType/typeRelationships.ts"
Expect Syntax Error: "types/thisType/unionThisTypeInFunctions.ts"
Expect Syntax Error: "types/tuple/arityAndOrderCompatibility01.ts"
Expect Syntax Error: "types/tuple/castingTuple.ts"
Expect Syntax Error: "types/tuple/contextualTypeWithTuple.ts"
Expect Syntax Error: "types/tuple/emptyTuples/emptyTuplesTypeAssertion01.ts"
Expect Syntax Error: "types/tuple/emptyTuples/emptyTuplesTypeAssertion02.ts"
Expect Syntax Error: "types/tuple/indexerWithTuple.ts"
Expect Syntax Error: "types/tuple/optionalTupleElements1.ts"
Expect Syntax Error: "types/tuple/readonlyArraysAndTuples.ts"
Expect Syntax Error: "types/tuple/strictTupleLength.ts"
Expect Syntax Error: "types/tuple/tupleLengthCheck.ts"
Expect Syntax Error: "types/tuple/unionsOfTupleTypes1.ts"
Expect Syntax Error: "types/tuple/variadicTuples1.ts"
Expect Syntax Error: "types/tuple/variadicTuples2.ts"
Expect Syntax Error: "types/tuple/wideningTuples3.ts"
Expect Syntax Error: "types/tuple/wideningTuples4.ts"
Expect Syntax Error: "types/tuple/wideningTuples5.ts"
Expect Syntax Error: "types/tuple/wideningTuples7.ts"
Expect Syntax Error: "types/typeAliases/directDependenceBetweenTypeAliases.ts"
Expect Syntax Error: "types/typeAliases/intrinsicKeyword.ts"
Expect Syntax Error: "types/typeAliases/intrinsicTypes.ts"
Expect Syntax Error: "types/typeAliases/typeAliasesDoNotMerge.ts"
Expect Syntax Error: "types/typeAliases/typeAliasesForObjectTypes.ts"
Expect Syntax Error: "types/typeParameters/typeArgumentLists/callGenericFunctionWithIncorrectNumberOfTypeArguments.ts"
Expect Syntax Error: "types/typeParameters/typeArgumentLists/callNonGenericFunctionWithTypeArguments.ts"
Expect Syntax Error: "types/typeParameters/typeArgumentLists/functionConstraintSatisfaction2.ts"
Expect Syntax Error: "types/typeParameters/typeArgumentLists/instantiateGenericClassWithWrongNumberOfTypeArguments.ts"
Expect Syntax Error: "types/typeParameters/typeArgumentLists/instantiateNonGenericTypeWithTypeArguments.ts"
Expect Syntax Error: "types/typeParameters/typeArgumentLists/instantiationExpressions.ts"
Expect Syntax Error: "types/typeParameters/typeArgumentLists/typeParameterAsTypeParameterConstraint2.ts"
Expect Syntax Error: "types/typeParameters/typeArgumentLists/wrappedAndRecursiveConstraints4.ts"
Expect Syntax Error: "types/typeParameters/typeParameterAsBaseType.ts"
Expect Syntax Error: "types/typeParameters/typeParameterLists/propertyAccessOnTypeParameterWithConstraints4.ts"
Expect Syntax Error: "types/typeParameters/typeParameterLists/propertyAccessOnTypeParameterWithConstraints5.ts"
Expect Syntax Error: "types/typeParameters/typeParameterLists/staticMembersUsingClassTypeParameter.ts"
Expect Syntax Error: "types/typeParameters/typeParameterLists/typeParameterDirectlyConstrainedToItself.ts"
Expect Syntax Error: "types/typeParameters/typeParameterLists/typeParameterIndirectlyConstrainedToItself.ts"
Expect Syntax Error: "types/typeParameters/typeParameterLists/typesWithDuplicateTypeParameters.ts"
Expect Syntax Error: "types/typeRelationships/apparentType/apparentTypeSubtyping.ts"
Expect Syntax Error: "types/typeRelationships/apparentType/apparentTypeSupertype.ts"
Expect Syntax Error: "types/typeRelationships/assignmentCompatibility/assignmentCompatBetweenTupleAndArray.ts"
Expect Syntax Error: "types/typeRelationships/assignmentCompatibility/assignmentCompatWithCallSignatures.ts"
Expect Syntax Error: "types/typeRelationships/assignmentCompatibility/assignmentCompatWithCallSignatures2.ts"
Expect Syntax Error: "types/typeRelationships/assignmentCompatibility/assignmentCompatWithCallSignatures3.ts"
Expect Syntax Error: "types/typeRelationships/assignmentCompatibility/assignmentCompatWithCallSignatures4.ts"
Expect Syntax Error: "types/typeRelationships/assignmentCompatibility/assignmentCompatWithCallSignatures5.ts"
Expect Syntax Error: "types/typeRelationships/assignmentCompatibility/assignmentCompatWithCallSignatures6.ts"
Expect Syntax Error: "types/typeRelationships/assignmentCompatibility/assignmentCompatWithCallSignaturesWithOptionalParameters.ts"
Expect Syntax Error: "types/typeRelationships/assignmentCompatibility/assignmentCompatWithCallSignaturesWithRestParameters.ts"
Expect Syntax Error: "types/typeRelationships/assignmentCompatibility/assignmentCompatWithConstructSignatures.ts"
Expect Syntax Error: "types/typeRelationships/assignmentCompatibility/assignmentCompatWithConstructSignatures2.ts"
Expect Syntax Error: "types/typeRelationships/assignmentCompatibility/assignmentCompatWithConstructSignatures3.ts"
Expect Syntax Error: "types/typeRelationships/assignmentCompatibility/assignmentCompatWithConstructSignatures4.ts"
Expect Syntax Error: "types/typeRelationships/assignmentCompatibility/assignmentCompatWithConstructSignatures5.ts"
Expect Syntax Error: "types/typeRelationships/assignmentCompatibility/assignmentCompatWithConstructSignatures6.ts"
Expect Syntax Error: "types/typeRelationships/assignmentCompatibility/assignmentCompatWithConstructSignaturesWithOptionalParameters.ts"
Expect Syntax Error: "types/typeRelationships/assignmentCompatibility/assignmentCompatWithDiscriminatedUnion.ts"
Expect Syntax Error: "types/typeRelationships/assignmentCompatibility/assignmentCompatWithEnumIndexer.ts"
Expect Syntax Error: "types/typeRelationships/assignmentCompatibility/assignmentCompatWithGenericCallSignatures2.ts"
Expect Syntax Error: "types/typeRelationships/assignmentCompatibility/assignmentCompatWithGenericCallSignatures4.ts"
Expect Syntax Error: "types/typeRelationships/assignmentCompatibility/assignmentCompatWithGenericCallSignaturesWithOptionalParameters.ts"
Expect Syntax Error: "types/typeRelationships/assignmentCompatibility/assignmentCompatWithNumericIndexer.ts"
Expect Syntax Error: "types/typeRelationships/assignmentCompatibility/assignmentCompatWithNumericIndexer2.ts"
Expect Syntax Error: "types/typeRelationships/assignmentCompatibility/assignmentCompatWithNumericIndexer3.ts"
Expect Syntax Error: "types/typeRelationships/assignmentCompatibility/assignmentCompatWithObjectMembers4.ts"
Expect Syntax Error: "types/typeRelationships/assignmentCompatibility/assignmentCompatWithObjectMembers5.ts"
Expect Syntax Error: "types/typeRelationships/assignmentCompatibility/assignmentCompatWithObjectMembersAccessibility.ts"
Expect Syntax Error: "types/typeRelationships/assignmentCompatibility/assignmentCompatWithObjectMembersOptionality.ts"
Expect Syntax Error: "types/typeRelationships/assignmentCompatibility/assignmentCompatWithObjectMembersOptionality2.ts"
Expect Syntax Error: "types/typeRelationships/assignmentCompatibility/assignmentCompatWithObjectMembersStringNumericNames.ts"
Expect Syntax Error: "types/typeRelationships/assignmentCompatibility/assignmentCompatWithStringIndexer.ts"
Expect Syntax Error: "types/typeRelationships/assignmentCompatibility/assignmentCompatWithStringIndexer2.ts"
Expect Syntax Error: "types/typeRelationships/assignmentCompatibility/assignmentCompatWithStringIndexer3.ts"
Expect Syntax Error: "types/typeRelationships/assignmentCompatibility/callSignatureAssignabilityInInheritance.ts"
Expect Syntax Error: "types/typeRelationships/assignmentCompatibility/callSignatureAssignabilityInInheritance3.ts"
Expect Syntax Error: "types/typeRelationships/assignmentCompatibility/callSignatureAssignabilityInInheritance6.ts"
Expect Syntax Error: "types/typeRelationships/assignmentCompatibility/constructSignatureAssignabilityInInheritance.ts"
Expect Syntax Error: "types/typeRelationships/assignmentCompatibility/constructSignatureAssignabilityInInheritance3.ts"
Expect Syntax Error: "types/typeRelationships/assignmentCompatibility/constructSignatureAssignabilityInInheritance6.ts"
Expect Syntax Error: "types/typeRelationships/assignmentCompatibility/covariantCallbacks.ts"
Expect Syntax Error: "types/typeRelationships/assignmentCompatibility/enumAssignability.ts"
Expect Syntax Error: "types/typeRelationships/assignmentCompatibility/enumAssignabilityInInheritance.ts"
Expect Syntax Error: "types/typeRelationships/assignmentCompatibility/genericCallWithObjectTypeArgsAndInitializers.ts"
Expect Syntax Error: "types/typeRelationships/assignmentCompatibility/nullAssignedToUndefined.ts"
Expect Syntax Error: "types/typeRelationships/assignmentCompatibility/optionalPropertyAssignableToStringIndexSignature.ts"
Expect Syntax Error: "types/typeRelationships/assignmentCompatibility/typeParameterAssignability.ts"
Expect Syntax Error: "types/typeRelationships/assignmentCompatibility/typeParameterAssignability2.ts"
Expect Syntax Error: "types/typeRelationships/assignmentCompatibility/typeParameterAssignability3.ts"
Expect Syntax Error: "types/typeRelationships/assignmentCompatibility/unionTypesAssignability.ts"
Expect Syntax Error: "types/typeRelationships/bestCommonType/bestCommonTypeOfTuple.ts"
Expect Syntax Error: "types/typeRelationships/bestCommonType/bestCommonTypeOfTuple2.ts"
Expect Syntax Error: "types/typeRelationships/comparable/equalityStrictNulls.ts"
Expect Syntax Error: "types/typeRelationships/comparable/equalityWithEnumTypes.ts"
Expect Syntax Error: "types/typeRelationships/comparable/equalityWithIntersectionTypes01.ts"
Expect Syntax Error: "types/typeRelationships/comparable/switchCaseWithUnionTypes01.ts"
Expect Syntax Error: "types/typeRelationships/comparable/typeAssertionsWithIntersectionTypes01.ts"
Expect Syntax Error: "types/typeRelationships/comparable/typeAssertionsWithUnionTypes01.ts"
Expect Syntax Error: "types/typeRelationships/instanceOf/narrowingGenericTypeFromInstanceof01.ts"
Expect Syntax Error: "types/typeRelationships/recursiveTypes/infiniteExpansionThroughInstantiation.ts"
Expect Syntax Error: "types/typeRelationships/recursiveTypes/objectTypeWithRecursiveWrappedProperty.ts"
Expect Syntax Error: "types/typeRelationships/recursiveTypes/objectTypeWithRecursiveWrappedProperty2.ts"
Expect Syntax Error: "types/typeRelationships/recursiveTypes/objectTypeWithRecursiveWrappedPropertyCheckedNominally.ts"
Expect Syntax Error: "types/typeRelationships/recursiveTypes/recursiveTypeReferences1.ts"
Expect Syntax Error: "types/typeRelationships/recursiveTypes/recursiveTypeReferences2.ts"
Expect Syntax Error: "types/typeRelationships/subtypesAndSuperTypes/enumIsNotASubtypeOfAnythingButNumber.ts"
Expect Syntax Error: "types/typeRelationships/subtypesAndSuperTypes/subtypesOfTypeParameter.ts"
Expect Syntax Error: "types/typeRelationships/subtypesAndSuperTypes/subtypesOfTypeParameterWithConstraints.ts"
Expect Syntax Error: "types/typeRelationships/subtypesAndSuperTypes/subtypesOfTypeParameterWithConstraints4.ts"
Expect Syntax Error: "types/typeRelationships/subtypesAndSuperTypes/subtypesOfTypeParameterWithRecursiveConstraints.ts"
Expect Syntax Error: "types/typeRelationships/subtypesAndSuperTypes/subtypesOfUnion.ts"
Expect Syntax Error: "types/typeRelationships/subtypesAndSuperTypes/subtypingWithCallSignaturesA.ts"
Expect Syntax Error: "types/typeRelationships/subtypesAndSuperTypes/subtypingWithCallSignaturesWithOptionalParameters.ts"
Expect Syntax Error: "types/typeRelationships/subtypesAndSuperTypes/subtypingWithCallSignaturesWithRestParameters.ts"
Expect Syntax Error: "types/typeRelationships/subtypesAndSuperTypes/subtypingWithCallSignaturesWithSpecializedSignatures.ts"
Expect Syntax Error: "types/typeRelationships/subtypesAndSuperTypes/subtypingWithConstructSignatures6.ts"
Expect Syntax Error: "types/typeRelationships/subtypesAndSuperTypes/subtypingWithConstructSignaturesWithOptionalParameters.ts"
Expect Syntax Error: "types/typeRelationships/subtypesAndSuperTypes/subtypingWithConstructSignaturesWithSpecializedSignatures.ts"
Expect Syntax Error: "types/typeRelationships/subtypesAndSuperTypes/subtypingWithGenericCallSignaturesWithOptionalParameters.ts"
Expect Syntax Error: "types/typeRelationships/subtypesAndSuperTypes/subtypingWithGenericConstructSignaturesWithOptionalParameters.ts"
Expect Syntax Error: "types/typeRelationships/subtypesAndSuperTypes/subtypingWithNumericIndexer.ts"
Expect Syntax Error: "types/typeRelationships/subtypesAndSuperTypes/subtypingWithNumericIndexer2.ts"
Expect Syntax Error: "types/typeRelationships/subtypesAndSuperTypes/subtypingWithNumericIndexer3.ts"
Expect Syntax Error: "types/typeRelationships/subtypesAndSuperTypes/subtypingWithNumericIndexer4.ts"
Expect Syntax Error: "types/typeRelationships/subtypesAndSuperTypes/subtypingWithNumericIndexer5.ts"
Expect Syntax Error: "types/typeRelationships/subtypesAndSuperTypes/subtypingWithObjectMembers.ts"
Expect Syntax Error: "types/typeRelationships/subtypesAndSuperTypes/subtypingWithObjectMembers2.ts"
Expect Syntax Error: "types/typeRelationships/subtypesAndSuperTypes/subtypingWithObjectMembers3.ts"
Expect Syntax Error: "types/typeRelationships/subtypesAndSuperTypes/subtypingWithObjectMembers5.ts"
Expect Syntax Error: "types/typeRelationships/subtypesAndSuperTypes/subtypingWithObjectMembersAccessibility.ts"
Expect Syntax Error: "types/typeRelationships/subtypesAndSuperTypes/subtypingWithObjectMembersAccessibility2.ts"
Expect Syntax Error: "types/typeRelationships/subtypesAndSuperTypes/subtypingWithObjectMembersOptionality2.ts"
Expect Syntax Error: "types/typeRelationships/subtypesAndSuperTypes/subtypingWithStringIndexer.ts"
Expect Syntax Error: "types/typeRelationships/subtypesAndSuperTypes/subtypingWithStringIndexer2.ts"
Expect Syntax Error: "types/typeRelationships/subtypesAndSuperTypes/subtypingWithStringIndexer3.ts"
Expect Syntax Error: "types/typeRelationships/subtypesAndSuperTypes/subtypingWithStringIndexer4.ts"
Expect Syntax Error: "types/typeRelationships/subtypesAndSuperTypes/unionSubtypeIfEveryConstituentTypeIsSubtype.ts"
Expect Syntax Error: "types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithCallSignatures3.ts"
Expect Syntax Error: "types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithPrivates3.ts"
Expect Syntax Error: "types/typeRelationships/typeAndMemberIdentity/unionTypeIdentity.ts"
Expect Syntax Error: "types/typeRelationships/typeInference/contextualSignatureInstantiation.ts"
Expect Syntax Error: "types/typeRelationships/typeInference/genericCallToOverloadedMethodWithOverloadedArguments.ts"
Expect Syntax Error: "types/typeRelationships/typeInference/genericCallWithConstraintsTypeArgumentInference2.ts"
Expect Syntax Error: "types/typeRelationships/typeInference/genericCallWithConstructorTypedArguments5.ts"
Expect Syntax Error: "types/typeRelationships/typeInference/genericCallWithFunctionTypedArguments.ts"
Expect Syntax Error: "types/typeRelationships/typeInference/genericCallWithFunctionTypedArguments2.ts"
Expect Syntax Error: "types/typeRelationships/typeInference/genericCallWithFunctionTypedArguments5.ts"
Expect Syntax Error: "types/typeRelationships/typeInference/genericCallWithGenericSignatureArguments2.ts"
Expect Syntax Error: "types/typeRelationships/typeInference/genericCallWithGenericSignatureArguments3.ts"
Expect Syntax Error: "types/typeRelationships/typeInference/genericCallWithObjectLiteralArgs.ts"
Expect Syntax Error: "types/typeRelationships/typeInference/genericCallWithObjectTypeArgs.ts"
Expect Syntax Error: "types/typeRelationships/typeInference/genericCallWithObjectTypeArgsAndConstraints3.ts"
Expect Syntax Error: "types/typeRelationships/typeInference/genericCallWithObjectTypeArgsAndConstraints4.ts"
Expect Syntax Error: "types/typeRelationships/typeInference/genericCallWithObjectTypeArgsAndConstraints5.ts"
Expect Syntax Error: "types/typeRelationships/typeInference/genericCallWithOverloadedConstructorTypedArguments2.ts"
Expect Syntax Error: "types/typeRelationships/typeInference/genericCallWithOverloadedFunctionTypedArguments2.ts"
Expect Syntax Error: "types/typeRelationships/typeInference/genericCallWithTupleType.ts"
Expect Syntax Error: "types/typeRelationships/typeInference/genericClassWithFunctionTypedMemberArguments.ts"
Expect Syntax Error: "types/typeRelationships/typeInference/indexSignatureTypeInference.ts"
Expect Syntax Error: "types/typeRelationships/typeInference/intraExpressionInferences.ts"
Expect Syntax Error: "types/typeRelationships/typeInference/unionTypeInference.ts"
Expect Syntax Error: "types/union/contextualTypeWithUnionTypeObjectLiteral.ts"
Expect Syntax Error: "types/union/discriminatedUnionTypes1.ts"
Expect Syntax Error: "types/union/discriminatedUnionTypes2.ts"
Expect Syntax Error: "types/union/unionTypeCallSignatures.ts"
Expect Syntax Error: "types/union/unionTypeCallSignatures4.ts"
Expect Syntax Error: "types/union/unionTypeCallSignatures5.ts"
Expect Syntax Error: "types/union/unionTypeCallSignatures6.ts"
Expect Syntax Error: "types/union/unionTypeConstructSignatures.ts"
Expect Syntax Error: "types/union/unionTypeEquivalence.ts"
Expect Syntax Error: "types/union/unionTypeFromArrayLiteral.ts"
Expect Syntax Error: "types/union/unionTypeMembers.ts"
Expect Syntax Error: "types/union/unionTypePropertyAccessibility.ts"
Expect Syntax Error: "types/union/unionTypeReadonly.ts"
Expect Syntax Error: "types/union/unionTypeReduction2.ts"
Expect Syntax Error: "types/union/unionTypeWithIndexSignature.ts"
Expect Syntax Error: "types/uniqueSymbol/uniqueSymbolsDeclarationsInJs.ts"
Expect Syntax Error: "types/uniqueSymbol/uniqueSymbolsDeclarationsInJsErrors.ts"
Expect Syntax Error: "types/uniqueSymbol/uniqueSymbolsErrors.ts"
Expect Syntax Error: "types/unknown/unknownControlFlow.ts"
Expect Syntax Error: "types/unknown/unknownType1.ts"
Expect Syntax Error: "types/unknown/unknownType2.ts"
Expect Syntax Error: "types/witness/witness.ts"
Expect to Parse: "classes/propertyMemberDeclarations/autoAccessor4.ts"

  × Automatic Semicolon Insertion
   ╭─[classes/propertyMemberDeclarations/autoAccessor4.ts:4:1]
 4 │ class C1 {
 5 │     accessor 0: any;
   ·             ┬
   ·             ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 6 │     accessor 1 = 1;
   ╰────
  help: Try insert a semicolon here
Expect to Parse: "classes/propertyMemberDeclarations/autoAccessorAllowedModifiers.ts"

  × Automatic Semicolon Insertion
    ╭─[classes/propertyMemberDeclarations/autoAccessorAllowedModifiers.ts:15:1]
 15 │     accessor "k": any;
 16 │     accessor 108: any;
    ·             ┬
    ·             ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 17 │     accessor ["m"]: any;
    ╰────
  help: Try insert a semicolon here
Expect to Parse: "classes/propertyMemberDeclarations/staticPropertyNameConflictsInAmbientContext.ts"

  × Classes may not have a static property named prototype
    ╭─[classes/propertyMemberDeclarations/staticPropertyNameConflictsInAmbientContext.ts:26:1]
 26 │ declare class StaticPrototype {
 27 │     static prototype: number; // ok
    ·            ────┬────
    ·                ╰── Classes may not have a static property named prototype
 28 │     prototype: string; // ok
    ╰────

  × Classes may not have a static property named prototype
    ╭─[classes/propertyMemberDeclarations/staticPropertyNameConflictsInAmbientContext.ts:31:1]
 31 │ declare class StaticPrototypeFn {
 32 │     static prototype: any; // ok
    ·            ────┬────
    ·                ╰── Classes may not have a static property named prototype
 33 │     prototype(): any; // ok
    ╰────
Expect to Parse: "esDecorators/classExpression/classSuper/esDecorators-classExpression-classSuper.1.ts"

  × Unexpected token
    ╭─[esDecorators/classExpression/classSuper/esDecorators-classExpression-classSuper.1.ts:12:1]
 12 │ 
 13 │ (@dec
    ·  ─
 14 │ class C extends Base {
    ╰────
Expect to Parse: "esDecorators/classExpression/classSuper/esDecorators-classExpression-classSuper.2.ts"

  × Unexpected token
   ╭─[esDecorators/classExpression/classSuper/esDecorators-classExpression-classSuper.2.ts:7:1]
 7 │ // class expression in extends should not get an assigned name
 8 │ (@dec
   ·  ─
 9 │ class C1 extends class { } {
   ╰────
Expect to Parse: "esDecorators/classExpression/classSuper/esDecorators-classExpression-classSuper.3.ts"

  × Unexpected token
    ╭─[esDecorators/classExpression/classSuper/esDecorators-classExpression-classSuper.3.ts:12:1]
 12 │ 
 13 │ (@dec
    ·  ─
 14 │ class C extends Base {
    ╰────
Expect to Parse: "esDecorators/classExpression/classSuper/esDecorators-classExpression-classSuper.4.ts"

  × Unexpected token
    ╭─[esDecorators/classExpression/classSuper/esDecorators-classExpression-classSuper.4.ts:12:1]
 12 │ 
 13 │ (@dec
    ·  ─
 14 │ class C extends Base {
    ╰────
Expect to Parse: "esDecorators/classExpression/classSuper/esDecorators-classExpression-classSuper.5.ts"

  × Unexpected token
    ╭─[esDecorators/classExpression/classSuper/esDecorators-classExpression-classSuper.5.ts:12:1]
 12 │ 
 13 │ (@dec
    ·  ─
 14 │ class C1 extends Base {
    ╰────
Expect to Parse: "esDecorators/classExpression/classSuper/esDecorators-classExpression-classSuper.6.ts"

  × Unexpected token
    ╭─[esDecorators/classExpression/classSuper/esDecorators-classExpression-classSuper.6.ts:12:1]
 12 │ // none of the following should result in caching `super`
 13 │ (@dec
    ·  ─
 14 │ class C extends Base {
    ╰────
Expect to Parse: "esDecorators/classExpression/esDecorators-classExpression-commentPreservation.ts"

  × Unexpected token
    ╭─[esDecorators/classExpression/esDecorators-classExpression-commentPreservation.ts:10:1]
 10 │ /*2*/
 11 │ @dec
    · ─
 12 │ /*3*/
    ╰────
Expect to Parse: "esDecorators/classExpression/namedEvaluation/esDecorators-classExpression-namedEvaluation.1.ts"

  × Unexpected token
    ╭─[esDecorators/classExpression/namedEvaluation/esDecorators-classExpression-namedEvaluation.1.ts:10:1]
 10 │ 
 11 │ x = @dec class { };
    ·     ─
 12 │ x = class { @dec y: any; };
    ╰────
Expect to Parse: "esDecorators/classExpression/namedEvaluation/esDecorators-classExpression-namedEvaluation.10.ts"

  × Unexpected token
    ╭─[esDecorators/classExpression/namedEvaluation/esDecorators-classExpression-namedEvaluation.10.ts:9:1]
  9 │ 
 10 │ { class C { static x = @dec class {}; } }
    ·                        ─
 11 │ { class C { static "x" = @dec class {}; } }
    ╰────
Expect to Parse: "esDecorators/classExpression/namedEvaluation/esDecorators-classExpression-namedEvaluation.11.ts"

  × Unexpected token
    ╭─[esDecorators/classExpression/namedEvaluation/esDecorators-classExpression-namedEvaluation.11.ts:8:1]
  8 │ 
  9 │ (@dec class {});
    ·  ─
 10 │ (class { @dec y: any });
    ╰────
Expect to Parse: "esDecorators/classExpression/namedEvaluation/esDecorators-classExpression-namedEvaluation.2.ts"

  × Unexpected token
    ╭─[esDecorators/classExpression/namedEvaluation/esDecorators-classExpression-namedEvaluation.2.ts:10:1]
 10 │ 
 11 │ ({ x: @dec class { } });
    ·       ─
 12 │ ({ x: class { @dec y: any; } });
    ╰────
Expect to Parse: "esDecorators/classExpression/namedEvaluation/esDecorators-classExpression-namedEvaluation.3.ts"

  × Unexpected token
    ╭─[esDecorators/classExpression/namedEvaluation/esDecorators-classExpression-namedEvaluation.3.ts:8:1]
  8 │ 
  9 │ { let x = @dec class { }; }
    ·           ─
 10 │ { let x = class { @dec y: any; }; }
    ╰────
Expect to Parse: "esDecorators/classExpression/namedEvaluation/esDecorators-classExpression-namedEvaluation.4.ts"

  × Unexpected token
    ╭─[esDecorators/classExpression/namedEvaluation/esDecorators-classExpression-namedEvaluation.4.ts:8:1]
  8 │ 
  9 │ { const [x = @dec class { }] = obj; }
    ·              ─
 10 │ { const [x = class { @dec y: any; }] = obj; }
    ╰────
Expect to Parse: "esDecorators/classExpression/namedEvaluation/esDecorators-classExpression-namedEvaluation.5.ts"

  × Unexpected token
    ╭─[esDecorators/classExpression/namedEvaluation/esDecorators-classExpression-namedEvaluation.5.ts:8:1]
  8 │ 
  9 │ ({ x = @dec class { } } = obj);
    ·        ─
 10 │ ({ x = class { @dec y: any; } } = obj);
    ╰────
Expect to Parse: "esDecorators/classExpression/namedEvaluation/esDecorators-classExpression-namedEvaluation.6.ts"

  × Unexpected token
    ╭─[esDecorators/classExpression/namedEvaluation/esDecorators-classExpression-namedEvaluation.6.ts:8:1]
  8 │ 
  9 │ ({ y: x = @dec class { } } = obj);
    ·           ─
 10 │ ({ y: x = class { @dec y: any; } } = obj);
    ╰────
Expect to Parse: "esDecorators/classExpression/namedEvaluation/esDecorators-classExpression-namedEvaluation.7.ts"

  × Unexpected token
    ╭─[esDecorators/classExpression/namedEvaluation/esDecorators-classExpression-namedEvaluation.7.ts:8:1]
  8 │ 
  9 │ [x = @dec class { }] = obj;
    ·      ─
 10 │ [x = class { @dec y: any; }] = obj;
    ╰────
Expect to Parse: "expressions/typeSatisfaction/typeSatisfaction_contextualTyping1.ts"

  × Automatic Semicolon Insertion
   ╭─[expressions/typeSatisfaction/typeSatisfaction_contextualTyping1.ts:5:1]
 5 │     isOdd: n => n % 2 === 1
 6 │ } satisfies Predicates;
   ·  ┬
   ·  ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
   ╰────
  help: Try insert a semicolon here
Expect to Parse: "expressions/typeSatisfaction/typeSatisfaction_ensureInterfaceImpl.ts"

  × Automatic Semicolon Insertion
    ╭─[expressions/typeSatisfaction/typeSatisfaction_ensureInterfaceImpl.ts:10:1]
 10 │     stop() { }
 11 │ } satisfies Movable & Record<string, unknown>;
    ·  ┬
    ·  ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
    ╰────
  help: Try insert a semicolon here
Expect to Parse: "expressions/typeSatisfaction/typeSatisfaction_propertyValueConformance1.ts"

  × Automatic Semicolon Insertion
    ╭─[expressions/typeSatisfaction/typeSatisfaction_propertyValueConformance1.ts:24:1]
 24 │     s: "false"
 25 │ } satisfies Facts;
    ·  ┬
    ·  ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
    ╰────
  help: Try insert a semicolon here
Expect to Parse: "expressions/typeSatisfaction/typeSatisfaction_propertyValueConformance2.ts"

  × Automatic Semicolon Insertion
    ╭─[expressions/typeSatisfaction/typeSatisfaction_propertyValueConformance2.ts:24:1]
 24 │     s: "false"
 25 │ } satisfies Facts;
    ·  ┬
    ·  ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
    ╰────
  help: Try insert a semicolon here
Expect to Parse: "externalModules/topLevelAwait.2.ts"

  × The keyword '"await"' is reserved
   ╭─[externalModules/topLevelAwait.2.ts:3:1]
 3 │ 
 4 │ declare namespace foo { const await: any; }
   ·                               ─────
 5 │ 
   ╰────

  × The keyword '"await"' is reserved
   ╭─[externalModules/topLevelAwait.2.ts:6:1]
 6 │ // await allowed in import=namespace when not a module
 7 │ import await = foo.await;
   ·        ─────
   ╰────
Expect to Parse: "externalModules/topLevelAwait.3.ts"

  × The keyword '"await"' is reserved
   ╭─[externalModules/topLevelAwait.3.ts:6:1]
 6 │ export {};
 7 │ declare const await: any;
   ·               ─────
 8 │ declare class C extends await {}
   ╰────

  × The keyword '"await"' is reserved
   ╭─[externalModules/topLevelAwait.3.ts:7:1]
 7 │ declare const await: any;
 8 │ declare class C extends await {}
   ·                         ─────
   ╰────
Expect to Parse: "jsdoc/declarations/jsDeclarationsNonIdentifierInferredNames.ts"

  × Unexpected token
    ╭─[jsdoc/declarations/jsDeclarationsNonIdentifierInferredNames.ts:11:1]
 11 │ export const ExampleFunctionalComponent = ({ "data-testid": dataTestId, [dynPropName]: dynProp }) => (
 12 │     <>Hello</>
    ·      ─
 13 │ );
    ╰────
Expect to Parse: "jsx/jsxAttributeInitializer.ts"

  × Expect token
   ╭─[jsx/jsxAttributeInitializer.ts:5:1]
 5 │ <div>
 6 │     <div attr=<div /> />
   ·          ──┬─
   ·            ╰── Expect `>` here, but found `Identifier`
 7 │     <div attr=<div>foo</div> />
   ╰────
Expect to Parse: "jsx/tsxEmitSpreadAttribute.ts"

  × Expect token
   ╭─[jsx/tsxEmitSpreadAttribute.ts:7:1]
 7 │ export function T1(a: any) {
 8 │     return <div className={"T1"} { ...a }>T1</div>;
   ·                 ────┬────
   ·                     ╰── Expect `>` here, but found `Identifier`
 9 │ }
   ╰────
Expect to Parse: "jsx/tsxReactEmitSpreadAttribute.ts"

  × Expect token
   ╭─[jsx/tsxReactEmitSpreadAttribute.ts:6:1]
 6 │ export function T1(a: any) {
 7 │     return <div className={"T1"} { ...a }>T1</div>;
   ·                 ────┬────
   ·                     ╰── Expect `>` here, but found `Identifier`
 8 │ }
   ╰────
Expect to Parse: "salsa/privateIdentifierExpando.ts"

  × Private identifier '#"bar"' is not allowed outside class bodies
   ╭─[salsa/privateIdentifierExpando.ts:7:1]
 7 │ const x = {};
 8 │ x.#bar.baz = 20;
   ·   ────
   ╰────

  × Automatic Semicolon Insertion
   ╭─[async/es2017/asyncArrowFunction/asyncArrowFunction6_es2017.ts:3:1]
 3 │ 
 4 │ var foo = async (a = await): Promise<void> => {
   ·                            ▲
   ·                            ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 5 │ }
   ╰────
  help: Try insert a semicolon here

  × Unexpected token
   ╭─[async/es2017/asyncArrowFunction/asyncArrowFunction7_es2017.ts:5:1]
 5 │   // 'await' here is an identifier, and not an await expression.
 6 │   var foo = async (a = await): Promise<void> => {
   ·                             ─
 7 │   }
   ╰────

  × Unexpected token
   ╭─[async/es2017/asyncArrowFunction/asyncArrowFunction8_es2017.ts:4:1]
 4 │ var foo = async (): Promise<void> => {
 5 │   var v = { [await]: foo }
   ·                   ─
 6 │ }
   ╰────

  × Invalid assignment
   ╭─[async/es2017/await_unaryExpression_es2017_3.ts:3:1]
 3 │ async function bar1() {
 4 │     ++await 42; // Error
   ·       ────┬───
   ·           ╰── Cannot assign to this expression
 5 │ }
   ╰────

  × Unexpected token
   ╭─[async/es2017/functionDeclarations/asyncFunctionDeclaration6_es2017.ts:2:1]
 2 │ // @noEmitHelpers: true
 3 │ async function foo(a = await): Promise<void> {
   ·                             ─
 4 │ }
   ╰────

  × Unexpected token
   ╭─[async/es2017/functionDeclarations/asyncFunctionDeclaration7_es2017.ts:4:1]
 4 │   // 'await' here is an identifier, and not a yield expression.
 5 │   async function foo(a = await): Promise<void> {
   ·                               ─
 6 │   }
   ╰────

  × Unexpected token
   ╭─[async/es2017/functionDeclarations/asyncFunctionDeclaration9_es2017.ts:3:1]
 3 │ async function foo(): Promise<void> {
 4 │   var v = { [await]: foo }
   ·                   ─
 5 │ }
   ╰────

  × Automatic Semicolon Insertion
   ╭─[async/es5/asyncArrowFunction/asyncArrowFunction6_es5.ts:4:1]
 4 │ 
 5 │ var foo = async (a = await): Promise<void> => {
   ·                            ▲
   ·                            ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 6 │ }
   ╰────
  help: Try insert a semicolon here

  × Unexpected token
   ╭─[async/es5/asyncArrowFunction/asyncArrowFunction7_es5.ts:6:1]
 6 │   // 'await' here is an identifier, and not an await expression.
 7 │   var foo = async (a = await): Promise<void> => {
   ·                             ─
 8 │   }
   ╰────

  × Unexpected token
   ╭─[async/es5/asyncArrowFunction/asyncArrowFunction8_es5.ts:5:1]
 5 │ var foo = async (): Promise<void> => {
 6 │   var v = { [await]: foo }
   ·                   ─
 7 │ }
   ╰────

  × Constructor can't be an async method
   ╭─[async/es5/asyncConstructor_es5.ts:4:1]
 4 │ class C {
 5 │   async constructor() {
   ·         ─────┬─────
   ·              ╰── Constructor can't be an async method
 6 │   }
   ╰────

  × Expect token
   ╭─[async/es5/asyncGetter_es5.ts:4:1]
 4 │ class C {
 5 │   async get foo() {
   ·             ─┬─
   ·              ╰── Expect `(` here, but found `Identifier`
 6 │   }
   ╰────

  × Expect token
   ╭─[async/es5/asyncSetter_es5.ts:4:1]
 4 │ class C {
 5 │   async set foo(value) {
   ·             ─┬─
   ·              ╰── Expect `(` here, but found `Identifier`
 6 │   }
   ╰────

  × Unexpected token
   ╭─[async/es5/functionDeclarations/asyncFunctionDeclaration6_es5.ts:3:1]
 3 │ // @noEmitHelpers: true
 4 │ async function foo(a = await): Promise<void> {
   ·                             ─
 5 │ }
   ╰────

  × Unexpected token
   ╭─[async/es5/functionDeclarations/asyncFunctionDeclaration7_es5.ts:5:1]
 5 │   // 'await' here is an identifier, and not a yield expression.
 6 │   async function foo(a = await): Promise<void> {
   ·                               ─
 7 │   }
   ╰────

  × Unexpected token
   ╭─[async/es5/functionDeclarations/asyncFunctionDeclaration9_es5.ts:4:1]
 4 │ async function foo(): Promise<void> {
 5 │   var v = { [await]: foo }
   ·                   ─
 6 │ }
   ╰────

  × Automatic Semicolon Insertion
   ╭─[async/es6/asyncArrowFunction/asyncArrowFunction6_es6.ts:3:1]
 3 │ 
 4 │ var foo = async (a = await): Promise<void> => {
   ·                            ▲
   ·                            ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 5 │ }
   ╰────
  help: Try insert a semicolon here

  × Unexpected token
   ╭─[async/es6/asyncArrowFunction/asyncArrowFunction7_es6.ts:5:1]
 5 │   // 'await' here is an identifier, and not an await expression.
 6 │   var foo = async (a = await): Promise<void> => {
   ·                             ─
 7 │   }
   ╰────

  × Unexpected token
   ╭─[async/es6/asyncArrowFunction/asyncArrowFunction8_es6.ts:4:1]
 4 │ var foo = async (): Promise<void> => {
 5 │   var v = { [await]: foo }
   ·                   ─
 6 │ }
   ╰────

  × Constructor can't be an async method
   ╭─[async/es6/asyncConstructor_es6.ts:3:1]
 3 │ class C {  
 4 │   async constructor() {    
   ·         ─────┬─────
   ·              ╰── Constructor can't be an async method
 5 │   }
   ╰────

  × Expect token
   ╭─[async/es6/asyncGetter_es6.ts:3:1]
 3 │ class C {
 4 │   async get foo() {
   ·             ─┬─
   ·              ╰── Expect `(` here, but found `Identifier`
 5 │   }
   ╰────

  × Expect token
   ╭─[async/es6/asyncSetter_es6.ts:3:1]
 3 │ class C {
 4 │   async set foo(value) {
   ·             ─┬─
   ·              ╰── Expect `(` here, but found `Identifier`
 5 │   }
   ╰────

  × Invalid assignment
   ╭─[async/es6/await_unaryExpression_es6_3.ts:3:1]
 3 │ async function bar1() {
 4 │     ++await 42; // Error
   ·       ────┬───
   ·           ╰── Cannot assign to this expression
 5 │ }
   ╰────

  × Unexpected token
   ╭─[async/es6/functionDeclarations/asyncFunctionDeclaration6_es6.ts:2:1]
 2 │ // @noEmitHelpers: true
 3 │ async function foo(a = await): Promise<void> {
   ·                             ─
 4 │ }
   ╰────

  × Unexpected token
   ╭─[async/es6/functionDeclarations/asyncFunctionDeclaration7_es6.ts:4:1]
 4 │   // 'await' here is an identifier, and not a yield expression.
 5 │   async function foo(a = await): Promise<void> {
   ·                               ─
 6 │   }
   ╰────

  × Unexpected token
   ╭─[async/es6/functionDeclarations/asyncFunctionDeclaration9_es6.ts:3:1]
 3 │ async function foo(): Promise<void> {
 4 │   var v = { [await]: foo }
   ·                   ─
 5 │ }
   ╰────

  × Unexpected token
   ╭─[classes/classDeclarations/classAbstractKeyword/classAbstractCrashedOnce.ts:7:1]
 7 │         this.
 8 │     }
   ·     ─
 9 │ }
   ╰────

  × Unexpected token
   ╭─[classes/classDeclarations/classAbstractKeyword/classAbstractManyKeywords.ts:2:1]
 2 │ export abstract class B {}
 3 │ default abstract class C {}
   · ───────
 4 │ import abstract class D {}
   ╰────

  × Expect token
    ╭─[classes/classDeclarations/classAbstractKeyword/classAbstractMixedWithModifiers.ts:15:1]
 15 │     abstract async foo_f();
 16 │     async abstract foo_g();
    ·                    ──┬──
    ·                      ╰── Expect `(` here, but found `Identifier`
 17 │ }
    ╰────

  × Automatic Semicolon Insertion
   ╭─[classes/classDeclarations/classBody/classBodyWithStatements.ts:1:1]
 1 │ class C {
 2 │     var x = 1;
   ·        ┬
   ·        ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 3 │ }
   ╰────
  help: Try insert a semicolon here

  × Expect token
   ╭─[classes/classDeclarations/classHeritageSpecification/classExtendingOptionalChain.ts:8:1]
 8 │ // error
 9 │ class C2 implements A?.B {}
   ·                      ─┬
   ·                       ╰── Expect `{` here, but found `?.`
   ╰────

  × Unexpected token
   ╭─[classes/classDeclarations/classHeritageSpecification/classExtendingPrimitive.ts:6:1]
 6 │ class C4 extends Void  { }
 7 │ class C4a extends void {}
   ·                   ────
 8 │ class C5 extends Null { }
   ╰────

  × Unexpected token
   ╭─[classes/classDeclarations/classHeritageSpecification/classExtendingPrimitive2.ts:2:1]
 2 │ 
 3 │ class C4a extends void {}
   ·                   ────
 4 │ class C5a extends null { }
   ╰────

  × Expect token
   ╭─[classes/classDeclarations/classHeritageSpecification/classExtendsEveryObjectType.ts:5:1]
 5 │ 
 6 │ class C2 extends { foo: string; } { } // error
   ·                               ┬
   ·                               ╰── Expect `,` here, but found `;`
 7 │ var x: { foo: string; }
   ╰────

  × Expect token
   ╭─[classes/classDeclarations/classHeritageSpecification/classExtendsEveryObjectType2.ts:1:1]
 1 │ class C2 extends { foo: string; } { } // error
   ·                               ┬
   ·                               ╰── Expect `,` here, but found `;`
 2 │ 
   ╰────

  × Expect token
   ╭─[classes/classDeclarations/classWithPredefinedTypesAsNames2.ts:2:1]
 2 │ 
 3 │ class void {}
   ·       ──┬─
   ·         ╰── Expect `{` here, but found `void`
   ╰────

  × Private field '"y"' must be declared in an enclosing class
    ╭─[classes/classStaticBlock/classStaticBlock16.ts:12:1]
 12 │     getX = (obj: C) => obj.#x;
 13 │     getY = (obj: D) => obj.#y;
    ·                            ──
 14 │   }
    ╰────

  × Private field '"x"' must be declared in an enclosing class
    ╭─[classes/classStaticBlock/classStaticBlock16.ts:22:1]
 22 │     // getY has privileged access to y
 23 │     getX = (obj: C) => obj.#x;
    ·                            ──
 24 │     getY = (obj: D) => obj.#y;
    ╰────

  × Expect token
   ╭─[classes/classStaticBlock/classStaticBlock20.ts:1:1]
 1 │ class C {
 2 │     async static {
   ·                  ┬
   ·                  ╰── Expect `(` here, but found `{`
 3 │         // something
   ╰────

  × Unexpected token
    ╭─[classes/classStaticBlock/classStaticBlock22.ts:26:1]
 26 │       await = 1; // legal
 27 │       x = await; // legal (initializers have an implicit function boundary)
    ·                ─
 28 │     };
    ╰────

  × Unexpected token
   ╭─[classes/classStaticBlock/classStaticBlock26.ts:4:1]
 4 │     static {
 5 │         await; // illegal
   ·              ─
 6 │     }
   ╰────

  × Unexpected token
    ╭─[classes/classStaticBlock/classStaticBlock6.ts:12:1]
 12 │     static {
 13 │         await: if (true) {
    ·              ─
 14 │ 
    ╰────

  × Jump target cannot cross function boundary.
   ╭─[classes/classStaticBlock/classStaticBlock8.ts:5:1]
 5 │                 if (v === 1) {
 6 │                     break label;
   ·                           ─────
 7 │                 }
   ╰────

  × Jump target cannot cross function boundary.
    ╭─[classes/classStaticBlock/classStaticBlock8.ts:8:1]
  8 │                 if (v === 2) {
  9 │                     continue label;
    ·                              ─────
 10 │                 }
    ╰────

  × Illegal break statement
    ╭─[classes/classStaticBlock/classStaticBlock8.ts:11:1]
 11 │                 if (v === 3) {
 12 │                     break
    ·                     ─────
 13 │                 }
    ╰────
  help: A `break` statement can only be used within an enclosing iteration or switch statement.

  × Illegal continue statement: no surrounding iteration statement
    ╭─[classes/classStaticBlock/classStaticBlock8.ts:14:1]
 14 │                 if (v === 4) {
 15 │                     continue
    ·                     ────────
 16 │                 }
    ╰────
  help: A `continue` statement can only be used within an enclosing `for`, `while` or `do while`

  × Automatic Semicolon Insertion
   ╭─[classes/constructorDeclarations/superCalls/derivedClassSuperCallsInNonConstructorMembers.ts:7:1]
 7 │ class Derived extends Base {
 8 │     a: super();
   ·             ▲
   ·             ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 9 │     b() {
   ╰────
  help: Try insert a semicolon here

  × Expect token
   ╭─[classes/indexMemberDeclarations/privateIndexer2.ts:3:1]
 3 │ var x = {
 4 │     private [x: string]: string;
   ·             ┬
   ·             ╰── Expect `,` here, but found `[`
 5 │ }
   ╰────

  × Automatic Semicolon Insertion
    ╭─[classes/members/accessibility/privateInstanceMemberAccessibility.ts:11:1]
 11 │ 
 12 │     a: this.foo; // error
    ·            ▲
    ·            ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 13 │ }
    ╰────
  help: Try insert a semicolon here

  × Private identifier '#"prop"' is not allowed outside class bodies
    ╭─[classes/members/privateNames/privateNameAccessorsAccess.ts:15:1]
 15 │ }
 16 │ new A2().#prop; // Error
    ·          ─────
 17 │ 
    ╰────

  × Private identifier '#"prop"' is not allowed outside class bodies
    ╭─[classes/members/privateNames/privateNameAccessorsAccess.ts:18:1]
 18 │ function  foo (){
 19 │     new A2().#prop; // Error
    ·              ─────
 20 │ }
    ╰────

  × Private field '"prop"' must be declared in an enclosing class
    ╭─[classes/members/privateNames/privateNameAccessorsAccess.ts:23:1]
 23 │     m() {
 24 │         new A2().#prop;
    ·                  ─────
 25 │     }
    ╰────

  × Private field '"prop"' must be declared in an enclosing class
    ╭─[classes/members/privateNames/privateNameAccessorssDerivedClasses.ts:10:1]
 10 │     static method(x: Derived) {
 11 │         console.log(x.#prop);
    ·                       ─────
 12 │     }
    ╰────

  × Private field '"bar"' must be declared in an enclosing class
    ╭─[classes/members/privateNames/privateNameAndAny.ts:11:1]
 11 │         thing.#baz;
 12 │         thing.#bar; // Error
    ·               ────
 13 │         thing.#foo();
    ╰────

  × Private field '"bar"' must be declared in an enclosing class
    ╭─[classes/members/privateNames/privateNameAndAny.ts:18:1]
 18 │         thing.#baz;
 19 │         thing.#bar;
    ·               ────
 20 │         thing.#foo();
    ╰────

  × Private field '"bar"' must be declared in an enclosing class
    ╭─[classes/members/privateNames/privateNameAndAny.ts:25:1]
 25 │         thing.#baz;
 26 │         thing.#bar;
    ·               ────
 27 │         thing.#foo();
    ╰────

  × Private field '"f"' must be declared in an enclosing class
    ╭─[classes/members/privateNames/privateNameAndIndexSignature.ts:8:1]
  8 │     constructor(message: string) {
  9 │         this.#f = 3           // Error (index signatures do not implicitly declare private names)
    ·              ──
 10 │         this["#foo"] = 3;     // Okay (type has index signature and "#foo" does not collide with private identifier #foo)
    ╰────

  × Unexpected token
   ╭─[classes/members/privateNames/privateNameAndPropertySignature.ts:1:1]
 1 │ type A = {
 2 │     #foo: string;
   ·     ────
 3 │     #bar(): string;
   ╰────

  × Private identifier '#"nope"' is not allowed outside class bodies
   ╭─[classes/members/privateNames/privateNameBadAssignment.ts:2:1]
 2 │ 
 3 │ exports.#nope = 1;           // Error (outside class body)
   ·         ─────
 4 │ function A() { }
   ╰────

  × Private identifier '#"no"' is not allowed outside class bodies
   ╭─[classes/members/privateNames/privateNameBadAssignment.ts:4:1]
 4 │ function A() { }
 5 │ A.prototype.#no = 2;         // Error (outside class body)
   ·             ───
 6 │ 
   ╰────

  × Private identifier '#"foo"' is not allowed outside class bodies
   ╭─[classes/members/privateNames/privateNameBadAssignment.ts:7:1]
 7 │ class B {}
 8 │ B.#foo = 3;                  // Error (outside class body)
   ·   ────
 9 │ 
   ╰────

  × Private field '"foo"' must be declared in an enclosing class
    ╭─[classes/members/privateNames/privateNameBadAssignment.ts:13:1]
 13 │         exports.#bar = 6;    // Error
 14 │         this.#foo = 3;       // Error (undeclared)
    ·              ────
 15 │     }
    ╰────

  × Unexpected token
   ╭─[classes/members/privateNames/privateNameBadDeclaration.ts:2:1]
 2 │ A.prototype = {
 3 │   #x: 1,         // Error
   ·   ──
 4 │   #m() {},       // Error
   ╰────

  × Classes can't have an element named '#constructor'
   ╭─[classes/members/privateNames/privateNameConstructorReserved.ts:3:1]
 3 │ class A {
 4 │     #constructor() {}      // Error: `#constructor` is a reserved word.
   ·     ──────┬─────
   ·           ╰── Classes can't have an element named '#constructor'
 5 │ }
   ╰────

  × Identifier `"foo"` has already been declared
    ╭─[classes/members/privateNames/privateNameDuplicateField.ts:7:1]
  7 │     class A_Field_Field {
  8 │         #foo = "foo";
    ·         ──┬─
    ·           ╰── `foo` has already been declared here
  9 │         #foo = "foo";
    ·         ──┬─
    ·           ╰── It can not be redeclared here
 10 │     }
    ╰────

  × Identifier `"foo"` has already been declared
    ╭─[classes/members/privateNames/privateNameDuplicateField.ts:13:1]
 13 │     class A_Field_Method {
 14 │         #foo = "foo";
    ·         ──┬─
    ·           ╰── `foo` has already been declared here
 15 │         #foo() { }
    ·         ──┬─
    ·           ╰── It can not be redeclared here
 16 │     }
    ╰────

  × Identifier `"foo"` has already been declared
    ╭─[classes/members/privateNames/privateNameDuplicateField.ts:19:1]
 19 │     class A_Field_Getter {
 20 │         #foo = "foo";
    ·         ──┬─
    ·           ╰── `foo` has already been declared here
 21 │         get #foo() { return ""}
    ·             ──┬─
    ·               ╰── It can not be redeclared here
 22 │     }
    ╰────

  × Identifier `"foo"` has already been declared
    ╭─[classes/members/privateNames/privateNameDuplicateField.ts:25:1]
 25 │     class A_Field_Setter {
 26 │         #foo = "foo";
    ·         ──┬─
    ·           ╰── `foo` has already been declared here
 27 │         set #foo(value: string) { }
    ·             ──┬─
    ·               ╰── It can not be redeclared here
 28 │     }
    ╰────

  × Identifier `"foo"` has already been declared
    ╭─[classes/members/privateNames/privateNameDuplicateField.ts:31:1]
 31 │     class A_Field_StaticField {
 32 │         #foo = "foo";
    ·         ──┬─
    ·           ╰── `foo` has already been declared here
 33 │         static #foo = "foo";
    ·                ──┬─
    ·                  ╰── It can not be redeclared here
 34 │     }
    ╰────

  × Identifier `"foo"` has already been declared
    ╭─[classes/members/privateNames/privateNameDuplicateField.ts:37:1]
 37 │     class A_Field_StaticMethod {
 38 │         #foo = "foo";
    ·         ──┬─
    ·           ╰── `foo` has already been declared here
 39 │         static #foo() { }
    ·                ──┬─
    ·                  ╰── It can not be redeclared here
 40 │     }
    ╰────

  × Identifier `"foo"` has already been declared
    ╭─[classes/members/privateNames/privateNameDuplicateField.ts:43:1]
 43 │     class A_Field_StaticGetter {
 44 │         #foo = "foo";
    ·         ──┬─
    ·           ╰── `foo` has already been declared here
 45 │         static get #foo() { return ""}
    ·                    ──┬─
    ·                      ╰── It can not be redeclared here
 46 │     }
    ╰────

  × Identifier `"foo"` has already been declared
    ╭─[classes/members/privateNames/privateNameDuplicateField.ts:49:1]
 49 │     class A_Field_StaticSetter {
 50 │         #foo = "foo";
    ·         ──┬─
    ·           ╰── `foo` has already been declared here
 51 │         static set #foo(value: string) { }
    ·                    ──┬─
    ·                      ╰── It can not be redeclared here
 52 │     }
    ╰────

  × Identifier `"foo"` has already been declared
    ╭─[classes/members/privateNames/privateNameDuplicateField.ts:57:1]
 57 │     class A_Method_Field {
 58 │         #foo() { }
    ·         ──┬─
    ·           ╰── `foo` has already been declared here
 59 │         #foo = "foo";
    ·         ──┬─
    ·           ╰── It can not be redeclared here
 60 │     }
    ╰────

  × Identifier `"foo"` has already been declared
    ╭─[classes/members/privateNames/privateNameDuplicateField.ts:63:1]
 63 │     class A_Method_Method {
 64 │         #foo() { }
    ·         ──┬─
    ·           ╰── `foo` has already been declared here
 65 │         #foo() { }
    ·         ──┬─
    ·           ╰── It can not be redeclared here
 66 │     }
    ╰────

  × Identifier `"foo"` has already been declared
    ╭─[classes/members/privateNames/privateNameDuplicateField.ts:69:1]
 69 │     class A_Method_Getter {
 70 │         #foo() { }
    ·         ──┬─
    ·           ╰── `foo` has already been declared here
 71 │         get #foo() { return ""}
    ·             ──┬─
    ·               ╰── It can not be redeclared here
 72 │     }
    ╰────

  × Identifier `"foo"` has already been declared
    ╭─[classes/members/privateNames/privateNameDuplicateField.ts:75:1]
 75 │     class A_Method_Setter {
 76 │         #foo() { }
    ·         ──┬─
    ·           ╰── `foo` has already been declared here
 77 │         set #foo(value: string) { }
    ·             ──┬─
    ·               ╰── It can not be redeclared here
 78 │     }
    ╰────

  × Identifier `"foo"` has already been declared
    ╭─[classes/members/privateNames/privateNameDuplicateField.ts:81:1]
 81 │     class A_Method_StaticField {
 82 │         #foo() { }
    ·         ──┬─
    ·           ╰── `foo` has already been declared here
 83 │         static #foo = "foo";
    ·                ──┬─
    ·                  ╰── It can not be redeclared here
 84 │     }
    ╰────

  × Identifier `"foo"` has already been declared
    ╭─[classes/members/privateNames/privateNameDuplicateField.ts:87:1]
 87 │     class A_Method_StaticMethod {
 88 │         #foo() { }
    ·         ──┬─
    ·           ╰── `foo` has already been declared here
 89 │         static #foo() { }
    ·                ──┬─
    ·                  ╰── It can not be redeclared here
 90 │     }
    ╰────

  × Identifier `"foo"` has already been declared
    ╭─[classes/members/privateNames/privateNameDuplicateField.ts:93:1]
 93 │     class A_Method_StaticGetter {
 94 │         #foo() { }
    ·         ──┬─
    ·           ╰── `foo` has already been declared here
 95 │         static get #foo() { return ""}
    ·                    ──┬─
    ·                      ╰── It can not be redeclared here
 96 │     }
    ╰────

  × Identifier `"foo"` has already been declared
     ╭─[classes/members/privateNames/privateNameDuplicateField.ts:99:1]
  99 │     class A_Method_StaticSetter {
 100 │         #foo() { }
     ·         ──┬─
     ·           ╰── `foo` has already been declared here
 101 │         static set #foo(value: string) { }
     ·                    ──┬─
     ·                      ╰── It can not be redeclared here
 102 │     }
     ╰────

  × Identifier `"foo"` has already been declared
     ╭─[classes/members/privateNames/privateNameDuplicateField.ts:108:1]
 108 │     class A_Getter_Field {
 109 │         get #foo() { return ""}
     ·             ──┬─
     ·               ╰── `foo` has already been declared here
 110 │         #foo = "foo";
     ·         ──┬─
     ·           ╰── It can not be redeclared here
 111 │     }
     ╰────

  × Identifier `"foo"` has already been declared
     ╭─[classes/members/privateNames/privateNameDuplicateField.ts:114:1]
 114 │     class A_Getter_Method {
 115 │         get #foo() { return ""}
     ·             ──┬─
     ·               ╰── `foo` has already been declared here
 116 │         #foo() { }
     ·         ──┬─
     ·           ╰── It can not be redeclared here
 117 │     }
     ╰────

  × Identifier `"foo"` has already been declared
     ╭─[classes/members/privateNames/privateNameDuplicateField.ts:120:1]
 120 │     class A_Getter_Getter {
 121 │         get #foo() { return ""}
     ·             ──┬─
     ·               ╰── `foo` has already been declared here
 122 │         get #foo() { return ""}
     ·             ──┬─
     ·               ╰── It can not be redeclared here
 123 │     }
     ╰────

  × Identifier `"foo"` has already been declared
     ╭─[classes/members/privateNames/privateNameDuplicateField.ts:132:1]
 132 │     class A_Getter_StaticField {
 133 │         get #foo() { return ""}
     ·             ──┬─
     ·               ╰── `foo` has already been declared here
 134 │         static #foo() { }
     ·                ──┬─
     ·                  ╰── It can not be redeclared here
 135 │     }
     ╰────

  × Identifier `"foo"` has already been declared
     ╭─[classes/members/privateNames/privateNameDuplicateField.ts:138:1]
 138 │     class A_Getter_StaticMethod {
 139 │         get #foo() { return ""}
     ·             ──┬─
     ·               ╰── `foo` has already been declared here
 140 │         static #foo() { }
     ·                ──┬─
     ·                  ╰── It can not be redeclared here
 141 │     }
     ╰────

  × Identifier `"foo"` has already been declared
     ╭─[classes/members/privateNames/privateNameDuplicateField.ts:144:1]
 144 │     class A_Getter_StaticGetter {
 145 │         get #foo() { return ""}
     ·             ──┬─
     ·               ╰── `foo` has already been declared here
 146 │         static get #foo() { return ""}
     ·                    ──┬─
     ·                      ╰── It can not be redeclared here
 147 │     }
     ╰────

  × Identifier `"foo"` has already been declared
     ╭─[classes/members/privateNames/privateNameDuplicateField.ts:150:1]
 150 │     class A_Getter_StaticSetter {
 151 │         get #foo() { return ""}
     ·             ──┬─
     ·               ╰── `foo` has already been declared here
 152 │         static set #foo(value: string) { }
     ·                    ──┬─
     ·                      ╰── It can not be redeclared here
 153 │     }
     ╰────

  × Identifier `"foo"` has already been declared
     ╭─[classes/members/privateNames/privateNameDuplicateField.ts:158:1]
 158 │     class A_Setter_Field {
 159 │         set #foo(value: string) { }
     ·             ──┬─
     ·               ╰── `foo` has already been declared here
 160 │         #foo = "foo";
     ·         ──┬─
     ·           ╰── It can not be redeclared here
 161 │     }
     ╰────

  × Identifier `"foo"` has already been declared
     ╭─[classes/members/privateNames/privateNameDuplicateField.ts:164:1]
 164 │     class A_Setter_Method {
 165 │         set #foo(value: string) { }
     ·             ──┬─
     ·               ╰── `foo` has already been declared here
 166 │         #foo() { }
     ·         ──┬─
     ·           ╰── It can not be redeclared here
 167 │     }
     ╰────

  × Identifier `"foo"` has already been declared
     ╭─[classes/members/privateNames/privateNameDuplicateField.ts:176:1]
 176 │     class A_Setter_Setter {
 177 │         set #foo(value: string) { }
     ·             ──┬─
     ·               ╰── `foo` has already been declared here
 178 │         set #foo(value: string) { }
     ·             ──┬─
     ·               ╰── It can not be redeclared here
 179 │     }
     ╰────

  × Identifier `"foo"` has already been declared
     ╭─[classes/members/privateNames/privateNameDuplicateField.ts:182:1]
 182 │     class A_Setter_StaticField {
 183 │         set #foo(value: string) { }
     ·             ──┬─
     ·               ╰── `foo` has already been declared here
 184 │         static #foo = "foo";
     ·                ──┬─
     ·                  ╰── It can not be redeclared here
 185 │     }
     ╰────

  × Identifier `"foo"` has already been declared
     ╭─[classes/members/privateNames/privateNameDuplicateField.ts:188:1]
 188 │     class A_Setter_StaticMethod {
 189 │         set #foo(value: string) { }
     ·             ──┬─
     ·               ╰── `foo` has already been declared here
 190 │         static #foo() { }
     ·                ──┬─
     ·                  ╰── It can not be redeclared here
 191 │     }
     ╰────

  × Identifier `"foo"` has already been declared
     ╭─[classes/members/privateNames/privateNameDuplicateField.ts:194:1]
 194 │     class A_Setter_StaticGetter {
 195 │         set #foo(value: string) { }
     ·             ──┬─
     ·               ╰── `foo` has already been declared here
 196 │         static get #foo() { return ""}
     ·                    ──┬─
     ·                      ╰── It can not be redeclared here
 197 │     }
     ╰────

  × Identifier `"foo"` has already been declared
     ╭─[classes/members/privateNames/privateNameDuplicateField.ts:200:1]
 200 │     class A_Setter_StaticSetter {
 201 │         set #foo(value: string) { }
     ·             ──┬─
     ·               ╰── `foo` has already been declared here
 202 │         static set #foo(value: string) { }
     ·                    ──┬─
     ·                      ╰── It can not be redeclared here
 203 │     }
     ╰────

  × Identifier `"foo"` has already been declared
     ╭─[classes/members/privateNames/privateNameDuplicateField.ts:208:1]
 208 │     class A_StaticField_Field {
 209 │         static #foo = "foo";
     ·                ──┬─
     ·                  ╰── `foo` has already been declared here
 210 │         #foo = "foo";
     ·         ──┬─
     ·           ╰── It can not be redeclared here
 211 │     }
     ╰────

  × Identifier `"foo"` has already been declared
     ╭─[classes/members/privateNames/privateNameDuplicateField.ts:214:1]
 214 │     class A_StaticField_Method {
 215 │         static #foo = "foo";
     ·                ──┬─
     ·                  ╰── `foo` has already been declared here
 216 │         #foo() { }
     ·         ──┬─
     ·           ╰── It can not be redeclared here
 217 │     }
     ╰────

  × Identifier `"foo"` has already been declared
     ╭─[classes/members/privateNames/privateNameDuplicateField.ts:220:1]
 220 │     class A_StaticField_Getter {
 221 │         static #foo = "foo";
     ·                ──┬─
     ·                  ╰── `foo` has already been declared here
 222 │         get #foo() { return ""}
     ·             ──┬─
     ·               ╰── It can not be redeclared here
 223 │     }
     ╰────

  × Identifier `"foo"` has already been declared
     ╭─[classes/members/privateNames/privateNameDuplicateField.ts:226:1]
 226 │     class A_StaticField_Setter {
 227 │         static #foo = "foo";
     ·                ──┬─
     ·                  ╰── `foo` has already been declared here
 228 │         set #foo(value: string) { }
     ·             ──┬─
     ·               ╰── It can not be redeclared here
 229 │     }
     ╰────

  × Identifier `"foo"` has already been declared
     ╭─[classes/members/privateNames/privateNameDuplicateField.ts:232:1]
 232 │     class A_StaticField_StaticField {
 233 │         static #foo = "foo";
     ·                ──┬─
     ·                  ╰── `foo` has already been declared here
 234 │         static #foo = "foo";
     ·                ──┬─
     ·                  ╰── It can not be redeclared here
 235 │     }
     ╰────

  × Identifier `"foo"` has already been declared
     ╭─[classes/members/privateNames/privateNameDuplicateField.ts:238:1]
 238 │     class A_StaticField_StaticMethod {
 239 │         static #foo = "foo";
     ·                ──┬─
     ·                  ╰── `foo` has already been declared here
 240 │         static #foo() { }
     ·                ──┬─
     ·                  ╰── It can not be redeclared here
 241 │     }
     ╰────

  × Identifier `"foo"` has already been declared
     ╭─[classes/members/privateNames/privateNameDuplicateField.ts:244:1]
 244 │     class A_StaticField_StaticGetter {
 245 │         static #foo = "foo";
     ·                ──┬─
     ·                  ╰── `foo` has already been declared here
 246 │         static get #foo() { return ""}
     ·                    ──┬─
     ·                      ╰── It can not be redeclared here
 247 │     }
     ╰────

  × Identifier `"foo"` has already been declared
     ╭─[classes/members/privateNames/privateNameDuplicateField.ts:250:1]
 250 │     class A_StaticField_StaticSetter {
 251 │         static #foo = "foo";
     ·                ──┬─
     ·                  ╰── `foo` has already been declared here
 252 │         static set #foo(value: string) { }
     ·                    ──┬─
     ·                      ╰── It can not be redeclared here
 253 │     }
     ╰────

  × Identifier `"foo"` has already been declared
     ╭─[classes/members/privateNames/privateNameDuplicateField.ts:258:1]
 258 │     class A_StaticMethod_Field {
 259 │         static #foo() { }
     ·                ──┬─
     ·                  ╰── `foo` has already been declared here
 260 │         #foo = "foo";
     ·         ──┬─
     ·           ╰── It can not be redeclared here
 261 │     }
     ╰────

  × Identifier `"foo"` has already been declared
     ╭─[classes/members/privateNames/privateNameDuplicateField.ts:264:1]
 264 │     class A_StaticMethod_Method {
 265 │         static #foo() { }
     ·                ──┬─
     ·                  ╰── `foo` has already been declared here
 266 │         #foo() { }
     ·         ──┬─
     ·           ╰── It can not be redeclared here
 267 │     }
     ╰────

  × Identifier `"foo"` has already been declared
     ╭─[classes/members/privateNames/privateNameDuplicateField.ts:270:1]
 270 │     class A_StaticMethod_Getter {
 271 │         static #foo() { }
     ·                ──┬─
     ·                  ╰── `foo` has already been declared here
 272 │         get #foo() { return ""}
     ·             ──┬─
     ·               ╰── It can not be redeclared here
 273 │     }
     ╰────

  × Identifier `"foo"` has already been declared
     ╭─[classes/members/privateNames/privateNameDuplicateField.ts:276:1]
 276 │     class A_StaticMethod_Setter {
 277 │         static #foo() { }
     ·                ──┬─
     ·                  ╰── `foo` has already been declared here
 278 │         set #foo(value: string) { }
     ·             ──┬─
     ·               ╰── It can not be redeclared here
 279 │     }
     ╰────

  × Identifier `"foo"` has already been declared
     ╭─[classes/members/privateNames/privateNameDuplicateField.ts:282:1]
 282 │     class A_StaticMethod_StaticField {
 283 │         static #foo() { }
     ·                ──┬─
     ·                  ╰── `foo` has already been declared here
 284 │         static #foo = "foo";
     ·                ──┬─
     ·                  ╰── It can not be redeclared here
 285 │     }
     ╰────

  × Identifier `"foo"` has already been declared
     ╭─[classes/members/privateNames/privateNameDuplicateField.ts:288:1]
 288 │     class A_StaticMethod_StaticMethod {
 289 │         static #foo() { }
     ·                ──┬─
     ·                  ╰── `foo` has already been declared here
 290 │         static #foo() { }
     ·                ──┬─
     ·                  ╰── It can not be redeclared here
 291 │     }
     ╰────

  × Identifier `"foo"` has already been declared
     ╭─[classes/members/privateNames/privateNameDuplicateField.ts:294:1]
 294 │     class A_StaticMethod_StaticGetter {
 295 │         static #foo() { }
     ·                ──┬─
     ·                  ╰── `foo` has already been declared here
 296 │         static get #foo() { return ""}
     ·                    ──┬─
     ·                      ╰── It can not be redeclared here
 297 │     }
     ╰────

  × Identifier `"foo"` has already been declared
     ╭─[classes/members/privateNames/privateNameDuplicateField.ts:300:1]
 300 │     class A_StaticMethod_StaticSetter {
 301 │         static #foo() { }
     ·                ──┬─
     ·                  ╰── `foo` has already been declared here
 302 │         static set #foo(value: string) { }
     ·                    ──┬─
     ·                      ╰── It can not be redeclared here
 303 │     }
     ╰────

  × Identifier `"foo"` has already been declared
     ╭─[classes/members/privateNames/privateNameDuplicateField.ts:309:1]
 309 │     class A_StaticGetter_Field {
 310 │         static get #foo() { return ""}
     ·                    ──┬─
     ·                      ╰── `foo` has already been declared here
 311 │         #foo = "foo";
     ·         ──┬─
     ·           ╰── It can not be redeclared here
 312 │     }
     ╰────

  × Identifier `"foo"` has already been declared
     ╭─[classes/members/privateNames/privateNameDuplicateField.ts:315:1]
 315 │     class A_StaticGetter_Method {
 316 │         static get #foo() { return ""}
     ·                    ──┬─
     ·                      ╰── `foo` has already been declared here
 317 │         #foo() { }
     ·         ──┬─
     ·           ╰── It can not be redeclared here
 318 │     }
     ╰────

  × Identifier `"foo"` has already been declared
     ╭─[classes/members/privateNames/privateNameDuplicateField.ts:321:1]
 321 │     class A_StaticGetter_Getter {
 322 │         static get #foo() { return ""}
     ·                    ──┬─
     ·                      ╰── `foo` has already been declared here
 323 │         get #foo() { return ""}
     ·             ──┬─
     ·               ╰── It can not be redeclared here
 324 │     }
     ╰────

  × Identifier `"foo"` has already been declared
     ╭─[classes/members/privateNames/privateNameDuplicateField.ts:327:1]
 327 │     class A_StaticGetter_Setter {
 328 │         static get #foo() { return ""}
     ·                    ──┬─
     ·                      ╰── `foo` has already been declared here
 329 │         set #foo(value: string) { }
     ·             ──┬─
     ·               ╰── It can not be redeclared here
 330 │     }
     ╰────

  × Identifier `"foo"` has already been declared
     ╭─[classes/members/privateNames/privateNameDuplicateField.ts:333:1]
 333 │     class A_StaticGetter_StaticField {
 334 │         static get #foo() { return ""}
     ·                    ──┬─
     ·                      ╰── `foo` has already been declared here
 335 │         static #foo() { }
     ·                ──┬─
     ·                  ╰── It can not be redeclared here
 336 │     }
     ╰────

  × Identifier `"foo"` has already been declared
     ╭─[classes/members/privateNames/privateNameDuplicateField.ts:339:1]
 339 │     class A_StaticGetter_StaticMethod {
 340 │         static get #foo() { return ""}
     ·                    ──┬─
     ·                      ╰── `foo` has already been declared here
 341 │         static #foo() { }
     ·                ──┬─
     ·                  ╰── It can not be redeclared here
 342 │     }
     ╰────

  × Identifier `"foo"` has already been declared
     ╭─[classes/members/privateNames/privateNameDuplicateField.ts:345:1]
 345 │     class A_StaticGetter_StaticGetter {
 346 │         static get #foo() { return ""}
     ·                    ──┬─
     ·                      ╰── `foo` has already been declared here
 347 │         static get #foo() { return ""}
     ·                    ──┬─
     ·                      ╰── It can not be redeclared here
 348 │     }
     ╰────

  × Identifier `"foo"` has already been declared
     ╭─[classes/members/privateNames/privateNameDuplicateField.ts:358:1]
 358 │     class A_StaticSetter_Field {
 359 │         static set #foo(value: string) { }
     ·                    ──┬─
     ·                      ╰── `foo` has already been declared here
 360 │         #foo = "foo";
     ·         ──┬─
     ·           ╰── It can not be redeclared here
 361 │     }
     ╰────

  × Identifier `"foo"` has already been declared
     ╭─[classes/members/privateNames/privateNameDuplicateField.ts:364:1]
 364 │     class A_StaticSetter_Method {
 365 │         static set #foo(value: string) { }
     ·                    ──┬─
     ·                      ╰── `foo` has already been declared here
 366 │         #foo() { }
     ·         ──┬─
     ·           ╰── It can not be redeclared here
 367 │     }
     ╰────

  × Identifier `"foo"` has already been declared
     ╭─[classes/members/privateNames/privateNameDuplicateField.ts:371:1]
 371 │     class A_StaticSetter_Getter {
 372 │         static set #foo(value: string) { }
     ·                    ──┬─
     ·                      ╰── `foo` has already been declared here
 373 │         get #foo() { return ""}
     ·             ──┬─
     ·               ╰── It can not be redeclared here
 374 │     }
     ╰────

  × Identifier `"foo"` has already been declared
     ╭─[classes/members/privateNames/privateNameDuplicateField.ts:377:1]
 377 │     class A_StaticSetter_Setter {
 378 │         static set #foo(value: string) { }
     ·                    ──┬─
     ·                      ╰── `foo` has already been declared here
 379 │         set #foo(value: string) { }
     ·             ──┬─
     ·               ╰── It can not be redeclared here
 380 │     }
     ╰────

  × Identifier `"foo"` has already been declared
     ╭─[classes/members/privateNames/privateNameDuplicateField.ts:383:1]
 383 │     class A_StaticSetter_StaticField {
 384 │         static set #foo(value: string) { }
     ·                    ──┬─
     ·                      ╰── `foo` has already been declared here
 385 │         static #foo = "foo";
     ·                ──┬─
     ·                  ╰── It can not be redeclared here
 386 │     }
     ╰────

  × Identifier `"foo"` has already been declared
     ╭─[classes/members/privateNames/privateNameDuplicateField.ts:389:1]
 389 │     class A_StaticSetter_StaticMethod {
 390 │         static set #foo(value: string) { }
     ·                    ──┬─
     ·                      ╰── `foo` has already been declared here
 391 │         static #foo() { }
     ·                ──┬─
     ·                  ╰── It can not be redeclared here
 392 │     }
     ╰────

  × Identifier `"foo"` has already been declared
     ╭─[classes/members/privateNames/privateNameDuplicateField.ts:401:1]
 401 │     class A_StaticSetter_StaticSetter {
 402 │         static set #foo(value: string) { }
     ·                    ──┬─
     ·                      ╰── `foo` has already been declared here
 403 │         static set #foo(value: string) { }
     ·                    ──┬─
     ·                      ╰── It can not be redeclared here
 404 │     }
     ╰────

  × Unexpected token
   ╭─[classes/members/privateNames/privateNameEnum.ts:2:1]
 2 │ enum E {
 3 │     #x
   ·     ──
 4 │ }
   ╰────

  × Private field '"prop"' must be declared in an enclosing class
    ╭─[classes/members/privateNames/privateNameFieldDerivedClasses.ts:10:1]
 10 │     static method(x: Derived) {
 11 │         console.log(x.#prop);
    ·                       ─────
 12 │     }
    ╰────

  × Invalid Character `'\r'`
   ╭─[classes/members/privateNames/privateNameHashCharName.ts:2:1]
 2 │ 
 3 │ #
   ·  ▲
   ·  ╰── Invalid Character ``
 4 │ 
   ╰────

  × Private field '"x"' must be declared in an enclosing class
    ╭─[classes/members/privateNames/privateNameImplicitDeclaration.ts:8:1]
  8 │         /** @type {string} */
  9 │         this.#x;
    ·              ──
 10 │     }
    ╰────

  × Expect token
    ╭─[classes/members/privateNames/privateNameInInExpression.ts:28:1]
 28 │ 
 29 │         const c = (#field) in v; // Bad - privateID is not an expression on its own
    ·                          ┬
    ·                          ╰── Expect `in` here, but found `)`
 30 │ 
    ╰────

  × Invalid assignment
    ╭─[classes/members/privateNames/privateNameInInExpressionTransform.ts:30:1]
 30 │     invalidLHS(v: any) {
 31 │         'prop' in v = 10;
    ·         ─────┬─────
    ·              ╰── Cannot assign to this expression
 32 │         #field in v = 10;
    ╰────

  × Unexpected token
   ╭─[classes/members/privateNames/privateNameInObjectLiteral-1.ts:1:1]
 1 │ const obj = {
 2 │     #foo: 1
   ·     ────
 3 │ };
   ╰────

  × Unexpected token
   ╭─[classes/members/privateNames/privateNameInObjectLiteral-2.ts:1:1]
 1 │ const obj = {
 2 │     #foo() {
   ·     ────
 3 │ 
   ╰────

  × Unexpected token
   ╭─[classes/members/privateNames/privateNameInObjectLiteral-3.ts:1:1]
 1 │ const obj = {
 2 │     get #foo() {
   ·         ────
 3 │         return ""
   ╰────

  × Private identifier '#"nope"' is not allowed outside class bodies
   ╭─[classes/members/privateNames/privateNameJsBadAssignment.ts:6:1]
 6 │ 
 7 │ exports.#nope = 1;           // Error (outside class body)
   ·         ─────
 8 │ function A() { }
   ╰────

  × Private identifier '#"no"' is not allowed outside class bodies
    ╭─[classes/members/privateNames/privateNameJsBadAssignment.ts:8:1]
  8 │ function A() { }
  9 │ A.prototype.#no = 2;         // Error (outside class body)
    ·             ───
 10 │ 
    ╰────

  × Private identifier '#"foo"' is not allowed outside class bodies
    ╭─[classes/members/privateNames/privateNameJsBadAssignment.ts:11:1]
 11 │ class B {}
 12 │ B.#foo = 3;                  // Error (outside class body)
    ·   ────
 13 │ 
    ╰────

  × Private field '"foo"' must be declared in an enclosing class
    ╭─[classes/members/privateNames/privateNameJsBadAssignment.ts:16:1]
 16 │     constructor () {
 17 │         this.#foo = 3;       // Error (undeclared)
    ·              ────
 18 │     }
    ╰────

  × Unexpected token
   ╭─[classes/members/privateNames/privateNameJsBadDeclaration.ts:7:1]
 7 │ A.prototype = {
 8 │   #x: 1,         // Error
   ·   ──
 9 │   #m() {},       // Error
   ╰────

  × Private identifier '#"method"' is not allowed outside class bodies
    ╭─[classes/members/privateNames/privateNameMethodAccess.ts:13:1]
 13 │ }
 14 │ new A2().#method(); // Error
    ·          ───────
 15 │ 
    ╰────

  × Private identifier '#"method"' is not allowed outside class bodies
    ╭─[classes/members/privateNames/privateNameMethodAccess.ts:16:1]
 16 │ function  foo (){
 17 │     new A2().#method(); // Error
    ·              ───────
 18 │ }
    ╰────

  × Private field '"method"' must be declared in an enclosing class
    ╭─[classes/members/privateNames/privateNameMethodAccess.ts:21:1]
 21 │     m() {
 22 │         new A2().#method();
    ·                  ───────
 23 │     }
    ╰────

  × Private identifier '#"method"' is not allowed outside class bodies
    ╭─[classes/members/privateNames/privateNameMethodClassExpression.ts:10:1]
 10 │ console.log(C.getInstance().getField());
 11 │ C.getInstance().#method; // Error
    ·                 ───────
 12 │ C.getInstance().#field; // Error
    ╰────

  × Private identifier '#"field"' is not allowed outside class bodies
    ╭─[classes/members/privateNames/privateNameMethodClassExpression.ts:11:1]
 11 │ C.getInstance().#method; // Error
 12 │ C.getInstance().#field; // Error
    ·                 ──────
 13 │ 
    ╰────

  × Private field '"prop"' must be declared in an enclosing class
    ╭─[classes/members/privateNames/privateNameMethodsDerivedClasses.ts:10:1]
 10 │     static method(x: Derived) {
 11 │         console.log(x.#prop());
    ·                       ─────
 12 │     }
    ╰────

  × Private field '"unknown"' must be declared in an enclosing class
    ╭─[classes/members/privateNames/privateNameNestedMethodAccess.ts:20:1]
 20 │                 x.#bar;
 21 │                 x.#unknown; // Error
    ·                   ────────
 22 │             }
    ╰────

  × Private identifier '#"foo"' is not allowed outside class bodies
   ╭─[classes/members/privateNames/privateNameNotAccessibleOutsideDefiningClass.ts:7:1]
 7 │ 
 8 │ new A().#foo = 4;               // Error
   ·         ────
   ╰────

  × Unexpected token
   ╭─[classes/members/privateNames/privateNameNotAllowedOutsideClass.ts:3:1]
 3 │ 
 4 │ const #foo = 3;
   ·       ────
   ╰────

  × Private identifier '#"prop"' is not allowed outside class bodies
    ╭─[classes/members/privateNames/privateNameStaticAccessorsAccess.ts:16:1]
 16 │ 
 17 │ A2.#prop; // Error
    ·    ─────
 18 │ 
    ╰────

  × Private identifier '#"prop"' is not allowed outside class bodies
    ╭─[classes/members/privateNames/privateNameStaticAccessorsAccess.ts:19:1]
 19 │ function  foo (){
 20 │     A2.#prop; // Error
    ·        ─────
 21 │ }
    ╰────

  × Private field '"prop"' must be declared in an enclosing class
    ╭─[classes/members/privateNames/privateNameStaticAccessorsAccess.ts:24:1]
 24 │     m() {
 25 │         A2.#prop;
    ·            ─────
 26 │     }
    ╰────

  × Private field '"prop"' must be declared in an enclosing class
    ╭─[classes/members/privateNames/privateNameStaticAccessorssDerivedClasses.ts:10:1]
 10 │     static method(x: typeof Derived) {
 11 │         console.log(x.#prop);
    ·                       ─────
 12 │     }
    ╰────

  × Private field '"derivedProp"' must be declared in an enclosing class
   ╭─[classes/members/privateNames/privateNameStaticFieldDerivedClasses.ts:5:1]
 5 │     static method(x: Derived) {
 6 │         Derived.#derivedProp // error
   ·                 ────────────
 7 │         Base.#prop  = 10;
   ╰────

  × Private field '"prop"' must be declared in an enclosing class
    ╭─[classes/members/privateNames/privateNameStaticFieldDerivedClasses.ts:13:1]
 13 │         Derived.#derivedProp
 14 │         Base.#prop  = 10; // error
    ·              ─────
 15 │     }
    ╰────

  × Expect token
    ╭─[classes/members/privateNames/privateNameStaticMethodAsync.ts:12:1]
 12 │     }
 13 │     async static *#bazBad() { yield 42; }
    ·                  ┬
    ·                  ╰── Expect `(` here, but found `*`
 14 │ }
    ╰────

  × Private identifier '#"method"' is not allowed outside class bodies
    ╭─[classes/members/privateNames/privateNameStaticMethodClassExpression.ts:10:1]
 10 │ console.log(C.getClass().getField());
 11 │ C.getClass().#method; // Error
    ·              ───────
 12 │ C.getClass().#field; // Error
    ╰────

  × Private identifier '#"field"' is not allowed outside class bodies
    ╭─[classes/members/privateNames/privateNameStaticMethodClassExpression.ts:11:1]
 11 │ C.getClass().#method; // Error
 12 │ C.getClass().#field; // Error
    ·              ──────
 13 │ 
    ╰────

  × Private field '"foo"' must be declared in an enclosing class
    ╭─[classes/members/privateNames/privateNameUncheckedJsOptionalChain.ts:9:1]
  9 │     constructor () {
 10 │         this?.#foo;
    ·               ────
 11 │         this?.#bar;
    ╰────

  × Private identifier '#"foo"' is not allowed outside class bodies
    ╭─[classes/members/privateNames/privateNamesAndGenericClasses-2.ts:26:1]
 26 │ const x: number = a.baz                   // OK
 27 │ a.#foo;                                   // Error
    ·   ────
 28 │ a = b;                                    // Error
    ╰────

  × Unexpected token
    ╭─[classes/members/privateNames/privateNamesAndIndexedAccess.ts:10:1]
 10 │         // not supported yet, could support in future:
 11 │         const badForNow: C[#bar] = 3;   // Error
    ·                            ────
 12 │         // will never use this syntax, already taken:
    ╰────

  × Private identifier '#"foo"' is not allowed outside class bodies
    ╭─[classes/members/privateNames/privateNamesInGenericClasses.ts:25:1]
 25 │ declare let b: C<string>;
 26 │ a.#foo;                                   // Error
    ·   ────
 27 │ a.#method;                                // Error
    ╰────

  × Private identifier '#"method"' is not allowed outside class bodies
    ╭─[classes/members/privateNames/privateNamesInGenericClasses.ts:26:1]
 26 │ a.#foo;                                   // Error
 27 │ a.#method;                                // Error
    ·   ───────
 28 │ a.#prop;                                  // Error
    ╰────

  × Private identifier '#"prop"' is not allowed outside class bodies
    ╭─[classes/members/privateNames/privateNamesInGenericClasses.ts:27:1]
 27 │ a.#method;                                // Error
 28 │ a.#prop;                                  // Error
    ·   ─────
 29 │ a = b;                                    // Error
    ╰────

  × Expect token
    ╭─[classes/members/privateNames/privateNamesIncompatibleModifiers.ts:29:1]
 29 │     declare set #whatProp(value: number)         // Error
 30 │     async get #asyncProp() { return 1; }         // Error
    ·               ─────┬────
    ·                    ╰── Expect `(` here, but found `#identifier`
 31 │     async set #asyncProp(value: number) { }      // Error
    ╰────

  × Private identifier '#"prop"' is not allowed outside class bodies
    ╭─[classes/members/privateNames/privateNamesInterfaceExtendingClass.ts:11:1]
 11 │ function func(x: I) {
 12 │     x.#prop = 123;
    ·       ─────
 13 │ }
    ╰────

  × Unexpected token
   ╭─[classes/members/privateNames/privateNamesNotAllowedAsParameters.ts:3:1]
 3 │ class A {
 4 │     setFoo(#foo: string) {}
   ·            ────
 5 │ }
   ╰────

  × Unexpected token
   ╭─[classes/members/privateNames/privateNamesNotAllowedInVariableDeclarations.ts:3:1]
 3 │ 
 4 │ const #foo = 3;
   ·       ────
   ╰────

  × Identifier `"foo"` has already been declared
   ╭─[classes/members/privateNames/privateNamesUnique-3.ts:3:1]
 3 │ class A {
 4 │     #foo = 1;
   ·     ──┬─
   ·       ╰── `foo` has already been declared here
 5 │     static #foo = true; // error (duplicate)
   ·            ──┬─
   ·              ╰── It can not be redeclared here
 6 │                         // because static and instance private names
   ╰────

  × Automatic Semicolon Insertion
   ╭─[classes/nestedClassDeclaration.ts:4:1]
 4 │     x: string;
 5 │     class C2 {
   ·          ┬
   ·          ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 6 │     }
   ╰────
  help: Try insert a semicolon here

  × Automatic Semicolon Insertion
    ╭─[classes/propertyMemberDeclarations/autoAccessor11.ts:13:1]
 13 │ 
 14 │     accessor accessor
    ·             ┬
    ·             ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 15 │     d;
    ╰────
  help: Try insert a semicolon here

  × Automatic Semicolon Insertion
   ╭─[classes/propertyMemberDeclarations/autoAccessorDisallowedModifiers.ts:4:1]
 4 │ abstract class C1 {
 5 │     accessor accessor a: any;
   ·             ┬
   ·             ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 6 │     readonly accessor b: any;
   ╰────
  help: Try insert a semicolon here

  × Classes can't have a field named 'constructor'
   ╭─[classes/propertyMemberDeclarations/propertyNamedConstructor.ts:1:1]
 1 │ class X1 {
 2 │   "constructor" = 3; // Error
   ·   ──────┬──────
   ·         ╰── Classes can't have a field named 'constructor'
 3 │ }
   ╰────

  × Classes may not have a static property named prototype
   ╭─[classes/propertyMemberDeclarations/propertyNamedPrototype.ts:2:1]
 2 │     prototype: number; // ok
 3 │     static prototype: C; // error
   ·            ────┬────
   ·                ╰── Classes may not have a static property named prototype
 4 │ }
   ╰────

  × Classes may not have a static property named prototype
    ╭─[classes/propertyMemberDeclarations/staticPropertyNameConflicts.ts:25:1]
 25 │ class StaticPrototype {
 26 │     static prototype: number; // error
    ·            ────┬────
    ·                ╰── Classes may not have a static property named prototype
 27 │     prototype: string; // ok
    ╰────

  × Classes may not have a static property named prototype
    ╭─[classes/propertyMemberDeclarations/staticPropertyNameConflicts.ts:30:1]
 30 │ class StaticPrototypeFn {
 31 │     static prototype() {} // error
    ·            ────┬────
    ·                ╰── Classes may not have a static property named prototype
 32 │     prototype() {} // ok
    ╰────

  × Classes may not have a static property named prototype
    ╭─[classes/propertyMemberDeclarations/staticPropertyNameConflicts.ts:84:1]
 84 │ var StaticPrototype_Anonymous = class {
 85 │     static prototype: number; // error
    ·            ────┬────
    ·                ╰── Classes may not have a static property named prototype
 86 │     prototype: string; // ok
    ╰────

  × Classes may not have a static property named prototype
    ╭─[classes/propertyMemberDeclarations/staticPropertyNameConflicts.ts:89:1]
 89 │ var StaticPrototypeFn_Anonymous = class {
 90 │     static prototype() {} // error
    ·            ────┬────
    ·                ╰── Classes may not have a static property named prototype
 91 │     prototype() {} // ok
    ╰────

  × Classes may not have a static property named prototype
     ╭─[classes/propertyMemberDeclarations/staticPropertyNameConflicts.ts:151:1]
 151 │     export default class StaticPrototype {
 152 │         static prototype: number; // error
     ·                ────┬────
     ·                    ╰── Classes may not have a static property named prototype
 153 │         prototype: string; // ok
     ╰────

  × Classes may not have a static property named prototype
     ╭─[classes/propertyMemberDeclarations/staticPropertyNameConflicts.ts:158:1]
 158 │     export default class StaticPrototypeFn {
 159 │         static prototype() {} // error
     ·                ────┬────
     ·                    ╰── Classes may not have a static property named prototype
 160 │         prototype() {} // ok
     ╰────

  × Unexpected token
    ╭─[classes/staticIndexSignature/staticIndexSignature4.ts:13:1]
 13 │ interface IB {
 14 │     static [s: string]: number;
    ·     ──────
 15 │     static [s: number]: 42 | 233;
    ╰────

  × Unexpected token
    ╭─[classes/staticIndexSignature/staticIndexSignature5.ts:8:1]
  8 │ interface I {
  9 │     static readonly [s: string]: number;
    ·     ──────
 10 │     static readonly [s: number]: 42 | 233
    ╰────

  × Expect token
     ╭─[controlFlow/assertionTypePredicates1.ts:166:1]
 166 │     get p1(): this is string;
 167 │     set p1(x: this is string);
     ·                    ─┬
     ·                     ╰── Expect `,` here, but found `is`
 168 │     get p2(): asserts this is string;
     ╰────

  × Unexpected token
    ╭─[controlFlow/definiteAssignmentAssertions.ts:71:1]
 71 │ function f4() {
 72 │     let a!;
    ·           ─
 73 │     let b! = 1;
    ╰────

  × Expect token
   ╭─[controlFlow/definiteAssignmentAssertionsWithObjectShortHand.ts:4:1]
 4 │ const a: string | undefined = 'ff';
 5 │ const foo = { a! }
   ·                ┬
   ·                ╰── Expect `,` here, but found `!`
 6 │ 
   ╰────

  × Automatic Semicolon Insertion
   ╭─[decorators/class/accessor/decoratorOnClassAccessor3.ts:5:1]
 5 │ class C {
 6 │     public @dec get accessor() { return 1; }
   ·           ┬
   ·           ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 7 │ }
   ╰────
  help: Try insert a semicolon here

  × Automatic Semicolon Insertion
   ╭─[decorators/class/accessor/decoratorOnClassAccessor6.ts:5:1]
 5 │ class C {
 6 │     public @dec set accessor(value: number) { }
   ·           ┬
   ·           ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 7 │ }
   ╰────
  help: Try insert a semicolon here

  × Expect token
   ╭─[decorators/class/constructor/parameter/decoratorOnClassConstructorParameter4.ts:5:1]
 5 │ class C {
 6 │     constructor(public @dec p: number) {}
   ·                        ┬
   ·                        ╰── Expect `,` here, but found `@`
 7 │ }
   ╰────

  × Automatic Semicolon Insertion
   ╭─[decorators/class/method/decoratorOnClassMethod17.ts:6:1]
 6 │ class Foo {
 7 │     private prop @decorator
   ·                 ┬
   ·                 ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 8 │     foo() {
   ╰────
  help: Try insert a semicolon here

  × Automatic Semicolon Insertion
   ╭─[decorators/class/method/decoratorOnClassMethod3.ts:5:1]
 5 │ class C {
 6 │     public @dec method() {}
   ·           ┬
   ·           ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 7 │ }
   ╰────
  help: Try insert a semicolon here

  × Automatic Semicolon Insertion
   ╭─[decorators/class/property/decoratorOnClassProperty3.ts:5:1]
 5 │ class C {
 6 │     public @dec prop;
   ·           ┬
   ·           ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 7 │ }
   ╰────
  help: Try insert a semicolon here

  × Automatic Semicolon Insertion
    ╭─[decorators/decoratorMetadata-jsdoc.ts:8:1]
  8 │     @decorator()
  9 │     a?: string?;
    ·               ▲
    ·               ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 10 │     @decorator()
    ╰────
  help: Try insert a semicolon here

  × Unexpected token
   ╭─[decorators/invalid/decoratorOnArrowFunction.ts:2:1]
 2 │ 
 3 │ var F = @dec () => {
   ·         ─
 4 │ }
   ╰────

  × Unexpected token
   ╭─[decorators/invalid/decoratorOnEnum2.ts:3:1]
 3 │ enum E {
 4 │     @dec A
   ·     ─
 5 │ }
   ╰────

  × Unexpected token
   ╭─[decorators/invalid/decoratorOnFunctionExpression.ts:2:1]
 2 │ 
 3 │ var F = @dec function () {
   ·         ─
 4 │ }
   ╰────

  × Unexpected token
    ╭─[dynamicImport/importCallExpressionGrammarError.ts:8:1]
  8 │ var a = ["./0"];
  9 │ import(...["PathModule"]);
    ·        ───
 10 │ 
    ╰────

  × Expect token
    ╭─[enums/enumErrors.ts:47:1]
 47 │ 
 48 │     postSemicolon;
    ·                  ┬
    ·                  ╰── Expect `,` here, but found `;`
 49 │     postColonValueComma: 2,
    ╰────

  × Bad escape sequence in untagged template literal
    ╭─[es2018/invalidTaggedTemplateEscapeSequences.ts:9:1]
  9 │ const x = tag`\u{hello} ${ 100 } \xtraordinary ${ 200 } wonderful ${ 300 } \uworld`;
 10 │ const y = `\u{hello} ${ 100 } \xtraordinary ${ 200 } wonderful ${ 300 } \uworld`; // should error with NoSubstitutionTemplate
    ·            ─────┬────
    ·                 ╰── Bad escape sequence in untagged template literal
 11 │ const z = tag`\u{hello} \xtraordinary wonderful \uworld` // should work with Tagged NoSubstitutionTemplate
    ╰────

  × Bad escape sequence in untagged template literal
    ╭─[es2018/invalidTaggedTemplateEscapeSequences.ts:9:1]
  9 │ const x = tag`\u{hello} ${ 100 } \xtraordinary ${ 200 } wonderful ${ 300 } \uworld`;
 10 │ const y = `\u{hello} ${ 100 } \xtraordinary ${ 200 } wonderful ${ 300 } \uworld`; // should error with NoSubstitutionTemplate
    ·                              ───────┬───────
    ·                                     ╰── Bad escape sequence in untagged template literal
 11 │ const z = tag`\u{hello} \xtraordinary wonderful \uworld` // should work with Tagged NoSubstitutionTemplate
    ╰────

  × Bad escape sequence in untagged template literal
    ╭─[es2018/invalidTaggedTemplateEscapeSequences.ts:9:1]
  9 │ const x = tag`\u{hello} ${ 100 } \xtraordinary ${ 200 } wonderful ${ 300 } \uworld`;
 10 │ const y = `\u{hello} ${ 100 } \xtraordinary ${ 200 } wonderful ${ 300 } \uworld`; // should error with NoSubstitutionTemplate
    ·                                                                        ────┬───
    ·                                                                            ╰── Bad escape sequence in untagged template literal
 11 │ const z = tag`\u{hello} \xtraordinary wonderful \uworld` // should work with Tagged NoSubstitutionTemplate
    ╰────

  × Line terminator not permitted before arrow
   ╭─[es6/arrowFunction/disallowLineTerminatorBeforeArrow.ts:1:1]
 1 │ var f1 = ()
 2 │     => { }
   ·     ─┬
   ·      ╰── Line terminator not permitted before arrow
 3 │ var f2 = (x: string, y: string) /*
   ╰────

  × Line terminator not permitted before arrow
   ╭─[es6/arrowFunction/disallowLineTerminatorBeforeArrow.ts:3:1]
 3 │ var f2 = (x: string, y: string) /*
 4 │   */  => { }
   ·       ─┬
   ·        ╰── Line terminator not permitted before arrow
 5 │ var f3 = (x: string, y: number, ...rest)
   ╰────

  × Line terminator not permitted before arrow
   ╭─[es6/arrowFunction/disallowLineTerminatorBeforeArrow.ts:5:1]
 5 │ var f3 = (x: string, y: number, ...rest)
 6 │     => { }
   ·     ─┬
   ·      ╰── Line terminator not permitted before arrow
 7 │ var f4 = (x: string, y: number, ...rest) /*
   ╰────

  × Line terminator not permitted before arrow
   ╭─[es6/arrowFunction/disallowLineTerminatorBeforeArrow.ts:7:1]
 7 │ var f4 = (x: string, y: number, ...rest) /*
 8 │   */  => { }
   ·       ─┬
   ·        ╰── Line terminator not permitted before arrow
 9 │ var f5 = (...rest)
   ╰────

  × Line terminator not permitted before arrow
    ╭─[es6/arrowFunction/disallowLineTerminatorBeforeArrow.ts:9:1]
  9 │ var f5 = (...rest)
 10 │     => { }
    ·     ─┬
    ·      ╰── Line terminator not permitted before arrow
 11 │ var f6 = (...rest) /*
    ╰────

  × Line terminator not permitted before arrow
    ╭─[es6/arrowFunction/disallowLineTerminatorBeforeArrow.ts:11:1]
 11 │ var f6 = (...rest) /*
 12 │   */  => { }
    ·       ─┬
    ·        ╰── Line terminator not permitted before arrow
 13 │ var f7 = (x: string, y: number, z = 10)
    ╰────

  × Line terminator not permitted before arrow
    ╭─[es6/arrowFunction/disallowLineTerminatorBeforeArrow.ts:13:1]
 13 │ var f7 = (x: string, y: number, z = 10)
 14 │     => { }
    ·     ─┬
    ·      ╰── Line terminator not permitted before arrow
 15 │ var f8 = (x: string, y: number, z = 10) /*
    ╰────

  × Line terminator not permitted before arrow
    ╭─[es6/arrowFunction/disallowLineTerminatorBeforeArrow.ts:15:1]
 15 │ var f8 = (x: string, y: number, z = 10) /*
 16 │   */  => { }
    ·       ─┬
    ·        ╰── Line terminator not permitted before arrow
 17 │ var f9 = (a: number): number
    ╰────

  × Line terminator not permitted before arrow
    ╭─[es6/arrowFunction/disallowLineTerminatorBeforeArrow.ts:17:1]
 17 │ var f9 = (a: number): number
 18 │     => a;
    ·     ─┬
    ·      ╰── Line terminator not permitted before arrow
 19 │ var f10 = (a: number) :
    ╰────

  × Line terminator not permitted before arrow
    ╭─[es6/arrowFunction/disallowLineTerminatorBeforeArrow.ts:20:1]
 20 │   number
 21 │     => a
    ·     ─┬
    ·      ╰── Line terminator not permitted before arrow
 22 │ var f11 = (a: number): number /*
    ╰────

  × Line terminator not permitted before arrow
    ╭─[es6/arrowFunction/disallowLineTerminatorBeforeArrow.ts:22:1]
 22 │ var f11 = (a: number): number /*
 23 │     */ => a;
    ·        ─┬
    ·         ╰── Line terminator not permitted before arrow
 24 │ var f12 = (a: number) :
    ╰────

  × Line terminator not permitted before arrow
    ╭─[es6/arrowFunction/disallowLineTerminatorBeforeArrow.ts:25:1]
 25 │   number /*
 26 │     */ => a
    ·        ─┬
    ·         ╰── Line terminator not permitted before arrow
 27 │ 
    ╰────

  × Line terminator not permitted before arrow
    ╭─[es6/arrowFunction/disallowLineTerminatorBeforeArrow.ts:51:1]
 51 │ foo(()
 52 │     => true);
    ·     ─┬
    ·      ╰── Line terminator not permitted before arrow
 53 │ foo(()
    ╰────

  × Line terminator not permitted before arrow
    ╭─[es6/arrowFunction/disallowLineTerminatorBeforeArrow.ts:53:1]
 53 │ foo(()
 54 │     => { return false; });
    ·     ─┬
    ·      ╰── Line terminator not permitted before arrow
 55 │ 
    ╰────

  × Line terminator not permitted before arrow
    ╭─[es6/arrowFunction/disallowLineTerminatorBeforeArrow.ts:58:1]
 58 │         constructor(x: number, thing = ()
 59 │             => 100) {
    ·             ─┬
    ·              ╰── Line terminator not permitted before arrow
 60 │         }
    ╰────

  × Line terminator not permitted before arrow
    ╭─[es6/arrowFunction/disallowLineTerminatorBeforeArrow.ts:62:1]
 62 │         public m = ()
 63 │             => 2 * 2 * 2
    ·             ─┬
    ·              ╰── Line terminator not permitted before arrow
 64 │     }
    ╰────

  × Line terminator not permitted before arrow
    ╭─[es6/arrowFunction/disallowLineTerminatorBeforeArrow.ts:67:1]
 67 │         claw = (()
 68 │             => 10)()
    ·             ─┬
    ·              ╰── Line terminator not permitted before arrow
 69 │     }
    ╰────

  × Unexpected token
    ╭─[es6/arrowFunction/disallowLineTerminatorBeforeArrow.ts:71:1]
 71 │     export var v = x
 72 │         => new City(Enum.claw);
    ·         ──
 73 │ }
    ╰────

  × Invalid characters after number
   ╭─[es6/binaryAndOctalIntegerLiteral/binaryIntegerLiteralError.ts:1:1]
 1 │ // error
 2 │ var bin1 = 0B1102110;
   ·                 ┬
   ·                 ╰── Invalid characters after number
 3 │ var bin1 = 0b11023410;
   ╰────

  × Invalid Character `'2'`
   ╭─[es6/binaryAndOctalIntegerLiteral/invalidBinaryIntegerLiteralAndOctalIntegerLiteral.ts:1:1]
 1 │ // Error
 2 │ var binary = 0b21010;
   ·                ▲
   ·                ╰── Invalid Character `2`
 3 │ var binary1 = 0B21010;
   ╰────

  × Invalid characters after number
   ╭─[es6/binaryAndOctalIntegerLiteral/octalIntegerLiteralError.ts:1:1]
 1 │ // error
 2 │ var oct1 = 0O13334823;
   ·                   ┬
   ·                   ╰── Invalid characters after number
 3 │ var oct2 = 0o34318592;
   ╰────

  × Cannot assign to '"arguments"' in strict mode
   ╭─[es6/classDeclaration/parseClassDeclarationInStrictModeByDefaultInES6.ts:6:1]
 6 │     private bar(eval:any) {
 7 │         arguments = "hello";
   ·         ─────────
 8 │     }
   ╰────

  × A 'set' accessor must have exactly one parameter.
    ╭─[es6/computedProperties/computedPropertyNames49_ES5.ts:9:1]
  9 │     },
 10 │     set [1 + 1]() {
    ·                ─┬
    ·                 ╰── A 'set' accessor must have exactly one parameter.
 11 │         // just throw
    ╰────

  × A 'set' accessor must have exactly one parameter.
    ╭─[es6/computedProperties/computedPropertyNames49_ES6.ts:10:1]
 10 │     },
 11 │     set [1 + 1]() {
    ·                ─┬
    ·                 ╰── A 'set' accessor must have exactly one parameter.
 12 │         // just throw
    ╰────

  × A 'set' accessor must have exactly one parameter.
    ╭─[es6/computedProperties/computedPropertyNames50_ES5.ts:11:1]
 11 │     },
 12 │     set [1 + 1]() {
    ·                ─┬
    ·                 ╰── A 'set' accessor must have exactly one parameter.
 13 │         // just throw
    ╰────

  × A 'set' accessor must have exactly one parameter.
    ╭─[es6/computedProperties/computedPropertyNames50_ES6.ts:12:1]
 12 │     },
 13 │     set [1 + 1]() {
    ·                ─┬
    ·                 ╰── A 'set' accessor must have exactly one parameter.
 14 │         // just throw
    ╰────

  × Missing initializer in destructuring declaration
   ╭─[es6/destructuring/declarationWithNoInitializer.ts:1:1]
 1 │ var [a, b];          // Error, no initializer
   ·     ───┬──
   ·        ╰── Missing initializer in destructuring declaration
 2 │ var {c, d};          // Error, no initializer
   ╰────

  × Missing initializer in destructuring declaration
   ╭─[es6/destructuring/declarationWithNoInitializer.ts:1:1]
 1 │ var [a, b];          // Error, no initializer
 2 │ var {c, d};          // Error, no initializer
   ·     ───┬──
   ·        ╰── Missing initializer in destructuring declaration
   ╰────

  × Expect token
   ╭─[es6/destructuring/destructuringObjectBindingPatternAndAssignment3.ts:1:1]
 1 │ // Error
 2 │ var {h?} = { h?: 1 };
   ·       ┬
   ·       ╰── Expect `,` here, but found `?`
 3 │ var {i}: string | number = { i: 2 };
   ╰────

  × Expect token
   ╭─[es6/destructuring/destructuringParameterDeclaration2.ts:6:1]
 6 │ function a0([a, b, [[c]]]: [number, number, string[][]]) { }
 7 │ a0([1, "string", [["world"]]);      // Error
   ·                             ┬
   ·                             ╰── Expect `,` here, but found `)`
 8 │ a0([1, 2, [["world"]], "string"]);  // Error
   ╰────

  × Expect token
   ╭─[es6/destructuring/destructuringParameterDeclaration6.ts:6:1]
 6 │ // Error
 7 │ function a({while}) { }
   ·                  ┬
   ·                  ╰── Expect `:` here, but found `}`
 8 │ function a1({public}) { }
   ╰────

  × Missing initializer in destructuring declaration
   ╭─[es6/destructuring/emptyVariableDeclarationBindingPatterns02_ES5.ts:4:1]
 4 │ (function () {
 5 │     var {};
   ·         ─┬
   ·          ╰── Missing initializer in destructuring declaration
 6 │     let {};
   ╰────

  × Missing initializer in destructuring declaration
   ╭─[es6/destructuring/emptyVariableDeclarationBindingPatterns02_ES5.ts:5:1]
 5 │     var {};
 6 │     let {};
   ·         ─┬
   ·          ╰── Missing initializer in destructuring declaration
 7 │     const {};
   ╰────

  × Missing initializer in destructuring declaration
   ╭─[es6/destructuring/emptyVariableDeclarationBindingPatterns02_ES5.ts:6:1]
 6 │     let {};
 7 │     const {};
   ·           ─┬
   ·            ╰── Missing initializer in destructuring declaration
 8 │ 
   ╰────

  × Missing initializer in destructuring declaration
    ╭─[es6/destructuring/emptyVariableDeclarationBindingPatterns02_ES5.ts:8:1]
  8 │ 
  9 │     var [];
    ·         ─┬
    ·          ╰── Missing initializer in destructuring declaration
 10 │     let [];
    ╰────

  × Missing initializer in destructuring declaration
    ╭─[es6/destructuring/emptyVariableDeclarationBindingPatterns02_ES5.ts:9:1]
  9 │     var [];
 10 │     let [];
    ·         ─┬
    ·          ╰── Missing initializer in destructuring declaration
 11 │     const [];
    ╰────

  × Missing initializer in destructuring declaration
    ╭─[es6/destructuring/emptyVariableDeclarationBindingPatterns02_ES5.ts:10:1]
 10 │     let [];
 11 │     const [];
    ·           ─┬
    ·            ╰── Missing initializer in destructuring declaration
 12 │ })();
    ╰────

  × Missing initializer in destructuring declaration
   ╭─[es6/destructuring/emptyVariableDeclarationBindingPatterns02_ES5iterable.ts:5:1]
 5 │ (function () {
 6 │     var {};
   ·         ─┬
   ·          ╰── Missing initializer in destructuring declaration
 7 │     let {};
   ╰────

  × Missing initializer in destructuring declaration
   ╭─[es6/destructuring/emptyVariableDeclarationBindingPatterns02_ES5iterable.ts:6:1]
 6 │     var {};
 7 │     let {};
   ·         ─┬
   ·          ╰── Missing initializer in destructuring declaration
 8 │     const {};
   ╰────

  × Missing initializer in destructuring declaration
   ╭─[es6/destructuring/emptyVariableDeclarationBindingPatterns02_ES5iterable.ts:7:1]
 7 │     let {};
 8 │     const {};
   ·           ─┬
   ·            ╰── Missing initializer in destructuring declaration
 9 │ 
   ╰────

  × Missing initializer in destructuring declaration
    ╭─[es6/destructuring/emptyVariableDeclarationBindingPatterns02_ES5iterable.ts:9:1]
  9 │ 
 10 │     var [];
    ·         ─┬
    ·          ╰── Missing initializer in destructuring declaration
 11 │     let [];
    ╰────

  × Missing initializer in destructuring declaration
    ╭─[es6/destructuring/emptyVariableDeclarationBindingPatterns02_ES5iterable.ts:10:1]
 10 │     var [];
 11 │     let [];
    ·         ─┬
    ·          ╰── Missing initializer in destructuring declaration
 12 │     const [];
    ╰────

  × Missing initializer in destructuring declaration
    ╭─[es6/destructuring/emptyVariableDeclarationBindingPatterns02_ES5iterable.ts:11:1]
 11 │     let [];
 12 │     const [];
    ·           ─┬
    ·            ╰── Missing initializer in destructuring declaration
 13 │ })();
    ╰────

  × Missing initializer in destructuring declaration
   ╭─[es6/destructuring/emptyVariableDeclarationBindingPatterns02_ES6.ts:4:1]
 4 │ (function () {
 5 │     var {};
   ·         ─┬
   ·          ╰── Missing initializer in destructuring declaration
 6 │     let {};
   ╰────

  × Missing initializer in destructuring declaration
   ╭─[es6/destructuring/emptyVariableDeclarationBindingPatterns02_ES6.ts:5:1]
 5 │     var {};
 6 │     let {};
   ·         ─┬
   ·          ╰── Missing initializer in destructuring declaration
 7 │     const {};
   ╰────

  × Missing initializer in destructuring declaration
   ╭─[es6/destructuring/emptyVariableDeclarationBindingPatterns02_ES6.ts:6:1]
 6 │     let {};
 7 │     const {};
   ·           ─┬
   ·            ╰── Missing initializer in destructuring declaration
 8 │ 
   ╰────

  × Missing initializer in destructuring declaration
    ╭─[es6/destructuring/emptyVariableDeclarationBindingPatterns02_ES6.ts:8:1]
  8 │ 
  9 │     var [];
    ·         ─┬
    ·          ╰── Missing initializer in destructuring declaration
 10 │     let [];
    ╰────

  × Missing initializer in destructuring declaration
    ╭─[es6/destructuring/emptyVariableDeclarationBindingPatterns02_ES6.ts:9:1]
  9 │     var [];
 10 │     let [];
    ·         ─┬
    ·          ╰── Missing initializer in destructuring declaration
 11 │     const [];
    ╰────

  × Missing initializer in destructuring declaration
    ╭─[es6/destructuring/emptyVariableDeclarationBindingPatterns02_ES6.ts:10:1]
 10 │     let [];
 11 │     const [];
    ·           ─┬
    ·            ╰── Missing initializer in destructuring declaration
 12 │ })();
    ╰────

  × Expect token
   ╭─[es6/destructuring/objectBindingPatternKeywordIdentifiers01.ts:1:1]
 1 │ 
 2 │ var { while } = { while: 1 }
   ·             ┬
   ·             ╰── Expect `:` here, but found `}`
   ╰────

  × Unexpected token
   ╭─[es6/destructuring/objectBindingPatternKeywordIdentifiers02.ts:1:1]
 1 │ 
 2 │ var { while: while } = { while: 1 }
   ·              ─────
   ╰────

  × Expect token
   ╭─[es6/destructuring/objectBindingPatternKeywordIdentifiers03.ts:1:1]
 1 │ 
 2 │ var { "while" } = { while: 1 }
   ·               ┬
   ·               ╰── Expect `:` here, but found `}`
   ╰────

  × Unexpected token
   ╭─[es6/destructuring/objectBindingPatternKeywordIdentifiers04.ts:1:1]
 1 │ 
 2 │ var { "while": while } = { while: 1 }
   ·                ─────
   ╰────

  × Invalid assignment
   ╭─[es6/destructuring/restElementWithInitializer2.ts:2:1]
 2 │ var x: number[];
 3 │ [...x = a] = a;  // Error, rest element cannot have initializer
   ·     ──┬──
   ·       ╰── Cannot assign to this expression
   ╰────

  × Invalid assignment
   ╭─[es6/destructuring/restPropertyWithBindingPattern.ts:1:1]
 1 │ ({...{}} = {});
 2 │ ({...({})} = {});
   ·      ──┬─
   ·        ╰── Cannot assign to this expression
 3 │ ({...[]} = {});
   ╰────

  × Missing initializer in const declaration
   ╭─[es6/for-ofStatements/for-of2.ts:1:1]
 1 │ //@target: ES6
 2 │ const v;
   ·       ┬
   ·       ╰── const declaration need an initializer
 3 │ for (v of []) { }
   ╰────

  × Unexpected token
   ╭─[es6/for-ofStatements/for-of3.ts:2:1]
 2 │ var v: any;
 3 │ for (v++ of []) { }
   ·      ───
   ╰────

  × `let` cannot be declared as a variable name inside of a `"let"` declaration
   ╭─[es6/for-ofStatements/for-of51.ts:1:1]
 1 │ //@target: ES6
 2 │ for (let let of []) {}
   ·          ───
   ╰────

  × Unexpected token
   ╭─[es6/functionPropertyAssignments/FunctionPropertyAssignments2_es6.ts:1:1]
 1 │ // @target: es6
 2 │ var v = { *() { } }
   ·           ─
   ╰────

  × Unexpected token
   ╭─[es6/functionPropertyAssignments/FunctionPropertyAssignments3_es6.ts:1:1]
 1 │ // @target: es6
 2 │ var v = { *{ } }
   ·           ─
   ╰────

  × Unexpected token
   ╭─[es6/functionPropertyAssignments/FunctionPropertyAssignments4_es6.ts:1:1]
 1 │ // @target: es6
 2 │ var v = { * }
   ·           ─
   ╰────

  × Unexpected token
   ╭─[es6/functionPropertyAssignments/FunctionPropertyAssignments6_es6.ts:1:1]
 1 │ // @target: es6
 2 │ var v = { *<T>() { } }
   ·           ─
   ╰────

  × Unexpected token
   ╭─[es6/memberFunctionDeclarations/MemberFunctionDeclaration4_es6.ts:2:1]
 2 │ class C {
 3 │    *() { }
   ·     ─
 4 │ }
   ╰────

  × Unexpected token
   ╭─[es6/memberFunctionDeclarations/MemberFunctionDeclaration5_es6.ts:3:1]
 3 │    *
 4 │ }
   · ─
   ╰────

  × Expect token
   ╭─[es6/memberFunctionDeclarations/MemberFunctionDeclaration6_es6.ts:3:1]
 3 │    *foo
 4 │ }
   · ┬
   · ╰── Expect `(` here, but found `}`
   ╰────

  × Invalid Character `'¬'`
   ╭─[es6/memberFunctionDeclarations/MemberFunctionDeclaration8_es6.ts:4:1]
 4 │     // Make sure we don't think of *bar as the start of a generator method.
 5 │     if (a) ¬ * bar;
   ·            ┬
   ·            ╰── Invalid Character `¬`
 6 │     return bar;
   ╰────

  × Unexpected token
   ╭─[es6/shorthandPropertyAssignment/objectLiteralShorthandPropertiesErrorFromNotUsingIdentifier.ts:2:1]
 2 │ var y = {
 3 │     "stringLiteral",
   ·                    ─
 4 │     42,
   ╰────

  × Unexpected token
    ╭─[es6/shorthandPropertyAssignment/objectLiteralShorthandPropertiesErrorWithModule.ts:9:1]
  9 │     export var y = {
 10 │         m.x  // error
    ·          ─
 11 │     };
    ╰────

  × Expect token
   ╭─[es6/templates/TemplateExpression1.ts:1:1]
 1 │ var v = `foo ${ a 
   ·                  ▲
   ·                  ╰── Expect `$}` here, but found `EOF`
   ╰────

  × 'super' can only be used with function calls or in property accesses
    ╭─[es6/templates/taggedTemplatesWithTypeArguments2.ts:39:1]
 39 │     constructor() {
 40 │         super<number, string, T> `hello world`;
    ·         ──┬──
    ·           ╰── 'super' can only be used with function calls or in property accesses 
 41 │     }
    ╰────
  help: replace with `super()` or `super.prop` or `super[prop]`

  × Unexpected token
   ╭─[es6/templates/templateStringInFunctionParameterType.ts:1:1]
 1 │ function f(`hello`);
   ·            ───────
 2 │ function f(x: string);
   ╰────

  × Unexpected token
   ╭─[es6/templates/templateStringInFunctionParameterTypeES6.ts:1:1]
 1 │ // @target: ES6
 2 │ function f(`hello`);
   ·            ───────
 3 │ function f(x: string);
   ╰────

  × Automatic Semicolon Insertion
   ╭─[es6/templates/templateStringInModuleName.ts:1:1]
 1 │ declare module `M1` {
   ·        ┬
   ·        ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 2 │ }
   ╰────
  help: Try insert a semicolon here

  × Automatic Semicolon Insertion
   ╭─[es6/templates/templateStringInModuleNameES6.ts:1:1]
 1 │ // @target: ES6
 2 │ declare module `M1` {
   ·        ┬
   ·        ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 3 │ }
   ╰────
  help: Try insert a semicolon here

  × Unexpected token
   ╭─[es6/templates/templateStringInObjectLiteral.ts:2:1]
 2 │     a: `abc${ 123 }def`,
 3 │     `b`: 321
   ·     ───
 4 │ }
   ╰────

  × Unexpected token
   ╭─[es6/templates/templateStringInObjectLiteralES6.ts:3:1]
 3 │     a: `abc${ 123 }def`,
 4 │     `b`: 321
   ·     ───
 5 │ }
   ╰────

  × Unexpected token
   ╭─[es6/templates/templateStringInPropertyName1.ts:1:1]
 1 │ var x = {
 2 │     `a`: 321
   ·     ───
 3 │ }
   ╰────

  × Unexpected token
   ╭─[es6/templates/templateStringInPropertyName2.ts:1:1]
 1 │ var x = {
 2 │     `abc${ 123 }def${ 456 }ghi`: 321
   ·     ──────
 3 │ }
   ╰────

  × Unexpected token
   ╭─[es6/templates/templateStringInPropertyNameES6_1.ts:2:1]
 2 │ var x = {
 3 │     `a`: 321
   ·     ───
 4 │ }
   ╰────

  × Unexpected token
   ╭─[es6/templates/templateStringInPropertyNameES6_2.ts:2:1]
 2 │ var x = {
 3 │     `abc${ 123 }def${ 456 }ghi`: 321
   ·     ──────
 4 │ }
   ╰────

  × Unterminated string
   ╭─[es6/templates/templateStringUnterminated1.ts:1:1]
 1 │ 
 2 │ `
   · ┬
   · ╰── Unterminated string
   ╰────

  × Unterminated string
   ╭─[es6/templates/templateStringUnterminated1_ES6.ts:1:1]
 1 │ // @target: ES6
 2 │ `
   · ┬
   · ╰── Unterminated string
   ╰────

  × Unterminated string
   ╭─[es6/templates/templateStringUnterminated2.ts:1:1]
 1 │ 
 2 │ `\`
   · ─┬─
   ·  ╰── Unterminated string
   ╰────

  × Unterminated string
   ╭─[es6/templates/templateStringUnterminated2_ES6.ts:1:1]
 1 │ // @target: ES6
 2 │ `\`
   · ─┬─
   ·  ╰── Unterminated string
   ╰────

  × Unterminated string
   ╭─[es6/templates/templateStringUnterminated3.ts:1:1]
 1 │ 
 2 │ `\\
   · ─┬─
   ·  ╰── Unterminated string
   ╰────

  × Unterminated string
   ╭─[es6/templates/templateStringUnterminated3_ES6.ts:1:1]
 1 │ // @target: ES6
 2 │ `\\
   · ─┬─
   ·  ╰── Unterminated string
   ╰────

  × Unterminated string
   ╭─[es6/templates/templateStringUnterminated4.ts:1:1]
 1 │ 
 2 │ `\\\`
   · ──┬──
   ·   ╰── Unterminated string
   ╰────

  × Unterminated string
   ╭─[es6/templates/templateStringUnterminated4_ES6.ts:1:1]
 1 │ // @target: ES6
 2 │ `\\\`
   · ──┬──
   ·   ╰── Unterminated string
   ╰────

  × Unterminated string
   ╭─[es6/templates/templateStringUnterminated5.ts:1:1]
 1 │ 
 2 │ `\\\\\`
   · ───┬───
   ·    ╰── Unterminated string
   ╰────

  × Unterminated string
   ╭─[es6/templates/templateStringUnterminated5_ES6.ts:1:1]
 1 │ // @target: ES6
 2 │ `\\\\\`
   · ───┬───
   ·    ╰── Unterminated string
   ╰────

  × Expect token
   ╭─[es6/templates/templateStringWithEmbeddedYieldKeyword.ts:1:1]
 1 │ function* gen {
   ·               ┬
   ·               ╰── Expect `(` here, but found `{`
 2 │     // Once this is supported, yield *must* be parenthesized.
   ╰────

  × Invalid escape sequence
   ╭─[es6/unicodeExtendedEscapes/unicodeExtendedEscapesInStrings07_ES5.ts:4:1]
 4 │ //  1. Assert: 0 ≤ cp ≤ 0x10FFFF.
 5 │ var x = "\u{110000}";
   ·          ────┬────
   ·              ╰── Invalid escape sequence
   ╰────

  × Invalid escape sequence
   ╭─[es6/unicodeExtendedEscapes/unicodeExtendedEscapesInStrings07_ES6.ts:4:1]
 4 │ //  1. Assert: 0 ≤ cp ≤ 0x10FFFF.
 5 │ var x = "\u{110000}";
   ·          ────┬────
   ·              ╰── Invalid escape sequence
   ╰────

  × Invalid escape sequence
   ╭─[es6/unicodeExtendedEscapes/unicodeExtendedEscapesInStrings12_ES5.ts:2:1]
 2 │ 
 3 │ var x = "\u{FFFFFFFF}";
   ·          ────┬────
   ·              ╰── Invalid escape sequence
   ╰────

  × Invalid escape sequence
   ╭─[es6/unicodeExtendedEscapes/unicodeExtendedEscapesInStrings12_ES6.ts:2:1]
 2 │ 
 3 │ var x = "\u{FFFFFFFF}";
   ·          ────┬────
   ·              ╰── Invalid escape sequence
   ╰────

  × Invalid escape sequence
   ╭─[es6/unicodeExtendedEscapes/unicodeExtendedEscapesInStrings14_ES5.ts:3:1]
 3 │ // Shouldn't work, negatives are not allowed.
 4 │ var x = "\u{-DDDD}";
   ·          ─┬─
   ·           ╰── Invalid escape sequence
   ╰────

  × Invalid escape sequence
   ╭─[es6/unicodeExtendedEscapes/unicodeExtendedEscapesInStrings14_ES6.ts:3:1]
 3 │ // Shouldn't work, negatives are not allowed.
 4 │ var x = "\u{-DDDD}";
   ·          ─┬─
   ·           ╰── Invalid escape sequence
   ╰────

  × Invalid escape sequence
   ╭─[es6/unicodeExtendedEscapes/unicodeExtendedEscapesInStrings17_ES5.ts:2:1]
 2 │ 
 3 │ var x = "\u{r}\u{n}\u{t}";
   ·          ─┬─
   ·           ╰── Invalid escape sequence
   ╰────

  × Invalid escape sequence
   ╭─[es6/unicodeExtendedEscapes/unicodeExtendedEscapesInStrings17_ES5.ts:2:1]
 2 │ 
 3 │ var x = "\u{r}\u{n}\u{t}";
   ·               ─┬─
   ·                ╰── Invalid escape sequence
   ╰────

  × Invalid escape sequence
   ╭─[es6/unicodeExtendedEscapes/unicodeExtendedEscapesInStrings17_ES5.ts:2:1]
 2 │ 
 3 │ var x = "\u{r}\u{n}\u{t}";
   ·                    ─┬─
   ·                     ╰── Invalid escape sequence
   ╰────

  × Invalid escape sequence
   ╭─[es6/unicodeExtendedEscapes/unicodeExtendedEscapesInStrings17_ES6.ts:2:1]
 2 │ 
 3 │ var x = "\u{r}\u{n}\u{t}";
   ·          ─┬─
   ·           ╰── Invalid escape sequence
   ╰────

  × Invalid escape sequence
   ╭─[es6/unicodeExtendedEscapes/unicodeExtendedEscapesInStrings17_ES6.ts:2:1]
 2 │ 
 3 │ var x = "\u{r}\u{n}\u{t}";
   ·               ─┬─
   ·                ╰── Invalid escape sequence
   ╰────

  × Invalid escape sequence
   ╭─[es6/unicodeExtendedEscapes/unicodeExtendedEscapesInStrings17_ES6.ts:2:1]
 2 │ 
 3 │ var x = "\u{r}\u{n}\u{t}";
   ·                    ─┬─
   ·                     ╰── Invalid escape sequence
   ╰────

  × Invalid escape sequence
   ╭─[es6/unicodeExtendedEscapes/unicodeExtendedEscapesInStrings19_ES5.ts:2:1]
 2 │ 
 3 │ var x = "\u{}";
   ·          ─┬─
   ·           ╰── Invalid escape sequence
   ╰────

  × Invalid escape sequence
   ╭─[es6/unicodeExtendedEscapes/unicodeExtendedEscapesInStrings19_ES6.ts:2:1]
 2 │ 
 3 │ var x = "\u{}";
   ·          ─┬─
   ·           ╰── Invalid escape sequence
   ╰────

  × Invalid escape sequence
   ╭─[es6/unicodeExtendedEscapes/unicodeExtendedEscapesInStrings20_ES5.ts:2:1]
 2 │ 
 3 │ var x = "\u{";
   ·          ─┬─
   ·           ╰── Invalid escape sequence
   ╰────

  × Invalid escape sequence
   ╭─[es6/unicodeExtendedEscapes/unicodeExtendedEscapesInStrings20_ES6.ts:2:1]
 2 │ 
 3 │ var x = "\u{";
   ·          ─┬─
   ·           ╰── Invalid escape sequence
   ╰────

  × Invalid escape sequence
   ╭─[es6/unicodeExtendedEscapes/unicodeExtendedEscapesInStrings21_ES5.ts:2:1]
 2 │ 
 3 │ var x = "\u{67";
   ·          ──┬──
   ·            ╰── Invalid escape sequence
   ╰────

  × Invalid escape sequence
   ╭─[es6/unicodeExtendedEscapes/unicodeExtendedEscapesInStrings21_ES6.ts:2:1]
 2 │ 
 3 │ var x = "\u{67";
   ·          ──┬──
   ·            ╰── Invalid escape sequence
   ╰────

  × Invalid escape sequence
   ╭─[es6/unicodeExtendedEscapes/unicodeExtendedEscapesInStrings22_ES5.ts:2:1]
 2 │ 
 3 │ var x = "\u{00000000000067";
   ·          ────────┬────────
   ·                  ╰── Invalid escape sequence
   ╰────

  × Invalid escape sequence
   ╭─[es6/unicodeExtendedEscapes/unicodeExtendedEscapesInStrings22_ES6.ts:2:1]
 2 │ 
 3 │ var x = "\u{00000000000067";
   ·          ────────┬────────
   ·                  ╰── Invalid escape sequence
   ╰────

  × Invalid escape sequence
   ╭─[es6/unicodeExtendedEscapes/unicodeExtendedEscapesInStrings24_ES5.ts:2:1]
 2 │ 
 3 │ var x = "\u{00000000000067
   ·          ────────┬────────
   ·                  ╰── Invalid escape sequence
   ╰────

  × Unterminated string
   ╭─[es6/unicodeExtendedEscapes/unicodeExtendedEscapesInStrings24_ES5.ts:2:1]
 2 │ 
 3 │ var x = "\u{00000000000067
   ·         ─────────┬─────────
   ·                  ╰── Unterminated string
   ╰────

  × Invalid escape sequence
   ╭─[es6/unicodeExtendedEscapes/unicodeExtendedEscapesInStrings24_ES6.ts:2:1]
 2 │ 
 3 │ var x = "\u{00000000000067
   ·          ────────┬────────
   ·                  ╰── Invalid escape sequence
   ╰────

  × Unterminated string
   ╭─[es6/unicodeExtendedEscapes/unicodeExtendedEscapesInStrings24_ES6.ts:2:1]
 2 │ 
 3 │ var x = "\u{00000000000067
   ·         ─────────┬─────────
   ·                  ╰── Unterminated string
   ╰────

  × Unterminated string
   ╭─[es6/unicodeExtendedEscapes/unicodeExtendedEscapesInStrings25_ES5.ts:2:1]
 2 │ 
 3 │ var x = "\u{00000000000067}
   ·         ──────────┬─────────
   ·                   ╰── Unterminated string
   ╰────

  × Unterminated string
   ╭─[es6/unicodeExtendedEscapes/unicodeExtendedEscapesInStrings25_ES6.ts:2:1]
 2 │ 
 3 │ var x = "\u{00000000000067}
   ·         ──────────┬─────────
   ·                   ╰── Unterminated string
   ╰────

  × Bad escape sequence in untagged template literal
   ╭─[es6/unicodeExtendedEscapes/unicodeExtendedEscapesInTemplates07_ES5.ts:4:1]
 4 │ //  1. Assert: 0 ≤ cp ≤ 0x10FFFF.
 5 │ var x = `\u{110000}`;
   ·          ─────┬────
   ·               ╰── Bad escape sequence in untagged template literal
   ╰────

  × Bad escape sequence in untagged template literal
   ╭─[es6/unicodeExtendedEscapes/unicodeExtendedEscapesInTemplates07_ES6.ts:4:1]
 4 │ //  1. Assert: 0 ≤ cp ≤ 0x10FFFF.
 5 │ var x = `\u{110000}`;
   ·          ─────┬────
   ·               ╰── Bad escape sequence in untagged template literal
   ╰────

  × Bad escape sequence in untagged template literal
   ╭─[es6/unicodeExtendedEscapes/unicodeExtendedEscapesInTemplates12_ES5.ts:2:1]
 2 │ 
 3 │ var x = `\u{FFFFFFFF}`;
   ·          ──────┬─────
   ·                ╰── Bad escape sequence in untagged template literal
   ╰────

  × Bad escape sequence in untagged template literal
   ╭─[es6/unicodeExtendedEscapes/unicodeExtendedEscapesInTemplates12_ES6.ts:2:1]
 2 │ 
 3 │ var x = `\u{FFFFFFFF}`;
   ·          ──────┬─────
   ·                ╰── Bad escape sequence in untagged template literal
   ╰────

  × Bad escape sequence in untagged template literal
   ╭─[es6/unicodeExtendedEscapes/unicodeExtendedEscapesInTemplates14_ES5.ts:3:1]
 3 │ // Shouldn't work, negatives are not allowed.
 4 │ var x = `\u{-DDDD}`;
   ·          ────┬────
   ·              ╰── Bad escape sequence in untagged template literal
   ╰────

  × Bad escape sequence in untagged template literal
   ╭─[es6/unicodeExtendedEscapes/unicodeExtendedEscapesInTemplates14_ES6.ts:3:1]
 3 │ // Shouldn't work, negatives are not allowed.
 4 │ var x = `\u{-DDDD}`;
   ·          ────┬────
   ·              ╰── Bad escape sequence in untagged template literal
   ╰────

  × Bad escape sequence in untagged template literal
   ╭─[es6/unicodeExtendedEscapes/unicodeExtendedEscapesInTemplates17_ES5.ts:2:1]
 2 │ 
 3 │ var x = `\u{r}\u{n}\u{t}`;
   ·          ───────┬───────
   ·                 ╰── Bad escape sequence in untagged template literal
   ╰────

  × Bad escape sequence in untagged template literal
   ╭─[es6/unicodeExtendedEscapes/unicodeExtendedEscapesInTemplates17_ES6.ts:2:1]
 2 │ 
 3 │ var x = `\u{r}\u{n}\u{t}`;
   ·          ───────┬───────
   ·                 ╰── Bad escape sequence in untagged template literal
   ╰────

  × Bad escape sequence in untagged template literal
   ╭─[es6/unicodeExtendedEscapes/unicodeExtendedEscapesInTemplates19_ES5.ts:2:1]
 2 │ 
 3 │ var x = `\u{}`;
   ·          ──┬─
   ·            ╰── Bad escape sequence in untagged template literal
   ╰────

  × Bad escape sequence in untagged template literal
   ╭─[es6/unicodeExtendedEscapes/unicodeExtendedEscapesInTemplates19_ES6.ts:2:1]
 2 │ 
 3 │ var x = `\u{}`;
   ·          ──┬─
   ·            ╰── Bad escape sequence in untagged template literal
   ╰────

  × Unexpected token
   ╭─[es6/variableDeclarations/VariableDeclaration11_es6.ts:2:1]
 2 │ "use strict";
 3 │ let
   ·   ─
   ╰────

  × Unexpected token
   ╭─[es6/variableDeclarations/VariableDeclaration13_es6.ts:5:1]
 5 │ var let: any;
 6 │ let[0] = 100;
   ·     ─
   ╰────

  × Unexpected token
   ╭─[es6/variableDeclarations/VariableDeclaration1_es6.ts:1:1]
 1 │ // @target:es6
 2 │ const
   ·     ─
   ╰────

  × Missing initializer in const declaration
   ╭─[es6/variableDeclarations/VariableDeclaration2_es6.ts:1:1]
 1 │ // @target:es6
 2 │ const a
   ·       ┬
   ·       ╰── const declaration need an initializer
   ╰────

  × Missing initializer in const declaration
   ╭─[es6/variableDeclarations/VariableDeclaration4_es6.ts:1:1]
 1 │ // @target:es6
 2 │ const a: number
   ·       ┬
   ·       ╰── const declaration need an initializer
   ╰────

  × Unexpected token
   ╭─[es6/variableDeclarations/VariableDeclaration6_es6.ts:1:1]
 1 │ // @target:es6
 2 │ let
   ·   ─
   ╰────

  × Unexpected token
   ╭─[es6/yieldExpressions/YieldExpression5_es6.ts:3:1]
 3 │   yield*
 4 │ }
   · ─
   ╰────

  × Unexpected token
   ╭─[es6/yieldExpressions/YieldStarExpression2_es6.ts:1:1]
 1 │ // @target: es6
 2 │ yield *;
   ·        ─
   ╰────

  × Unexpected token
   ╭─[es6/yieldExpressions/YieldStarExpression3_es6.ts:2:1]
 2 │ function *g() {
 3 │     yield *;
   ·            ─
 4 │ }
   ╰────

  × Invalid assignment
   ╭─[es7/exponentiationOperator/compoundExponentiationAssignmentLHSIsValue.ts:7:1]
 7 │     constructor() {
 8 │         this **= value;
   ·         ──┬─
   ·           ╰── Cannot assign to this expression
 9 │     }
   ╰────

  × Unexpected trailing comma after rest element
   ╭─[es7/trailingCommasInBindingPatterns.ts:1:1]
 1 │ const [...a,] = [];
   ·            ┬
   ·            ╰── Unexpected trailing comma after rest element
 2 │ const {...b,} = {};
   ╰────

  × Rest element must be last element
   ╭─[es7/trailingCommasInBindingPatterns.ts:1:1]
 1 │ const [...a,] = [];
 2 │ const {...b,} = {};
   ·        ──┬─
   ·          ╰── Rest element must be last element
 3 │ let c, d;
   ╰────

  × Unexpected trailing comma after rest element
   ╭─[es7/trailingCommasInBindingPatterns.ts:3:1]
 3 │ let c, d;
 4 │ ([...c,] = []);
   ·       ▲
   ·       ╰── Unexpected trailing comma after rest element
 5 │ ({...d,} = {});
   ╰────

  × Rest element must be last element
   ╭─[es7/trailingCommasInFunctionParametersAndArguments.ts:6:1]
 6 │ 
 7 │ function f2(...args,) {}
   ·             ───┬───
   ·                ╰── Rest element must be last element
 8 │ 
   ╰────

  × Rest element must be last element
    ╭─[es7/trailingCommasInFunctionParametersAndArguments.ts:9:1]
  9 │ // Allowed for ambient declarations
 10 │ declare function f25(...args,): void;
    ·                      ───┬───
    ·                         ╰── Rest element must be last element
 11 │ 
    ╰────

  × Unexpected token
   ╭─[es7/trailingCommasInGetter.ts:1:1]
 1 │ class X {
 2 │     get x(,) { return 0; }
   ·           ─
 3 │ }
   ╰────

  × Unexpected token
    ╭─[esDecorators/esDecorators-emitDecoratorMetadata.ts:30:1]
 30 │ 
 31 │ (@dec class C {
    ·  ─
 32 │     constructor(x: number) {}
    ╰────

  × Invalid assignment
   ╭─[expressions/assignmentOperator/assignmentLHSIsValue.ts:5:1]
 5 │ class C {
 6 │     constructor() { this = value; }
   ·                     ──┬─
   ·                       ╰── Cannot assign to this expression
 7 │     foo() { this = value; }
   ╰────

  × Invalid assignment
    ╭─[expressions/assignmentOperator/compoundAssignmentLHSIsValue.ts:8:1]
  8 │     constructor() {
  9 │         this *= value;
    ·         ──┬─
    ·           ╰── Cannot assign to this expression
 10 │         this += value;
    ╰────

  × Unexpected token
    ╭─[expressions/commaOperator/commaOperatorWithoutOperand.ts:16:1]
 16 │ // Missing the first operand
 17 │ (, ANY);
    ·  ─
 18 │ (, BOOLEAN);
    ╰────

  × 'with' statements are not allowed
   ╭─[expressions/functions/arrowFunctionContexts.ts:2:1]
 2 │ // Arrow function used in with statement
 3 │ with (window) {
   · ────
 4 │     var p = () => this;
   ╰────

  × 'with' statements are not allowed
    ╭─[expressions/functions/arrowFunctionContexts.ts:43:1]
 43 │     // Arrow function used in with statement
 44 │     with (window) {
    ·     ────
 45 │         var p = () => this;
    ╰────

  × Automatic Semicolon Insertion
    ╭─[expressions/newOperator/newOperatorErrorCases.ts:26:1]
 26 │ // Construct expression with no parentheses for construct signature with > 0 parameters
 27 │ var b = new C0 32, ''; // Parse error
    ·               ┬
    ·               ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 28 │ 
    ╰────
  help: Try insert a semicolon here

  × Unexpected token
    ╭─[expressions/objectLiterals/objectLiteralErrors.ts:51:1]
 51 │     y = 2,
 52 │     #z: 3
    ·     ──
 53 │ }
    ╰────

  × Invalid assignment
    ╭─[expressions/operators/incrementAndDecrement.ts:8:1]
  8 │ // Assign to expression++
  9 │ x++ = 4; // Error
    · ─┬─
    ·  ╰── Cannot assign to this expression
 10 │ 
    ╰────

  × Invalid assignment
   ╭─[expressions/optionalChaining/elementAccessChain/elementAccessChain.3.ts:4:1]
 4 │ 
 5 │ obj?.["a"]++;
   · ─────┬────
   ·      ╰── Cannot assign to this expression
 6 │ obj?.a["b"]++;
   ╰────

  × Invalid assignment
   ╭─[expressions/optionalChaining/propertyAccessChain/propertyAccessChain.3.ts:4:1]
 4 │ 
 5 │ obj?.a++;
   · ───┬──
   ·    ╰── Cannot assign to this expression
 6 │ obj?.a.b++;
   ╰────

  × Tagged template expressions are not permitted in an optional chain
   ╭─[expressions/optionalChaining/taggedTemplateChain/taggedTemplateChain.ts:1:1]
 1 │ declare let a: any;
 2 │ a?.`b`;
   ·    ─┬─
   ·     ╰── Tagged template expressions are not permitted in an optional chain
 3 │ 
   ╰────

  × Tagged template expressions are not permitted in an optional chain
   ╭─[expressions/optionalChaining/taggedTemplateChain/taggedTemplateChain.ts:3:1]
 3 │ 
 4 │ a?.`b${1}c`;
   ·    ────┬───
   ·        ╰── Tagged template expressions are not permitted in an optional chain
   ╰────

  × 'super' can only be used with function calls or in property accesses
    ╭─[expressions/superCalls/errorSuperCalls.ts:45:1]
 45 │     constructor() {
 46 │         super<string>();
    ·         ──┬──
    ·           ╰── 'super' can only be used with function calls or in property accesses 
 47 │         super();
    ╰────
  help: replace with `super()` or `super.prop` or `super[prop]`

  × Expect token
    ╭─[expressions/typeAssertions/typeAssertions.ts:43:1]
 43 │ var str: string;
 44 │ if(<numOrStr is string>(numOrStr === undefined)) { // Error
    ·              ─┬
    ·               ╰── Expect `>` here, but found `is`
 45 │     str = numOrStr; // Error, no narrowing occurred
    ╰────

  × Automatic Semicolon Insertion
    ╭─[expressions/typeGuards/typeGuardFunctionErrors.ts:17:1]
 17 │ 
 18 │ function hasTypeGuardTypeInsideTypeGuardType(x): x is x is A {
    ·                                                        ┬
    ·                                                        ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 19 │     return true;
    ╰────
  help: Try insert a semicolon here

  × Automatic Semicolon Insertion
   ╭─[expressions/typeGuards/typeGuardOfFormThisMember.ts:5:1]
 5 │     export class FileSystemObject {
 6 │         isFSO: this is FileSystemObject;
   ·                    ┬
   ·                    ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 7 │         get isFile(): this is File {
   ╰────
  help: Try insert a semicolon here

  × Automatic Semicolon Insertion
   ╭─[expressions/typeGuards/typeGuardOfFormThisMemberErrors.ts:5:1]
 5 │     export class FileSystemObject {
 6 │         isFSO: this is FileSystemObject;
   ·                    ┬
   ·                    ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 7 │         get isFile(): this is File {
   ╰────
  help: Try insert a semicolon here

  × Automatic Semicolon Insertion
   ╭─[expressions/typeGuards/typePredicateOnVariableDeclaration01.ts:2:1]
 2 │ 
 3 │ var x: this is string;
   ·            ┬
   ·            ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
   ╰────
  help: Try insert a semicolon here

  × Automatic Semicolon Insertion
   ╭─[expressions/typeGuards/typePredicateOnVariableDeclaration02.ts:2:1]
 2 │ 
 3 │ var y: z is number;
   ·         ┬
   ·         ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
   ╰────
  help: Try insert a semicolon here

  × Automatic Semicolon Insertion
    ╭─[expressions/typeSatisfaction/typeSatisfaction.ts:10:1]
 10 │ 
 11 │ const t1 = { a: 1 } satisfies I1; // Ok
    ·                    ┬
    ·                    ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 12 │ const t2 = { a: 1, b: 1 } satisfies I1; // Error
    ╰────
  help: Try insert a semicolon here

  × Automatic Semicolon Insertion
   ╭─[expressions/typeSatisfaction/typeSatisfaction_contextualTyping2.ts:5:1]
 5 │     g(s) { }
 6 │ } satisfies { g(s: string): void } & Record<string, unknown>;
   ·  ┬
   ·  ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 7 │ 
   ╰────
  help: Try insert a semicolon here

  × Automatic Semicolon Insertion
   ╭─[expressions/typeSatisfaction/typeSatisfaction_js.ts:4:1]
 4 │ 
 5 │ var v = undefined satisfies 1;
   ·                  ┬
   ·                  ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
   ╰────
  help: Try insert a semicolon here

  × Automatic Semicolon Insertion
   ╭─[expressions/typeSatisfaction/typeSatisfaction_optionalMemberConformance.ts:2:1]
 2 │ // Undesirable behavior today with type annotation
 3 │ const a = { x: 10 } satisfies Partial<Point2d>;
   ·                    ┬
   ·                    ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 4 │ // Should OK
   ╰────
  help: Try insert a semicolon here

  × Automatic Semicolon Insertion
   ╭─[expressions/typeSatisfaction/typeSatisfaction_propNameConstraining.ts:6:1]
 6 │     x: 8 // Should error, 'x' isn't in 'Keys'
 7 │ } satisfies Partial<Record<Keys, unknown>>;
   ·  ┬
   ·  ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 8 │ 
   ╰────
  help: Try insert a semicolon here

  × Automatic Semicolon Insertion
   ╭─[expressions/typeSatisfaction/typeSatisfaction_propertyNameFulfillment.ts:6:1]
 6 │     x: 8 // Should error, 'x' isn't in 'Keys'
 7 │ } satisfies Record<Keys, unknown>;
   ·  ┬
   ·  ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 8 │ 
   ╰────
  help: Try insert a semicolon here

  × Automatic Semicolon Insertion
   ╭─[expressions/typeSatisfaction/typeSatisfaction_propertyValueConformance3.ts:7:1]
 7 │     blue: { r: 0, g: 0, b: 255 },
 8 │ } satisfies Record<string, Color>;
   ·  ┬
   ·  ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
   ╰────
  help: Try insert a semicolon here

  × Automatic Semicolon Insertion
   ╭─[expressions/typeSatisfaction/typeSatisfaction_vacuousIntersectionOfContextualTypes.ts:1:1]
 1 │ const a: "baz" = "foo" satisfies "foo" | "bar";
   ·                       ┬
   ·                       ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 2 │ const b: { xyz: "baz" } = { xyz: "foo" } satisfies { xyz: "foo" | "bar" };
   ╰────
  help: Try insert a semicolon here

  × Automatic Semicolon Insertion
   ╭─[expressions/unaryOperators/bitwiseNotOperator/bitwiseNotOperatorInvalidOperations.ts:4:1]
 4 │ // operand before ~
 5 │ var a = q~;  //expect error
   ·          ▲
   ·          ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 6 │ 
   ╰────
  help: Try insert a semicolon here

  × Invalid assignment
    ╭─[expressions/unaryOperators/decrementOperator/decrementOperatorWithAnyOtherTypeInvalidOperations.ts:36:1]
 36 │ // any type literal
 37 │ var ResultIsNumber11 = --{};
    ·                          ─┬
    ·                           ╰── Cannot assign to this expression
 38 │ var ResultIsNumber12 = --null;
    ╰────

  × Invalid assignment
    ╭─[expressions/unaryOperators/decrementOperator/decrementOperatorWithEnumTypeInvalidOperations.ts:13:1]
 13 │ // enum type expressions
 14 │ var ResultIsNumber5 = --(ENUM["A"] + ENUM.B);
    ·                          ─────────┬────────
    ·                                   ╰── Cannot assign to this expression
 15 │ var ResultIsNumber6 = (ENUM.A + ENUM["B"])--;
    ╰────

  × Invalid assignment
    ╭─[expressions/unaryOperators/decrementOperator/decrementOperatorWithNumberTypeInvalidOperations.ts:21:1]
 21 │ // number type literal
 22 │ var ResultIsNumber3 = --1;
    ·                         ┬
    ·                         ╰── Cannot assign to this expression
 23 │ var ResultIsNumber4 = --{ x: 1, y: 2};
    ╰────

  × Invalid assignment
    ╭─[expressions/unaryOperators/decrementOperator/decrementOperatorWithUnsupportedBooleanType.ts:21:1]
 21 │ // boolean type literal
 22 │ var ResultIsNumber3 = --true;
    ·                         ──┬─
    ·                           ╰── Cannot assign to this expression
 23 │ var ResultIsNumber4 = --{ x: true, y: false };
    ╰────

  × Invalid assignment
    ╭─[expressions/unaryOperators/decrementOperator/decrementOperatorWithUnsupportedStringType.ts:24:1]
 24 │ // string type literal
 25 │ var ResultIsNumber5 = --"";
    ·                         ─┬
    ·                          ╰── Cannot assign to this expression
 26 │ var ResultIsNumber6 = --{ x: "", y: "" };
    ╰────

  × Automatic Semicolon Insertion
   ╭─[expressions/unaryOperators/deleteOperator/deleteOperatorInvalidOperations.ts:4:1]
 4 │ // operand before delete operator
 5 │ var BOOLEAN1 = ANY delete ;     //expect error
   ·                   ┬
   ·                   ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 6 │ 
   ╰────
  help: Try insert a semicolon here

  × Invalid assignment
    ╭─[expressions/unaryOperators/incrementOperator/incrementOperatorWithAnyOtherTypeInvalidOperations.ts:36:1]
 36 │ // any type literal
 37 │ var ResultIsNumber11 = ++{};
    ·                          ─┬
    ·                           ╰── Cannot assign to this expression
 38 │ var ResultIsNumber12 = ++null;
    ╰────

  × Invalid assignment
    ╭─[expressions/unaryOperators/incrementOperator/incrementOperatorWithEnumTypeInvalidOperations.ts:13:1]
 13 │ // enum type expressions
 14 │ var ResultIsNumber5 = ++(ENUM[1] + ENUM[2]);
    ·                          ────────┬────────
    ·                                  ╰── Cannot assign to this expression
 15 │ var ResultIsNumber6 = (ENUM[1] + ENUM[2])++;
    ╰────

  × Invalid assignment
    ╭─[expressions/unaryOperators/incrementOperator/incrementOperatorWithNumberTypeInvalidOperations.ts:21:1]
 21 │ // number type literal
 22 │ var ResultIsNumber3 = ++1;
    ·                         ┬
    ·                         ╰── Cannot assign to this expression
 23 │ var ResultIsNumber4 = ++{ x: 1, y: 2};
    ╰────

  × Invalid assignment
    ╭─[expressions/unaryOperators/incrementOperator/incrementOperatorWithUnsupportedBooleanType.ts:21:1]
 21 │ // boolean type literal
 22 │ var ResultIsNumber3 = ++true;
    ·                         ──┬─
    ·                           ╰── Cannot assign to this expression
 23 │ var ResultIsNumber4 = ++{ x: true, y: false };
    ╰────

  × Invalid assignment
    ╭─[expressions/unaryOperators/incrementOperator/incrementOperatorWithUnsupportedStringType.ts:24:1]
 24 │ // string type literal
 25 │ var ResultIsNumber5 = ++"";
    ·                         ─┬
    ·                          ╰── Cannot assign to this expression
 26 │ var ResultIsNumber6 = ++{ x: "", y: "" };
    ╰────

  × Unexpected token
    ╭─[expressions/unaryOperators/logicalNotOperator/logicalNotOperatorInvalidOperations.ts:10:1]
 10 │ // miss an operand
 11 │ var BOOLEAN3 =!;
    ·                ─
    ╰────

  × Unexpected token
   ╭─[expressions/unaryOperators/negateOperator/negateOperatorInvalidOperations.ts:3:1]
 3 │ // operand before -
 4 │ var NUMBER1 = var NUMBER-;  //expect error
   ·               ───
 5 │ 
   ╰────

  × Unexpected token
   ╭─[expressions/unaryOperators/plusOperator/plusOperatorInvalidOperations.ts:4:1]
 4 │ // operand before +
 5 │ var result1 = b+;   //expect error
   ·                 ─
 6 │ 
   ╰────

  × Automatic Semicolon Insertion
   ╭─[expressions/unaryOperators/typeofOperator/typeofOperatorInvalidOperations.ts:3:1]
 3 │ // opreand before typeof
 4 │ var ANY = ANY typeof ;    //expect error
   ·              ┬
   ·              ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 5 │ 
   ╰────
  help: Try insert a semicolon here

  × Automatic Semicolon Insertion
   ╭─[expressions/unaryOperators/voidOperator/voidOperatorInvalidOperations.ts:3:1]
 3 │ // operand before void
 4 │ var ANY = ANY void ;    //expect error
   ·              ┬
   ·              ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 5 │ 
   ╰────
  help: Try insert a semicolon here

  × Unexpected token
   ╭─[externalModules/exportNonInitializedVariablesAMD.ts:2:1]
 2 │ 
 3 │ var;
   ·    ─
 4 │ let;
   ╰────

  × Unexpected token
   ╭─[externalModules/exportNonInitializedVariablesCommonJS.ts:2:1]
 2 │ 
 3 │ var;
   ·    ─
 4 │ let;
   ╰────

  × Unexpected token
   ╭─[externalModules/exportNonInitializedVariablesES6.ts:2:1]
 2 │ 
 3 │ var;
   ·    ─
 4 │ let;
   ╰────

  × Unexpected token
   ╭─[externalModules/exportNonInitializedVariablesSystem.ts:2:1]
 2 │ 
 3 │ var;
   ·    ─
 4 │ let;
   ╰────

  × Unexpected token
   ╭─[externalModules/exportNonInitializedVariablesUMD.ts:2:1]
 2 │ 
 3 │ var;
   ·    ─
 4 │ let;
   ╰────

  × Unexpected token
   ╭─[externalModules/importNonStringLiteral.ts:3:1]
 3 │ var x = "filename";
 4 │ import foo = require(x); // invalid
   ·                      ─
   ╰────

  × Expect token
    ╭─[externalModules/topLevelAwaitErrors.1.ts:9:1]
  9 │ await (1,);
 10 │ await <number, string>(1);
    ·              ┬
    ·              ╰── Expect `>` here, but found `,`
 11 │ 
    ╰────

  × The keyword '"await"' is reserved
   ╭─[externalModules/topLevelAwaitErrors.12.ts:4:1]
 4 │ export {};
 5 │ declare namespace foo { const await: any; }
   ·                               ─────
 6 │ 
   ╰────

  × The keyword '"await"' is reserved
   ╭─[externalModules/topLevelAwaitErrors.12.ts:7:1]
 7 │ // await disallowed in import=namespace when in a module
 8 │ import await = foo.await;
   ·        ─────
   ╰────

  × The keyword '"await"' is reserved
   ╭─[externalModules/topLevelAwaitErrors.2.ts:6:1]
 6 │ // reparse variable name as await should fail
 7 │ var await = 1;
   ·     ─────
   ╰────

  × The keyword '"await"' is reserved
   ╭─[externalModules/topLevelAwaitErrors.3.ts:6:1]
 6 │ // reparse binding pattern as await should fail
 7 │ var {await} = {await:1};
   ·      ─────
   ╰────

  × The keyword '"await"' is reserved
   ╭─[externalModules/topLevelAwaitErrors.4.ts:6:1]
 6 │ // reparse binding pattern as await should fail
 7 │ var [await] = [1];
   ·      ─────
   ╰────

  × The keyword '"await"' is reserved
   ╭─[externalModules/topLevelAwaitErrors.5.ts:4:1]
 4 │ // await in exported class name should fail
 5 │ export class await {
   ·              ─────
 6 │ }
   ╰────

  × The keyword '"await"' is reserved
   ╭─[externalModules/topLevelAwaitErrors.6.ts:4:1]
 4 │ // await in exported function name should fail
 5 │ export function await() {
   ·                 ─────
 6 │ }
   ╰────

  × Expect token
    ╭─[externalModules/typeOnly/exportDeclaration_missingBraces.ts:13:1]
 13 │ namespace ns {
 14 │   export type T; // Normal parse error because there is no other 'T'
    ·                ┬
    ·                ╰── Expect `=` here, but found `;`
 15 │ }
    ╰────

  × Rest element must be last element
    ╭─[functions/functionOverloadErrorsSyntax.ts:8:1]
  8 │ //Function overload signature with rest param followed by non-optional parameter
  9 │ function fn5(x: string, ...y: any[], z: string);
    ·                         ─────┬─────
    ·                              ╰── Rest element must be last element
 10 │ function fn5() { }
    ╰────

  × Expect token
   ╭─[importAssertion/importAssertion4.ts:1:1]
 1 │ import * as f from "./first" assert
   ·                                    ▲
   ·                                    ╰── Expect `{` here, but found `EOF`
   ╰────

  × Expect token
   ╭─[importAssertion/importAssertion5.ts:1:1]
 1 │ import * as f from "./first" assert {
   ·                                      ▲
   ·                                      ╰── Expect `}` here, but found `EOF`
   ╰────

  × Automatic Semicolon Insertion
   ╭─[interfaces/interfaceDeclarations/interfacesWithPredefinedTypesAsNames.ts:4:1]
 4 │ interface boolean { }
 5 │ interface void {}
   ·          ┬
   ·          ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 6 │ interface unknown {}
   ╰────
  help: Try insert a semicolon here

  × Expect token
    ╭─[interfaces/interfacesExtendingClasses/interfaceExtendingClass2.ts:16:1]
 16 │         };
 17 │     }
    ·     ┬
    ·     ╰── Expect `}` here, but found `EOF`
    ╰────

  × Unexpected token
   ╭─[internalModules/exportDeclarations/NonInitializedExportInInternalModule.ts:2:1]
 2 │ module Inner {
 3 │     var;
   ·        ─
 4 │     let;
   ╰────

  × Unexpected token
   ╭─[jsdoc/jsdocDisallowedInTypescript.ts:3:1]
 3 │ // grammar error from checker
 4 │ var ara: Array.<number> = [1,2,3];
   ·                ─
 5 │ 
   ╰────

  × Unexpected token
   ╭─[jsdoc/jsdocParseErrorsInTypescript.ts:1:1]
 1 │ // parse error (blocks grammar errors from checker)
 2 │ function parse1(n: number=) { }
   ·                           ─
   ╰────

  × Illegal break statement
    ╭─[jsdoc/typedefOnStatements.ts:31:1]
 31 │ /** @typedef {{ j: string }} J */
 32 │ break;
    · ──────
 33 │ /** @typedef {{ k: string }} K */
    ╰────
  help: A `break` statement can only be used within an enclosing iteration or switch statement.

  × Illegal continue statement: no surrounding iteration statement
    ╭─[jsdoc/typedefOnStatements.ts:36:1]
 36 │ /** @typedef {{ l: string }} L */
 37 │ continue;
    · ─────────
 38 │ /** @typedef {{ m: string }} M */
    ╰────
  help: A `continue` statement can only be used within an enclosing `for`, `while` or `do while`

  × 'with' statements are not allowed
    ╭─[jsdoc/typedefOnStatements.ts:38:1]
 38 │ /** @typedef {{ m: string }} M */
 39 │ with (name) {
    · ────
 40 │ }
    ╰────

  × Unexpected token
    ╭─[jsx/checkJsxNamespaceNamesQuestionableForms.tsx:12:1]
 12 │ <a:b></a:b>;
 13 │ <b:c.x></b:c.x>;
    ·     ─
 14 │ <this:b></this:b>;
    ╰────

  × Expect token
   ╭─[jsx/jsxAndTypeAssertion.tsx:7:1]
 7 │ var x: any;
 8 │ x = <any> { test: <any></any> };
   ·                 ┬
   ·                 ╰── Expect `}` here, but found `:`
 9 │ 
   ╰────

  × Unexpected token
    ╭─[jsx/jsxEsprimaFbTestSuite.tsx:40:1]
 40 │ 
 41 │ <LeftRight left=<a /> right=<b>monkeys /> gorillas</b> />;
    ·                 ─
 42 │ 
    ╰────

  × TS18007: JSX expressions may not use the comma operator. Did you mean to write an array?
    ╭─[jsx/jsxParsingError1.tsx:13:1]
 13 │ const class2 = "bar";
 14 │ const elem = <div className={class1, class2}/>;
    ·                              ───────┬──────
    ·                                     ╰── JSX expressions may not use the comma operator. Did you mean to write an array?
    ╰────

  × Unexpected token
    ╭─[jsx/jsxUnclosedParserRecovery.ts:14:1]
 14 │     <
 15 │ </div>;
    ·  ─
 16 │ function noName() { }
    ╰────

  × Invalid characters after number
    ╭─[jsx/tsxAttributeInvalidNames.tsx:11:1]
 11 │ // Invalid names
 12 │ <test1 32data={32} />;
    ·          ──┬─
    ·            ╰── Invalid characters after number
 13 │ <test2 -data={32} />;
    ╰────

  × Invalid characters after number
    ╭─[jsx/tsxAttributeInvalidNames.tsx:11:1]
 11 │ // Invalid names
 12 │ <test1 32data={32} />;
    ·          ──┬─
    ·            ╰── Invalid characters after number
 13 │ <test2 -data={32} />;
    ╰────

  × Unexpected token
   ╭─[jsx/tsxErrorRecovery1.tsx:6:1]
 6 │ function foo() {
 7 │     var x = <div>  { </div>
   ·                       ─
 8 │ }
   ╰────

  × Expect token
    ╭─[jsx/tsxFragmentErrors.tsx:11:1]
 11 │ 
 12 │ <>hi</div> // Error
    ·       ─┬─
    ·        ╰── Expect `>` here, but found `Identifier`
 13 │ 
    ╰────

  × Expect token
    ╭─[jsx/tsxStatelessFunctionComponents1.tsx:46:1]
 46 │ let o = {
 47 │     prop1: true;
    ·                ┬
    ·                ╰── Expect `,` here, but found `;`
 48 │ }
    ╰────

  × Expect token
    ╭─[override/overrideKeywordOrder.ts:14:1]
 14 │   override async m1() {}
 15 │   async override m2() {} // error
    ·                  ─┬
    ·                   ╰── Expect `(` here, but found `Identifier`
 16 │ }
    ╰────

  × Expect token
   ╭─[parser/ecmascript5/Accessors/parserAccessors10.ts:2:1]
 2 │ var v = {
 3 │   public get foo() { }
   ·          ─┬─
   ·           ╰── Expect `,` here, but found `get`
 4 │ };
   ╰────

  × A 'get' accessor must not have any formal parameters.
   ╭─[parser/ecmascript5/Accessors/parserAccessors7.ts:1:1]
 1 │ // @target: es5
 2 │ var v = { get foo(v: number) { } };
   ·                  ─────┬─────
   ·                       ╰── A 'get' accessor must not have any formal parameters.
   ╰────

  × A 'set' accessor must have exactly one parameter.
   ╭─[parser/ecmascript5/Accessors/parserAccessors8.ts:1:1]
 1 │ // @target: es5
 2 │ var v = { set foo() { } }
   ·                  ─┬
   ·                   ╰── A 'set' accessor must have exactly one parameter.
   ╰────

  × A 'set' accessor must have exactly one parameter.
   ╭─[parser/ecmascript5/Accessors/parserAccessors9.ts:1:1]
 1 │ // @target: es5
 2 │ var v = { set foo(a, b) { } }
   ·                  ───┬──
   ·                     ╰── A 'set' accessor must have exactly one parameter.
   ╰────

  × Expect token
   ╭─[parser/ecmascript5/ArrowFunctionExpressions/parserArrowFunctionExpression1.ts:1:1]
 1 │ var v = (public x: string) => { };
   ·                 ┬
   ·                 ╰── Expect `,` here, but found `Identifier`
   ╰────

  × Automatic Semicolon Insertion
   ╭─[parser/ecmascript5/ArrowFunctionExpressions/parserArrowFunctionExpression2.ts:1:1]
 1 │ a = () => { } || a
   ·              ┬
   ·              ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
   ╰────
  help: Try insert a semicolon here

  × Expect token
   ╭─[parser/ecmascript5/ArrowFunctionExpressions/parserArrowFunctionExpression3.ts:1:1]
 1 │ a = (() => { } || a)
   ·                ─┬
   ·                 ╰── Expect `,` here, but found `||`
   ╰────

  × Automatic Semicolon Insertion
   ╭─[parser/ecmascript5/ConstructorDeclarations/parserConstructorDeclaration3.ts:1:1]
 1 │ class C {
 2 │   export constructor() { }
   ·         ┬
   ·         ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 3 │ }
   ╰────
  help: Try insert a semicolon here

  × Classes can't have a field named 'constructor'
   ╭─[parser/ecmascript5/ConstructorDeclarations/parserConstructorDeclaration8.ts:2:1]
 2 │   // Not a constructor
 3 │   public constructor;
   ·          ─────┬─────
   ·               ╰── Classes can't have a field named 'constructor'
 4 │ }
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/EnumDeclarations/parserEnum4.ts:3:1]
 3 │     export enum SignatureFlags {
 4 │         ,
   ·         ─
 5 │     }
   ╰────

  × Expect token
   ╭─[parser/ecmascript5/EnumDeclarations/parserEnum5.ts:1:1]
 1 │ enum E2 { a, }
 2 │ enum E3 { a: 1, }
   ·            ┬
   ·            ╰── Expect `,` here, but found `:`
 3 │ enum E1 { a, b: 1, c, d: 2 = 3 }
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/EnumDeclarations/parserEnumDeclaration4.ts:1:1]
 1 │ enum void {
   ·      ────
 2 │ }
   ╰────

  × Expect token
   ╭─[parser/ecmascript5/ErrorRecovery/AccessibilityAfterStatic/parserAccessibilityAfterStatic6.ts:2:1]
 2 │ {
 3 │ static public
   ·             ┬
   ·             ╰── Expect `}` here, but found `EOF`
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/ErrorRecovery/ArgumentLists/parserErrorRecovery_ArgumentList1.ts:2:1]
 2 │    bar(
 3 │    return x;
   ·    ──────
 4 │ }
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/ErrorRecovery/ArgumentLists/parserErrorRecovery_ArgumentList2.ts:1:1]
 1 │ function foo() {
 2 │    bar(;
   ·        ─
 3 │ }
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/ErrorRecovery/ArgumentLists/parserErrorRecovery_ArgumentList3.ts:2:1]
 2 │    bar(a,
 3 │    return;
   ·    ──────
 4 │ }
   ╰────

  × Expect token
   ╭─[parser/ecmascript5/ErrorRecovery/ArgumentLists/parserErrorRecovery_ArgumentList4.ts:2:1]
 2 │    bar(a,b
 3 │    return;
   ·    ───┬──
   ·       ╰── Expect `,` here, but found `return`
 4 │ }
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/ErrorRecovery/ArgumentLists/parserErrorRecovery_ArgumentList6.ts:1:1]
 1 │ Foo(,
   ·     ─
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/ErrorRecovery/ArgumentLists/parserErrorRecovery_ArgumentList7.ts:1:1]
 1 │ Foo(a,,
   ·       ─
   ╰────

  × Expect token
   ╭─[parser/ecmascript5/ErrorRecovery/ArrayLiteralExpressions/parserErrorRecoveryArrayLiteralExpression1.ts:1:1]
 1 │ var v = [1, 2, 3
 2 │ 4, 5, 6, 7];
   · ┬
   · ╰── Expect `,` here, but found `decimal`
   ╰────

  × Expect token
   ╭─[parser/ecmascript5/ErrorRecovery/ArrayLiteralExpressions/parserErrorRecoveryArrayLiteralExpression2.ts:2:1]
 2 │  
 3 │  .7042760848999023, 1.1955541372299194, 0.19600726664066315, -0.7120069861412048];
   ·  ────────┬────────
   ·          ╰── Expect `,` here, but found `float`
   ╰────

  × Expect token
   ╭─[parser/ecmascript5/ErrorRecovery/ArrayLiteralExpressions/parserErrorRecoveryArrayLiteralExpression3.ts:1:1]
 1 │ var texCoords = [2, 2, 0.5000001192092895, 0.8749999 ; 403953552, 0.5000001192092895, 0.8749999403953552];
   ·                                                      ┬
   ·                                                      ╰── Expect `,` here, but found `;`
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/ErrorRecovery/ArrowFunctions/ArrowFunction1.ts:1:1]
 1 │ var v = (a: ) => {
   ·             ─
 2 │    
   ╰────

  × Automatic Semicolon Insertion
   ╭─[parser/ecmascript5/ErrorRecovery/ArrowFunctions/ArrowFunction3.ts:1:1]
 1 │ var v = (a): => {
   ·            ▲
   ·            ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 2 │    
   ╰────
  help: Try insert a semicolon here

  × Unexpected token
   ╭─[parser/ecmascript5/ErrorRecovery/ArrowFunctions/parserX_ArrowFunction1.ts:1:1]
 1 │ var v = (a: ) => {
   ·             ─
 2 │    
   ╰────

  × Automatic Semicolon Insertion
   ╭─[parser/ecmascript5/ErrorRecovery/ArrowFunctions/parserX_ArrowFunction3.ts:1:1]
 1 │ var v = (a): => {
   ·            ▲
   ·            ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 2 │    
   ╰────
  help: Try insert a semicolon here

  × Unexpected token
   ╭─[parser/ecmascript5/ErrorRecovery/Blocks/parserErrorRecovery_Block1.ts:2:1]
 2 │     1 + 
 3 │     return;
   ·     ──────
 4 │ }
   ╰────

  × Invalid Character `'¬'`
   ╭─[parser/ecmascript5/ErrorRecovery/Blocks/parserErrorRecovery_Block2.ts:1:1]
 1 │ function f() {
 2 │     ¬
   ·     ┬
   ·     ╰── Invalid Character `¬`
 3 │     return;
   ╰────

  × Automatic Semicolon Insertion
   ╭─[parser/ecmascript5/ErrorRecovery/Blocks/parserErrorRecovery_Block3.ts:3:1]
 3 │ 
 4 │     private b(): boolean {
   ·            ┬
   ·            ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 5 │     }
   ╰────
  help: Try insert a semicolon here

  × Automatic Semicolon Insertion
   ╭─[parser/ecmascript5/ErrorRecovery/ClassElements/parserErrorRecovery_ClassElement1.ts:4:1]
 4 │ // this as a source unit element.
 5 │ class D {
   ·      ┬
   ·      ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 6 │ }
   ╰────
  help: Try insert a semicolon here

  × Automatic Semicolon Insertion
   ╭─[parser/ecmascript5/ErrorRecovery/ClassElements/parserErrorRecovery_ClassElement2.ts:3:1]
 3 │ 
 4 │   enum E {
   ·       ┬
   ·       ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 5 │   }
   ╰────
  help: Try insert a semicolon here

  × Invalid Character `'¬'`
   ╭─[parser/ecmascript5/ErrorRecovery/ClassElements/parserErrorRecovery_ClassElement3.ts:1:1]
 1 │ module M {
 2 │    ¬
   ·    ┬
   ·    ╰── Invalid Character `¬`
 3 │    class C {
   ╰────

  × Empty parenthesized expression
   ╭─[parser/ecmascript5/ErrorRecovery/Expressions/parserErrorRecovery_Expression1.ts:1:1]
 1 │ var v = ()({});
   ·          ▲
   ·          ╰── Expected an expression here
   ╰────

  × Expect token
   ╭─[parser/ecmascript5/ErrorRecovery/ExtendsOrImplementsClauses/parserErrorRecovery_ExtendsOrImplementsClause1.ts:1:1]
 1 │ class C extends {
 2 │ }
   · ┬
   · ╰── Expect `{` here, but found `EOF`
   ╰────

  × Expect token
   ╭─[parser/ecmascript5/ErrorRecovery/ExtendsOrImplementsClauses/parserErrorRecovery_ExtendsOrImplementsClause2.ts:1:1]
 1 │ class C extends A, {
 2 │ }
   · ┬
   · ╰── Expect `{` here, but found `EOF`
   ╰────

  × Expect token
   ╭─[parser/ecmascript5/ErrorRecovery/ExtendsOrImplementsClauses/parserErrorRecovery_ExtendsOrImplementsClause3.ts:1:1]
 1 │ class C extends implements A {
   ·                            ┬
   ·                            ╰── Expect `{` here, but found `Identifier`
 2 │ }
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/ErrorRecovery/ExtendsOrImplementsClauses/parserErrorRecovery_ExtendsOrImplementsClause4.ts:1:1]
 1 │ class C extends A implements {
   ·                              ─
 2 │ }
   ╰────

  × Expect token
   ╭─[parser/ecmascript5/ErrorRecovery/ExtendsOrImplementsClauses/parserErrorRecovery_ExtendsOrImplementsClause5.ts:1:1]
 1 │ class C extends A, implements B, {
   ·                               ┬
   ·                               ╰── Expect `{` here, but found `Identifier`
 2 │ }
   ╰────

  × Expect token
   ╭─[parser/ecmascript5/ErrorRecovery/ExtendsOrImplementsClauses/parserErrorRecovery_ExtendsOrImplementsClause6.ts:1:1]
 1 │ interface I extends { }
   ·                       ┬
   ·                       ╰── Expect `{` here, but found `EOF`
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/ErrorRecovery/IfStatements/parserErrorRecoveryIfStatement1.ts:3:1]
 3 │     if (
 4 │   }
   ·   ─
 5 │   f2() {
   ╰────

  × Expect token
   ╭─[parser/ecmascript5/ErrorRecovery/IfStatements/parserErrorRecoveryIfStatement2.ts:3:1]
 3 │     if (a
 4 │   }
   ·   ┬
   ·   ╰── Expect `)` here, but found `}`
 5 │   f2() {
   ╰────

  × Expect token
   ╭─[parser/ecmascript5/ErrorRecovery/IfStatements/parserErrorRecoveryIfStatement3.ts:3:1]
 3 │     if (a.b
 4 │   }
   ·   ┬
   ·   ╰── Expect `)` here, but found `}`
 5 │   f2() {
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/ErrorRecovery/IfStatements/parserErrorRecoveryIfStatement4.ts:3:1]
 3 │     if (a.b)
 4 │   }
   ·   ─
 5 │   f2() {
   ╰────

  × Automatic Semicolon Insertion
   ╭─[parser/ecmascript5/ErrorRecovery/IfStatements/parserErrorRecoveryIfStatement5.ts:4:1]
 4 │   }
 5 │   f2() {
   ·       ┬
   ·       ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 6 │   }
   ╰────
  help: Try insert a semicolon here

  × Automatic Semicolon Insertion
   ╭─[parser/ecmascript5/ErrorRecovery/IfStatements/parserErrorRecoveryIfStatement6.ts:4:1]
 4 │   }
 5 │   public f2() {
   ·         ┬
   ·         ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 6 │   }
   ╰────
  help: Try insert a semicolon here

  × Automatic Semicolon Insertion
    ╭─[parser/ecmascript5/ErrorRecovery/IncompleteMemberVariables/parserErrorRecovery_IncompleteMemberVariable2.ts:11:1]
 11 │ 
 12 │         public con:C "hello";
    ·                     ┬
    ·                     ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 13 │         // Constructor
    ╰────
  help: Try insert a semicolon here

  × Unexpected token
   ╭─[parser/ecmascript5/ErrorRecovery/LeftShifts/parserErrorRecovery_LeftShift1.ts:1:1]
 1 │ retValue = bfs.VARIABLES >> );
   ·                             ─
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/ErrorRecovery/ModuleElements/parserErrorRecovery_ModuleElement1.ts:1:1]
 1 │ return foo;
 2 │ }
   · ─
 3 │ return bar;
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/ErrorRecovery/ModuleElements/parserErrorRecovery_ModuleElement2.ts:6:1]
 6 │ 
 7 │ )
   · ─
 8 │ )
   ╰────

  × Expect token
   ╭─[parser/ecmascript5/ErrorRecovery/ObjectLiterals/parserErrorRecovery_ObjectLiteral1.ts:1:1]
 1 │ var v = { a: 1 b: 2 }
   ·                ┬
   ·                ╰── Expect `,` here, but found `Identifier`
   ╰────

  × Expect token
   ╭─[parser/ecmascript5/ErrorRecovery/ObjectLiterals/parserErrorRecovery_ObjectLiteral2.ts:1:1]
 1 │ var v = { a
 2 │ return;
   · ───┬──
   ·    ╰── Expect `,` here, but found `return`
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/ErrorRecovery/ObjectLiterals/parserErrorRecovery_ObjectLiteral3.ts:1:1]
 1 │ var v = { a: 
 2 │ return;
   · ──────
   ╰────

  × Expect token
   ╭─[parser/ecmascript5/ErrorRecovery/ObjectLiterals/parserErrorRecovery_ObjectLiteral4.ts:1:1]
 1 │ var v = { a: 1
 2 │ return;
   · ───┬──
   ·    ╰── Expect `,` here, but found `return`
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/ErrorRecovery/ObjectLiterals/parserErrorRecovery_ObjectLiteral5.ts:1:1]
 1 │ var v = { a: 1,
 2 │ return;
   ·       ─
   ╰────

  × Expect token
   ╭─[parser/ecmascript5/ErrorRecovery/ParameterLists/parserErrorRecovery_ParameterList1.ts:1:1]
 1 │ function f(a {
   ·              ┬
   ·              ╰── Expect `,` here, but found `{`
 2 │ }
   ╰────

  × Expect token
   ╭─[parser/ecmascript5/ErrorRecovery/ParameterLists/parserErrorRecovery_ParameterList2.ts:1:1]
 1 │ function f(a, {
 2 │ }
   · ┬
   · ╰── Expect `)` here, but found `EOF`
   ╰────

  × Invalid Character `'¬'`
   ╭─[parser/ecmascript5/ErrorRecovery/ParameterLists/parserErrorRecovery_ParameterList4.ts:1:1]
 1 │ function f(a,¬) {
   ·              ┬
   ·              ╰── Invalid Character `¬`
 2 │ }
   ╰────

  × Expect token
   ╭─[parser/ecmascript5/ErrorRecovery/ParameterLists/parserErrorRecovery_ParameterList5.ts:1:1]
 1 │ (a:number => { }
   ·           ─┬
   ·            ╰── Expect `,` here, but found `=>`
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/ErrorRecovery/SourceUnits/parserErrorRecovery_SourceUnit1.ts:2:1]
 2 │ }
 3 │ }
   · ─
 4 │ class D {
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/ErrorRecovery/SwitchStatements/parserErrorRecovery_SwitchStatement1.ts:3:1]
 3 │        1 + 
 4 │     case 2:
   ·     ────
 5 │        1 + 
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/ErrorRecovery/SwitchStatements/parserErrorRecovery_SwitchStatement2.ts:4:1]
 4 │ 
 5 │ class D {
   · ─────
 6 │ }
   ╰────

  × Invalid Unicode escape sequence
   ╭─[parser/ecmascript5/ErrorRecovery/TypeArgumentLists/TypeArgumentList1.ts:1:1]
 1 │ Foo<A,B,\ C>(4, 5, 6);
   ·          ┬
   ·          ╰── Invalid Unicode escape sequence
   ╰────

  × Invalid Unicode escape sequence
   ╭─[parser/ecmascript5/ErrorRecovery/TypeArgumentLists/parserX_TypeArgumentList1.ts:1:1]
 1 │ Foo<A,B,\ C>(4, 5, 6);
   ·          ┬
   ·          ╰── Invalid Unicode escape sequence
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/ErrorRecovery/VariableLists/parserErrorRecovery_VariableList1.ts:1:1]
 1 │ var a,
 2 │ return;
   · ──────
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/ErrorRecovery/VariableLists/parserInvalidIdentifiersInVariableStatements1.ts:1:1]
 1 │ var export;
   ·     ──────
 2 │ var foo;
   ╰────

  × Empty parenthesized expression
   ╭─[parser/ecmascript5/ErrorRecovery/parserEmptyParenthesizedExpression1.ts:1:1]
 1 │ function getObj() {
 2 │    ().toString();
   ·     ▲
   ·     ╰── Expected an expression here
 3 │ }
   ╰────

  × Expect token
   ╭─[parser/ecmascript5/ErrorRecovery/parserEqualsGreaterThanAfterFunction1.ts:1:1]
 1 │ function =>
   ·          ─┬
   ·           ╰── Expect `(` here, but found `=>`
   ╰────

  × Expect token
   ╭─[parser/ecmascript5/ErrorRecovery/parserEqualsGreaterThanAfterFunction2.ts:1:1]
 1 │ function (a => b;
   ·             ─┬
   ·              ╰── Expect `,` here, but found `=>`
   ╰────

  × Automatic Semicolon Insertion
   ╭─[parser/ecmascript5/ErrorRecovery/parserErrantAccessibilityModifierInModule1.ts:2:1]
 2 │     var x=10;  // variable local to this module body
 3 │     private y=x;  // property visible only in module
   ·            ┬
   ·            ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 4 │     export var z=y;  // property visible to any code
   ╰────
  help: Try insert a semicolon here

  × Automatic Semicolon Insertion
   ╭─[parser/ecmascript5/ErrorRecovery/parserErrantEqualsGreaterThanAfterFunction1.ts:1:1]
 1 │ function f() => 4;
   ·             ┬
   ·             ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
   ╰────
  help: Try insert a semicolon here

  × Automatic Semicolon Insertion
   ╭─[parser/ecmascript5/ErrorRecovery/parserErrantEqualsGreaterThanAfterFunction2.ts:1:1]
 1 │ function f(p: A) => p;
   ·                 ┬
   ·                 ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
   ╰────
  help: Try insert a semicolon here

  × A 'set' accessor must have exactly one parameter.
    ╭─[parser/ecmascript5/ErrorRecovery/parserErrantSemicolonInClass1.ts:14:1]
 14 │     }
 15 │     public set d() {
    ·                 ─┬
    ·                  ╰── A 'set' accessor must have exactly one parameter.
 16 │     }
    ╰────

  × Automatic Semicolon Insertion
   ╭─[parser/ecmascript5/ErrorRecovery/parserFuzz1.ts:1:1]
 1 │ cla <ss {
   ·        ┬
   ·        ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 2 │   _ static try
   ╰────
  help: Try insert a semicolon here

  × Unexpected token
   ╭─[parser/ecmascript5/ErrorRecovery/parserMissingLambdaOpenBrace1.ts:3:1]
 3 │         return fromDoWhile(test =>
 4 │             var index = 0;
   ·             ───
 5 │             return this.doWhile((item, i) => filter(item, i) ? test(item, index++) : true);
   ╰────

  × Automatic Semicolon Insertion
   ╭─[parser/ecmascript5/ErrorRecovery/parserPublicBreak1.ts:1:1]
 1 │ public break;
   ·       ┬
   ·       ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
   ╰────
  help: Try insert a semicolon here

  × Automatic Semicolon Insertion
   ╭─[parser/ecmascript5/ErrorRecovery/parserUnfinishedTypeNameBeforeKeyword1.ts:1:1]
 1 │ var x: TypeModule1.
 2 │ module TypeModule2 {
   ·       ┬
   ·       ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 3 │ }
   ╰────
  help: Try insert a semicolon here

  × Expect token
   ╭─[parser/ecmascript5/ErrorRecovery/parserUnterminatedGeneric1.ts:1:1]
 1 │  interface IQService {
 2 │         all(promises: IPromise < any > []): IPromise<
   ·                                                     ┬
   ·                                                     ╰── Expect `>` here, but found `EOF`
   ╰────

  × Automatic Semicolon Insertion
   ╭─[parser/ecmascript5/ErrorRecovery/parserUnterminatedGeneric2.ts:1:1]
 1 │ declare module ng {
 2 │     interfaceICompiledExpression {
   ·                                 ┬
   ·                                 ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 3 │         (context: any, locals?: any): any;
   ╰────
  help: Try insert a semicolon here

  × Unexpected token
   ╭─[parser/ecmascript5/ExportAssignments/parserExportAssignment3.ts:1:1]
 1 │ export =
   ·        ─
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/ExportAssignments/parserExportAssignment4.ts:1:1]
 1 │ export = ;
   ·          ─
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/Expressions/parseIncompleteBinaryExpression1.ts:1:1]
 1 │ var v = || b;
   ·         ──
   ╰────

  × Invalid assignment
   ╭─[parser/ecmascript5/Expressions/parserAssignmentExpression1.ts:1:1]
 1 │ (foo()) = bar;
   ·  ──┬──
   ·    ╰── Cannot assign to this expression
   ╰────

  × Automatic Semicolon Insertion
   ╭─[parser/ecmascript5/Expressions/parserMemberAccessAfterPostfixExpression1.ts:1:1]
 1 │ // @lib: es5
 2 │ a--.toString()
   ·    ▲
   ·    ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
   ╰────
  help: Try insert a semicolon here

  × Automatic Semicolon Insertion
   ╭─[parser/ecmascript5/Expressions/parserPostfixPostfixExpression1.ts:1:1]
 1 │ a++ ++;
   ·    ┬
   ·    ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
   ╰────
  help: Try insert a semicolon here

  × Automatic Semicolon Insertion
   ╭─[parser/ecmascript5/Expressions/parserPostfixUnaryExpression1.ts:1:1]
 1 │ foo ++ ++;
   ·       ┬
   ·       ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
   ╰────
  help: Try insert a semicolon here

  × Unexpected token
   ╭─[parser/ecmascript5/Expressions/parserTypeAssertionInObjectCreationExpression1.ts:1:1]
 1 │ new <T>Foo()
   ·     ─
   ╰────

  × Invalid assignment
   ╭─[parser/ecmascript5/Expressions/parserUnaryExpression1.ts:1:1]
 1 │ ++this;
   ·   ──┬─
   ·     ╰── Cannot assign to this expression
   ╰────

  × Invalid assignment
   ╭─[parser/ecmascript5/Expressions/parserUnaryExpression2.ts:1:1]
 1 │ ++function(e) { }
   ·   ───────┬───────
   ·          ╰── Cannot assign to this expression
   ╰────

  × Invalid assignment
   ╭─[parser/ecmascript5/Expressions/parserUnaryExpression3.ts:1:1]
 1 │ ++[0];
   ·   ─┬─
   ·    ╰── Cannot assign to this expression
   ╰────

  × Invalid assignment
   ╭─[parser/ecmascript5/Expressions/parserUnaryExpression4.ts:1:1]
 1 │ ++{};
   ·   ─┬
   ·    ╰── Cannot assign to this expression
   ╰────

  × Invalid assignment
   ╭─[parser/ecmascript5/Expressions/parserUnaryExpression5.ts:1:1]
 1 │ ++ delete foo.bar
   ·    ───────┬──────
   ·           ╰── Cannot assign to this expression
   ╰────

  × Invalid assignment
   ╭─[parser/ecmascript5/Expressions/parserUnaryExpression7.ts:1:1]
 1 │ ++ new Foo();
   ·    ────┬────
   ·        ╰── Cannot assign to this expression
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/Fuzz/parser0_004152.ts:1:1]
 1 │ export class Game {
 2 │     private position = new DisplayPosition([), 3, 3, 3, 3, 3, 0, 3, 3, 3, 3, 3, 3, 0], NoMove, 0);
   ·                                             ─
 3 │     private prevConfig: SeedCoords[][];
   ╰────

  × Invalid assignment
   ╭─[parser/ecmascript5/Generics/parserGreaterThanTokenAmbiguity11.ts:1:1]
 1 │ 1 >>= 2;
   · ┬
   · ╰── Cannot assign to this expression
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/Generics/parserGreaterThanTokenAmbiguity12.ts:1:1]
 1 │ 1 >> = 2;
   ·      ─
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/Generics/parserGreaterThanTokenAmbiguity13.ts:1:1]
 1 │ 1 >>/**/= 2;
   ·         ─
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/Generics/parserGreaterThanTokenAmbiguity14.ts:1:1]
 1 │ 1 >>
 2 │ = 2;
   · ─
   ╰────

  × Invalid assignment
   ╭─[parser/ecmascript5/Generics/parserGreaterThanTokenAmbiguity15.ts:1:1]
 1 │ 1 
   · ┬
   · ╰── Cannot assign to this expression
 2 │ // before
   ╰────

  × Invalid assignment
   ╭─[parser/ecmascript5/Generics/parserGreaterThanTokenAmbiguity16.ts:1:1]
 1 │ 1 >>>= 2;
   · ┬
   · ╰── Cannot assign to this expression
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/Generics/parserGreaterThanTokenAmbiguity17.ts:1:1]
 1 │ 1 >>> = 2;
   ·       ─
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/Generics/parserGreaterThanTokenAmbiguity18.ts:1:1]
 1 │ 1 >>>/**/= 2;
   ·          ─
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/Generics/parserGreaterThanTokenAmbiguity19.ts:1:1]
 1 │ 1 >>>
 2 │ = 2;
   · ─
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/Generics/parserGreaterThanTokenAmbiguity2.ts:1:1]
 1 │ 1 > > 2;
   ·     ─
   ╰────

  × Invalid assignment
   ╭─[parser/ecmascript5/Generics/parserGreaterThanTokenAmbiguity20.ts:1:1]
 1 │ 1
   · ┬
   · ╰── Cannot assign to this expression
 2 │ // Before
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/Generics/parserGreaterThanTokenAmbiguity3.ts:1:1]
 1 │ 1 >/**/> 2;
   ·        ─
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/Generics/parserGreaterThanTokenAmbiguity4.ts:1:1]
 1 │ 1 >
 2 │ > 2;
   · ─
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/Generics/parserGreaterThanTokenAmbiguity7.ts:1:1]
 1 │ 1 >> > 2;
   ·      ─
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/Generics/parserGreaterThanTokenAmbiguity8.ts:1:1]
 1 │ 1 >>/**/> 2;
   ·         ─
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/Generics/parserGreaterThanTokenAmbiguity9.ts:1:1]
 1 │ 1 >>
 2 │ > 2;
   · ─
   ╰────

  × Automatic Semicolon Insertion
   ╭─[parser/ecmascript5/IndexMemberDeclarations/parserIndexMemberDeclaration9.ts:1:1]
 1 │ class C {
 2 │    export [x: string]: string;
   ·          ┬
   ·          ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 3 │ }
   ╰────
  help: Try insert a semicolon here

  × Unexpected token
   ╭─[parser/ecmascript5/IndexSignatures/parserIndexSignature1.ts:1:1]
 1 │ interface I {
 2 │   [...a]
   ·    ───
 3 │ }
   ╰────

  × Expect token
   ╭─[parser/ecmascript5/IndexSignatures/parserIndexSignature10.ts:1:1]
 1 │ interface I {
 2 │    [a, b]: number
   ·      ┬
   ·      ╰── Expect `]` here, but found `,`
 3 │ }
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/IndexSignatures/parserIndexSignature11.ts:2:1]
 2 │         [p]; // Used to be indexer, now it is a computed property
 3 │         [p1: string];
   ·                     ─
 4 │         [p2: string, p3: number];
   ╰────

  × Expect token
   ╭─[parser/ecmascript5/IndexSignatures/parserIndexSignature2.ts:1:1]
 1 │ interface I {
 2 │   [public a]
   ·           ┬
   ·           ╰── Expect `]` here, but found `Identifier`
 3 │ }
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/IndexSignatures/parserIndexSignature3.ts:1:1]
 1 │ interface I {
 2 │   [a?]
   ·      ─
 3 │ }
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/IndexSignatures/parserIndexSignature6.ts:2:1]
 2 │   [a:boolean]
 3 │ }
   · ─
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/IndexSignatures/parserIndexSignature7.ts:2:1]
 2 │   [a:string]
 3 │ }
   · ─
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/IndexSignatures/parserIndexSignature8.ts:1:1]
 1 │ var foo: { [index: any]; }; // expect an error here
   ·                        ─
 2 │ var foo2: { [index: RegExp]; }; // expect an error here
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/IndexSignatures/parserIndexSignature9.ts:1:1]
 1 │ interface I {
 2 │    []: number
   ·     ─
 3 │ }
   ╰────

  × Automatic Semicolon Insertion
   ╭─[parser/ecmascript5/MemberAccessorDeclarations/parserMemberAccessorDeclaration10.ts:2:1]
 2 │ class C {
 3 │     export get Foo() { }
   ·           ┬
   ·           ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 4 │ }
   ╰────
  help: Try insert a semicolon here

  × A 'get' accessor must not have any formal parameters.
   ╭─[parser/ecmascript5/MemberAccessorDeclarations/parserMemberAccessorDeclaration12.ts:2:1]
 2 │ class C {
 3 │    get Foo(a: number) { }
   ·           ─────┬─────
   ·                ╰── A 'get' accessor must not have any formal parameters.
 4 │ }
   ╰────

  × A 'set' accessor must have exactly one parameter.
   ╭─[parser/ecmascript5/MemberAccessorDeclarations/parserMemberAccessorDeclaration13.ts:2:1]
 2 │ class C {
 3 │    set Foo() { }
   ·           ─┬
   ·            ╰── A 'set' accessor must have exactly one parameter.
 4 │ }
   ╰────

  × A 'set' accessor must have exactly one parameter.
   ╭─[parser/ecmascript5/MemberAccessorDeclarations/parserMemberAccessorDeclaration14.ts:2:1]
 2 │ class C {
 3 │    set Foo(a: number, b: number) { }
   ·           ───────────┬──────────
   ·                      ╰── A 'set' accessor must have exactly one parameter.
 4 │ }
   ╰────

  × A 'set' accessor function argument must not be a rest parameter
   ╭─[parser/ecmascript5/MemberAccessorDeclarations/parserMemberAccessorDeclaration18.ts:2:1]
 2 │ class C {
 3 │    set Foo(...a) { }
   ·            ──┬─
   ·              ╰── A 'set' accessor function argument must not be a rest parameter
 4 │ }
   ╰────

  × Automatic Semicolon Insertion
   ╭─[parser/ecmascript5/MemberFunctionDeclarations/parserMemberFunctionDeclaration4.ts:1:1]
 1 │ class C {
 2 │     export Foo() { }
   ·           ┬
   ·           ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 3 │ }
   ╰────
  help: Try insert a semicolon here

  × Automatic Semicolon Insertion
   ╭─[parser/ecmascript5/MemberVariableDeclarations/parserMemberVariableDeclaration4.ts:1:1]
 1 │ class C {
 2 │   export Foo;
   ·         ┬
   ·         ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 3 │ }
   ╰────
  help: Try insert a semicolon here

  × Unexpected token
   ╭─[parser/ecmascript5/MissingTokens/parserMissingToken1.ts:1:1]
 1 │ a / finally
   ·     ───────
   ╰────

  × Unterminated regular expression
   ╭─[parser/ecmascript5/MissingTokens/parserMissingToken2.ts:1:1]
 1 │ / b;
   · ──┬─
   ·   ╰── Unterminated regular expression
   ╰────

  × Expect token
   ╭─[parser/ecmascript5/ObjectTypes/parserObjectType5.ts:2:1]
 2 │    A: B
 3 │    <T>;
   ·       ┬
   ·       ╰── Expect `(` here, but found `;`
 4 │ };
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/ObjectTypes/parserObjectType6.ts:2:1]
 2 │    a: B
 3 │    [];
   ·     ─
 4 │ };
   ╰────

  × Rest element must be last element
   ╭─[parser/ecmascript5/ParameterLists/parserParameterList1.ts:1:1]
 1 │ class C {
 2 │    F(...A, B) { }
   ·      ──┬─
   ·        ╰── Rest element must be last element
 3 │ }
   ╰────

  × Expect token
   ╭─[parser/ecmascript5/ParameterLists/parserParameterList5.ts:1:1]
 1 │ function A(): (public B) => C {
   ·                       ┬
   ·                       ╰── Expect `)` here, but found `Identifier`
 2 │ }
   ╰────

  × Expect token
   ╭─[parser/ecmascript5/ParameterLists/parserParameterList6.ts:1:1]
 1 │ class C {
 2 │   constructor(C: (public A) => any) {
   ·                          ┬
   ·                          ╰── Expect `)` here, but found `Identifier`
 3 │   }
   ╰────

  × Automatic Semicolon Insertion
      ╭─[parser/ecmascript5/RealWorld/parserharness.ts:1430:1]
 1430 │         // Regex for parsing options in the format "@Alpha: Value of any sort"
 1431 │         private optionRegex = /^[\/]{2}\s*@(\w+):\s*(\S*)/gm;  // multiple matches on multiple lines
      ·                ┬
      ·                ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 1432 │ 
      ╰────
  help: Try insert a semicolon here

  × Unexpected token
   ╭─[parser/ecmascript5/RegressionTests/parser509630.ts:2:1]
 2 │     public examples = [ // typing here
 3 │ }
   · ─
 4 │ class Any extends Type {
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/RegressionTests/parser509667.ts:3:1]
 3 │       if (this.
 4 │    }
   ·    ─
 5 │ 
   ╰────

  × Expect token
   ╭─[parser/ecmascript5/RegressionTests/parser509669.ts:1:1]
 1 │ function foo():any {
 2 │  return ():void {};
   ·                 ┬
   ·                 ╰── Expect `=>` here, but found `{`
 3 │ }
   ╰────

  × Expect token
   ╭─[parser/ecmascript5/RegressionTests/parser512084.ts:1:1]
 1 │ class foo {
   ·            ▲
   ·            ╰── Expect `}` here, but found `EOF`
   ╰────

  × Expect token
   ╭─[parser/ecmascript5/RegressionTests/parser512097.ts:1:1]
 1 │ var tt = { aa; }
   ·              ┬
   ·              ╰── Expect `,` here, but found `;`
 2 │ 
   ╰────

  × Automatic Semicolon Insertion
   ╭─[parser/ecmascript5/RegressionTests/parser512325.ts:1:1]
 1 │ var tt = (a, (b, c)) => a+b+c;
   ·                     ┬
   ·                     ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
   ╰────
  help: Try insert a semicolon here

  × Automatic Semicolon Insertion
   ╭─[parser/ecmascript5/RegressionTests/parser519458.ts:1:1]
 1 │ import rect = module("rect"); var bar = new rect.Rect();
   ·                     ▲
   ·                     ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
   ╰────
  help: Try insert a semicolon here

  × Automatic Semicolon Insertion
   ╭─[parser/ecmascript5/RegressionTests/parser521128.ts:1:1]
 1 │ module.module { }
   ·              ┬
   ·              ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
   ╰────
  help: Try insert a semicolon here

  × Empty parenthesized expression
   ╭─[parser/ecmascript5/RegressionTests/parser566700.ts:1:1]
 1 │ var v = ()({});
   ·          ▲
   ·          ╰── Expected an expression here
   ╰────

  × Automatic Semicolon Insertion
   ╭─[parser/ecmascript5/RegressionTests/parser585151.ts:1:1]
 1 │ class Foo2 {
 2 │   var icecream = "chocolate";
   ·      ┬
   ·      ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 3 │ }
   ╰────
  help: Try insert a semicolon here

  × The keyword '"static"' is reserved
   ╭─[parser/ecmascript5/RegressionTests/parser642331.ts:1:1]
 1 │ class test {
 2 │     constructor (static) { }
   ·                  ──────
 3 │ }
   ╰────

  × The keyword '"static"' is reserved
   ╭─[parser/ecmascript5/RegressionTests/parser642331_1.ts:3:1]
 3 │ class test {
 4 │     constructor (static) { }
   ·                  ──────
 5 │ }
   ╰────

  × Automatic Semicolon Insertion
   ╭─[parser/ecmascript5/RegressionTests/parser645086_1.ts:1:1]
 1 │ var v = /[]/]/
   ·             ▲
   ·             ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
   ╰────
  help: Try insert a semicolon here

  × Automatic Semicolon Insertion
   ╭─[parser/ecmascript5/RegressionTests/parser645086_2.ts:1:1]
 1 │ var v = /[^]/]/
   ·              ▲
   ·              ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
   ╰────
  help: Try insert a semicolon here

  × Unexpected flag 'a' in regular expression literal
   ╭─[parser/ecmascript5/RegularExpressions/parserRegularExpressionDivideAmbiguity3.ts:1:1]
 1 │ if (1) /regexp/a.foo();
   ·                 ▲
   ·                 ╰── Unexpected flag a in regular expression literal
   ╰────

  × Unterminated regular expression
   ╭─[parser/ecmascript5/RegularExpressions/parserRegularExpressionDivideAmbiguity4.ts:1:1]
 1 │ foo(/notregexp);
   ·     ──────┬─────
   ·           ╰── Unterminated regular expression
   ╰────

  × Automatic Semicolon Insertion
   ╭─[parser/ecmascript5/RegularExpressions/parserRegularExpressionDivideAmbiguity7.ts:1:1]
 1 │ (a/8
 2 │  ){}
   ·   ▲
   ·   ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
   ╰────
  help: Try insert a semicolon here

  × Invalid Unicode escape sequence
   ╭─[parser/ecmascript5/SkippedTokens/parserSkippedTokens1.ts:1:1]
 1 │ \
   ╰────

  × Invalid Unicode escape sequence
   ╭─[parser/ecmascript5/SkippedTokens/parserSkippedTokens10.ts:1:1]
 1 │ \
   ·  ┬
   ·  ╰── Invalid Unicode escape sequence
 2 │ \
 3 │ /*existing trivia*/ ;
   ╰────

  × Invalid Unicode escape sequence
   ╭─[parser/ecmascript5/SkippedTokens/parserSkippedTokens10.ts:1:1]
 1 │ \
 2 │ \
   ·  ┬
   ·  ╰── Invalid Unicode escape sequence
 3 │ /*existing trivia*/ ;
   ╰────

  × Invalid Unicode escape sequence
   ╭─[parser/ecmascript5/SkippedTokens/parserSkippedTokens11.ts:1:1]
 1 │ ; \ \ \ 
   ·    ┬
   ·    ╰── Invalid Unicode escape sequence
   ╰────

  × Invalid Unicode escape sequence
   ╭─[parser/ecmascript5/SkippedTokens/parserSkippedTokens11.ts:1:1]
 1 │ ; \ \ \ 
   ·      ┬
   ·      ╰── Invalid Unicode escape sequence
   ╰────

  × Invalid Unicode escape sequence
   ╭─[parser/ecmascript5/SkippedTokens/parserSkippedTokens11.ts:1:1]
 1 │ ; \ \ \ 
   ·        ┬
   ·        ╰── Invalid Unicode escape sequence
   ╰────

  × Invalid Unicode escape sequence
   ╭─[parser/ecmascript5/SkippedTokens/parserSkippedTokens12.ts:1:1]
 1 │ \ \ \
   ·  ┬
   ·  ╰── Invalid Unicode escape sequence
   ╰────

  × Invalid Unicode escape sequence
   ╭─[parser/ecmascript5/SkippedTokens/parserSkippedTokens12.ts:1:1]
 1 │ \ \ \
   ·    ┬
   ·    ╰── Invalid Unicode escape sequence
   ╰────

  × Invalid Unicode escape sequence
   ╭─[parser/ecmascript5/SkippedTokens/parserSkippedTokens12.ts:1:1]
 1 │ \ \ \
   ╰────

  × Invalid Unicode escape sequence
   ╭─[parser/ecmascript5/SkippedTokens/parserSkippedTokens13.ts:1:1]
 1 │ /regexp/ \ ;
   ·           ┬
   ·           ╰── Invalid Unicode escape sequence
   ╰────

  × Automatic Semicolon Insertion
   ╭─[parser/ecmascript5/SkippedTokens/parserSkippedTokens13.ts:1:1]
 1 │ /regexp/ \ ;
   ·         ┬
   ·         ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
   ╰────
  help: Try insert a semicolon here

  × Invalid Unicode escape sequence
   ╭─[parser/ecmascript5/SkippedTokens/parserSkippedTokens14.ts:1:1]
 1 │ \
   ·  ┬
   ·  ╰── Invalid Unicode escape sequence
 2 │ /*existing trivia*/ 
 3 │ \
   ╰────

  × Invalid Unicode escape sequence
   ╭─[parser/ecmascript5/SkippedTokens/parserSkippedTokens14.ts:2:1]
 2 │ /*existing trivia*/ 
 3 │ \
   ·  ┬
   ·  ╰── Invalid Unicode escape sequence
 4 │ ;
   ╰────

  × Invalid Unicode escape sequence
   ╭─[parser/ecmascript5/SkippedTokens/parserSkippedTokens15.ts:1:1]
 1 │ /*existing trivia*/
 2 │ \
   ·  ┬
   ·  ╰── Invalid Unicode escape sequence
 3 │ \
 4 │ ;
   ╰────

  × Invalid Unicode escape sequence
   ╭─[parser/ecmascript5/SkippedTokens/parserSkippedTokens15.ts:2:1]
 2 │ \
 3 │ \
   ·  ┬
   ·  ╰── Invalid Unicode escape sequence
 4 │ ;
   ╰────

  × Automatic Semicolon Insertion
   ╭─[parser/ecmascript5/SkippedTokens/parserSkippedTokens16.ts:1:1]
 1 │ foo(): Bar { }
   ·      ▲
   ·      ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 2 │ function Foo      () ¬   { }
   ╰────
  help: Try insert a semicolon here

  × Invalid Unicode escape sequence
   ╭─[parser/ecmascript5/SkippedTokens/parserSkippedTokens17.ts:1:1]
 1 │ foo(a, \
   ╰────

  × Expect token
   ╭─[parser/ecmascript5/SkippedTokens/parserSkippedTokens17.ts:1:1]
 1 │ foo(a, \
   ·        ┬
   ·        ╰── Expect `)` here, but found `EOF`
   ╰────

  × Invalid Unicode escape sequence
   ╭─[parser/ecmascript5/SkippedTokens/parserSkippedTokens18.ts:1:1]
 1 │ foo(a \
   ╰────

  × Expect token
   ╭─[parser/ecmascript5/SkippedTokens/parserSkippedTokens18.ts:1:1]
 1 │ foo(a \
   ·       ┬
   ·       ╰── Expect `,` here, but found `Identifier`
   ╰────

  × Invalid Unicode escape sequence
   ╭─[parser/ecmascript5/SkippedTokens/parserSkippedTokens19.ts:1:1]
 1 │ \ declare var v;
   ·  ┬
   ·  ╰── Invalid Unicode escape sequence
   ╰────

  × Keywords cannot contain escape characters
   ╭─[parser/ecmascript5/SkippedTokens/parserSkippedTokens19.ts:1:1]
 1 │ \ declare var v;
   · ────┬────
   ·     ╰── keyword cannot contain escape characters
   ╰────

  × Invalid Unicode escape sequence
   ╭─[parser/ecmascript5/SkippedTokens/parserSkippedTokens2.ts:1:1]
 1 │ \\
   ·  ┬
   ·  ╰── Invalid Unicode escape sequence
   ╰────

  × Invalid Unicode escape sequence
   ╭─[parser/ecmascript5/SkippedTokens/parserSkippedTokens20.ts:1:1]
 1 │ var v: X<T \
   ╰────

  × Expect token
   ╭─[parser/ecmascript5/SkippedTokens/parserSkippedTokens20.ts:1:1]
 1 │ var v: X<T \
   ·            ┬
   ·            ╰── Expect `,` here, but found `Identifier`
   ╰────

  × Invalid Unicode escape sequence
   ╭─[parser/ecmascript5/SkippedTokens/parserSkippedTokens3.ts:1:1]
 1 │ \ ; \
   ·  ┬
   ·  ╰── Invalid Unicode escape sequence
   ╰────

  × Invalid Unicode escape sequence
   ╭─[parser/ecmascript5/SkippedTokens/parserSkippedTokens3.ts:1:1]
 1 │ \ ; \
   ╰────

  × Invalid Unicode escape sequence
   ╭─[parser/ecmascript5/SkippedTokens/parserSkippedTokens4.ts:1:1]
 1 │ \  /regexp/;
   ·  ┬
   ·  ╰── Invalid Unicode escape sequence
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/SkippedTokens/parserSkippedTokens4.ts:1:1]
 1 │ \  /regexp/;
   ·            ─
   ╰────

  × Invalid Unicode escape sequence
   ╭─[parser/ecmascript5/SkippedTokens/parserSkippedTokens5.ts:1:1]
 1 │ \ /*foo*/ ;
   ·  ┬
   ·  ╰── Invalid Unicode escape sequence
   ╰────

  × Invalid Unicode escape sequence
   ╭─[parser/ecmascript5/SkippedTokens/parserSkippedTokens6.ts:1:1]
 1 │ /*foo*/ \
   ╰────

  × Invalid Unicode escape sequence
   ╭─[parser/ecmascript5/SkippedTokens/parserSkippedTokens7.ts:1:1]
 1 │ /*foo*/ \ /*bar*/
   ·          ┬
   ·          ╰── Invalid Unicode escape sequence
   ╰────

  × Invalid Unicode escape sequence
   ╭─[parser/ecmascript5/SkippedTokens/parserSkippedTokens8.ts:1:1]
 1 │ ;
 2 │ /*foo*/ \ /*bar*/
   ·          ┬
   ·          ╰── Invalid Unicode escape sequence
   ╰────

  × Invalid Unicode escape sequence
   ╭─[parser/ecmascript5/SkippedTokens/parserSkippedTokens9.ts:1:1]
 1 │ ; // existing trivia
 2 │ /*foo*/ \ /*bar*/
   ·          ┬
   ·          ╰── Invalid Unicode escape sequence
   ╰────

  × Illegal break statement
   ╭─[parser/ecmascript5/Statements/BreakStatements/parser_breakNotInIterationOrSwitchStatement1.ts:1:1]
 1 │ break;
   · ──────
   ╰────
  help: A `break` statement can only be used within an enclosing iteration or switch statement.

  × Illegal break statement
   ╭─[parser/ecmascript5/Statements/BreakStatements/parser_breakNotInIterationOrSwitchStatement2.ts:2:1]
 2 │   function f() {
 3 │     break;
   ·     ──────
 4 │   }
   ╰────
  help: A `break` statement can only be used within an enclosing iteration or switch statement.

  × Jump target cannot cross function boundary.
   ╭─[parser/ecmascript5/Statements/BreakStatements/parser_breakTarget5.ts:4:1]
 4 │     while (true) {
 5 │       break target;
   ·             ──────
 6 │     }
   ╰────

  × Use of undefined label
   ╭─[parser/ecmascript5/Statements/BreakStatements/parser_breakTarget6.ts:1:1]
 1 │ while (true) {
 2 │   break target;
   ·         ───┬──
   ·            ╰── This label is used, but not defined
 3 │ }
   ╰────

  × Illegal continue statement: no surrounding iteration statement
   ╭─[parser/ecmascript5/Statements/ContinueStatements/parser_continueNotInIterationStatement1.ts:1:1]
 1 │ continue;
   · ─────────
   ╰────
  help: A `continue` statement can only be used within an enclosing `for`, `while` or `do while`

  × Illegal continue statement: no surrounding iteration statement
   ╭─[parser/ecmascript5/Statements/ContinueStatements/parser_continueNotInIterationStatement2.ts:2:1]
 2 │   function f() {
 3 │     continue;
   ·     ─────────
 4 │   }
   ╰────
  help: A `continue` statement can only be used within an enclosing `for`, `while` or `do while`

  × Illegal continue statement: no surrounding iteration statement
   ╭─[parser/ecmascript5/Statements/ContinueStatements/parser_continueNotInIterationStatement3.ts:2:1]
 2 │   default:
 3 │     continue;
   ·     ─────────
 4 │ }
   ╰────
  help: A `continue` statement can only be used within an enclosing `for`, `while` or `do while`

  × A `"continue"` statement can only jump to a label of an enclosing `for`, `while` or `do while` statement.
   ╭─[parser/ecmascript5/Statements/ContinueStatements/parser_continueTarget1.ts:1:1]
 1 │ target:
   · ───┬──
   ·    ╰── This is an non-iteration statement
 2 │   continue target;
   ·            ───┬──
   ·               ╰── for this label
   ╰────

  × Jump target cannot cross function boundary.
   ╭─[parser/ecmascript5/Statements/ContinueStatements/parser_continueTarget5.ts:4:1]
 4 │     while (true) {
 5 │       continue target;
   ·                ──────
 6 │     }
   ╰────

  × Use of undefined label
   ╭─[parser/ecmascript5/Statements/ContinueStatements/parser_continueTarget6.ts:1:1]
 1 │ while (true) {
 2 │   continue target;
   ·            ───┬──
   ·               ╰── This label is used, but not defined
 3 │ }
   ╰────

  × Identifier `"target"` has already been declared
   ╭─[parser/ecmascript5/Statements/LabeledStatements/parser_duplicateLabel1.ts:1:1]
 1 │ target:
   · ───┬──
   ·    ╰── `target` has already been declared here
 2 │ target:
   · ───┬──
   ·    ╰── It can not be redeclared here
 3 │ while (true) {
   ╰────

  × Identifier `"target"` has already been declared
   ╭─[parser/ecmascript5/Statements/LabeledStatements/parser_duplicateLabel2.ts:1:1]
 1 │ target:
   · ───┬──
   ·    ╰── `target` has already been declared here
 2 │ while (true) {
 3 │   target:
   ·   ───┬──
   ·      ╰── It can not be redeclared here
 4 │   while (true) {
   ╰────

  × Illegal break statement
   ╭─[parser/ecmascript5/Statements/parserBreakStatement1.d.ts:1:1]
 1 │ break;
   · ──────
   ╰────
  help: A `break` statement can only be used within an enclosing iteration or switch statement.

  × Illegal continue statement: no surrounding iteration statement
   ╭─[parser/ecmascript5/Statements/parserContinueStatement1.d.ts:1:1]
 1 │ continue;
   · ─────────
   ╰────
  help: A `continue` statement can only be used within an enclosing `for`, `while` or `do while`

  × Expect token
   ╭─[parser/ecmascript5/Statements/parserES5ForOfStatement2.ts:1:1]
 1 │ //@target: ES5
 2 │ for (var of X) {
   ·             ┬
   ·             ╰── Expect `;` here, but found `Identifier`
 3 │ }
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/Statements/parserES5ForOfStatement21.ts:1:1]
 1 │ //@target: ES5
 2 │ for (var of of) { }
   ·               ─
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/Statements/parserForInStatement2.ts:1:1]
 1 │ for (var in X) {
   ·          ──
 2 │ }
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/Statements/parserForStatement4.ts:1:1]
 1 │ for (a = 1 in b) {
   ·      ─────
 2 │ }
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/Statements/parserForStatement6.ts:1:1]
 1 │ for (foo() in b) {
   ·      ─────
 2 │ }
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/Statements/parserForStatement7.ts:1:1]
 1 │ for (new foo() in b) {
   ·      ─────────
 2 │ }
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/Statements/parserForStatement8.ts:1:1]
 1 │ for (this in b) {
   ·      ────
 2 │ }
   ╰────

  × 'with' statements are not allowed
   ╭─[parser/ecmascript5/Statements/parserWithStatement1.d.ts:1:1]
 1 │ with (foo) {
   · ────
 2 │ }
   ╰────

  × 'with' statements are not allowed
   ╭─[parser/ecmascript5/Statements/parserWithStatement2.ts:1:1]
 1 │ with (1)
   · ────
 2 │   return;
   ╰────

  × 'with' statements are not allowed
   ╭─[parser/ecmascript5/StrictMode/parserStrictMode14.ts:1:1]
 1 │ "use strict";
 2 │ with (a) {
   · ────
 3 │ }
   ╰────

  × 'super' can only be used with function calls or in property accesses
   ╭─[parser/ecmascript5/SuperExpressions/parserSuperExpression2.ts:2:1]
 2 │   M() {
 3 │     super<T>(0);
   ·     ──┬──
   ·       ╰── 'super' can only be used with function calls or in property accesses 
 4 │   }
   ╰────
  help: replace with `super()` or `super.prop` or `super[prop]`

  × Expect token
   ╭─[parser/ecmascript5/TupleTypes/TupleType4.ts:1:1]
 1 │ var v: [
   ·        ┬
   ·        ╰── Expect `]` here, but found `EOF`
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/TupleTypes/TupleType6.ts:1:1]
 1 │ var v: [number,,]
   ·                ─
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/Types/parserTypeQuery3.ts:1:1]
 1 │ var v: typeof A.
   ·                ─
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/Types/parserTypeQuery4.ts:1:1]
 1 │ var v: typeof A.;
   ·                 ─
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/VariableDeclarations/parserVariableDeclaration10.ts:1:1]
 1 │ var a,;
   ·       ─
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/VariableDeclarations/parserVariableDeclaration5.ts:1:1]
 1 │ var a,
   ·      ─
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/VariableDeclarations/parserVariableDeclaration6.ts:1:1]
 1 │ var
   ·   ─
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/VariableDeclarations/parserVariableDeclaration8.ts:1:1]
 1 │ var ;
   ·     ─
   ╰────

  × Unterminated multiline comment
   ╭─[parser/ecmascript5/parserKeywordsAsIdentifierName2.ts:1:1]
 1 │ // 'public' should be marked unusable, should complain on trailing /*
 2 │ a.public /*
   ·          ─┬
   ·           ╰── Unterminated multiline comment
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/parserObjectCreationArrayLiteral1.ts:1:1]
 1 │ new Foo[];
   ·         ─
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript5/parserObjectCreationArrayLiteral3.ts:1:1]
 1 │ new Foo[]();
   ·         ─
   ╰────

  × Unexpected token
     ╭─[parser/ecmascript5/parserRealSource10.ts:126:1]
 126 │ 
 127 │     export var tokenTable = new TokenInfo[];
     ·                                           ─
 128 │     export var nodeTypeTable = new string[];
     ╰────

  × Unexpected token
     ╭─[parser/ecmascript5/parserRealSource11.ts:192:1]
 192 │         public enclosingScope: SymbolScope = null;
 193 │         public members: AST[] = new AST[];
     ·                                         ─
 194 │ 
     ╰────

  × Unexpected token
     ╭─[parser/ecmascript5/parserRealSource4.ts:194:1]
 194 │         public itemCount: number = 0;
 195 │         public table = new HashEntry[];
     ·                                      ─
 196 │ 
     ╰────

  × Unexpected token
    ╭─[parser/ecmascript5/parserRealSource7.ts:15:1]
 15 │             if (baseTypeLinks == null) {
 16 │                 baseTypeLinks = new TypeLink[];
    ·                                              ─
 17 │             }
    ╰────

  × Unexpected token
    ╭─[parser/ecmascript5/parserRealSource9.ts:11:1]
 11 │             if (typeLinks) {
 12 │                 extendsList = new Type[];
    ·                                        ─
 13 │                 for (var i = 0, len = typeLinks.length; i < len; i++) {
    ╰────

  × Unexpected token
    ╭─[parser/ecmascript5/parserS12.11_A3_T4.ts:15:1]
 15 │   switch(value) {
 16 │     case:
    ·         ─
 17 │       result += 2;
    ╰────

  × Invalid assignment
    ╭─[parser/ecmascript5/parserS7.9_A5.7_T1.ts:15:1]
 15 │     x
 16 │ ╭─▶ ++
 17 │ │   ++
 18 │ ├─▶ y
    · ╰──── Cannot assign to this expression
 19 │     
    ╰────

  × Automatic Semicolon Insertion
   ╭─[parser/ecmascript5/parservoidInQualifiedName1.ts:1:1]
 1 │ var v : void.x;
   ·             ▲
   ·             ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
   ╰────
  help: Try insert a semicolon here

  × Unexpected token
   ╭─[parser/ecmascript6/ComputedPropertyNames/parserComputedPropertyName1.ts:1:1]
 1 │ //@target: ES6
 2 │ var v = { [e] };
   ·               ─
   ╰────

  × Automatic Semicolon Insertion
   ╭─[parser/ecmascript6/ComputedPropertyNames/parserComputedPropertyName27.ts:4:1]
 4 │     [e]: number = 0
 5 │     [e2]: number
   ·         ▲
   ·         ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 6 │ }
   ╰────
  help: Try insert a semicolon here

  × Expect token
   ╭─[parser/ecmascript6/ComputedPropertyNames/parserComputedPropertyName30.ts:4:1]
 4 │     [e] = id++
 5 │     [e2] = 1
   ·     ┬
   ·     ╰── Expect `,` here, but found `[`
 6 │ }
   ╰────

  × Automatic Semicolon Insertion
   ╭─[parser/ecmascript6/ComputedPropertyNames/parserComputedPropertyName33.ts:4:1]
 4 │     [e] = 0
 5 │     [e2]() { }
   ·           ┬
   ·           ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 6 │ }
   ╰────
  help: Try insert a semicolon here

  × Expect token
   ╭─[parser/ecmascript6/ComputedPropertyNames/parserComputedPropertyName35.ts:2:1]
 2 │ var x = {
 3 │     [0, 1]: { }
   ·       ┬
   ·       ╰── Expect `]` here, but found `,`
 4 │ }
   ╰────

  × The keyword '"public"' is reserved
   ╭─[parser/ecmascript6/ComputedPropertyNames/parserComputedPropertyName36.ts:2:1]
 2 │ class C {
 3 │     [public ]: string;
   ·      ──────
 4 │ }
   ╰────

  × The keyword '"public"' is reserved
   ╭─[parser/ecmascript6/ComputedPropertyNames/parserComputedPropertyName38.ts:2:1]
 2 │ class C {
 3 │     [public]() { }
   ·      ──────
 4 │ }
   ╰────

  × The keyword '"public"' is reserved
   ╭─[parser/ecmascript6/ComputedPropertyNames/parserComputedPropertyName39.ts:3:1]
 3 │ class C {
 4 │     [public]() { }
   ·      ──────
 5 │ }
   ╰────

  × Expect token
   ╭─[parser/ecmascript6/ComputedPropertyNames/parserComputedPropertyName5.ts:1:1]
 1 │ //@target: ES6
 2 │ var v = { public get [e]() { } };
   ·                  ─┬─
   ·                   ╰── Expect `,` here, but found `get`
   ╰────

  × Expect token
   ╭─[parser/ecmascript6/Iterators/parserForOfStatement2.ts:1:1]
 1 │ //@target: ES6
 2 │ for (var of X) {
   ·             ┬
   ·             ╰── Expect `;` here, but found `Identifier`
 3 │ }
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript6/Iterators/parserForOfStatement21.ts:1:1]
 1 │ //@target: ES6
 2 │ for (var of of) { }
   ·               ─
   ╰────

  × The left-hand side of a `for...of` statement may not be `async`
   ╭─[parser/ecmascript6/Iterators/parserForOfStatement22.ts:3:1]
 3 │ var async;
 4 │ for (async of [1, 2]) {}
   ·      ──┬──
   ·        ╰── The left-hand side of a `for...of` statement may not be `async`
   ╰────

  × Expect token
   ╭─[parser/ecmascript6/ShorthandPropertyAssignment/parserShorthandPropertyAssignment1.ts:3:1]
 3 │ var name:any, id: any;
 4 │ foo({ name?, id? });
   ·           ┬
   ·           ╰── Expect `,` here, but found `?`
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript6/ShorthandPropertyAssignment/parserShorthandPropertyAssignment2.ts:1:1]
 1 │ var v = { class };
   ·                 ─
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript6/ShorthandPropertyAssignment/parserShorthandPropertyAssignment3.ts:1:1]
 1 │ var v = { "" };
   ·              ─
   ╰────

  × Unexpected token
   ╭─[parser/ecmascript6/ShorthandPropertyAssignment/parserShorthandPropertyAssignment4.ts:1:1]
 1 │ var v = { 0 };
   ·             ─
   ╰────

  × Expect token
   ╭─[parser/ecmascript6/ShorthandPropertyAssignment/parserShorthandPropertyAssignment5.ts:1:1]
 1 │ var greet = "hello";
 2 │ var obj = { greet? }; 
   ·                  ┬
   ·                  ╰── Expect `,` here, but found `?`
   ╰────

  × Expect token
   ╭─[parser/ecmascript6/Symbols/parserSymbolIndexer5.ts:2:1]
 2 │ var x = {
 3 │     [s: symbol]: ""
   ·       ┬
   ·       ╰── Expect `]` here, but found `:`
 4 │ }
   ╰────

  × Constructor can't have get/set modifier
   ╭─[salsa/constructorNameInAccessor.ts:2:1]
 2 │ class C1 {
 3 │     get constructor() { return }
   ·         ─────┬─────
   ·              ╰── Constructor can't have get/set modifier
 4 │     set constructor(value) {}
   ╰────

  × Constructor can't have get/set modifier
   ╭─[salsa/constructorNameInAccessor.ts:3:1]
 3 │     get constructor() { return }
 4 │     set constructor(value) {}
   ·         ─────┬─────
   ·              ╰── Constructor can't have get/set modifier
 5 │ }
   ╰────

  × Constructor can't be a generator
   ╭─[salsa/constructorNameInGenerator.ts:2:1]
 2 │ class C2 {
 3 │     *constructor() {}
   ·      ─────┬─────
   ·           ╰── Constructor can't be a generator
 4 │ }
   ╰────

  × '0'-prefixed octal literals and octal escape sequences are deprecated
    ╭─[salsa/plainJSBinderErrors.ts:29:1]
 29 │     withOctal() {
 30 │         const redundant = 010
    ·                           ───
 31 │         with (redundant) {
    ╰────
  help: for octal literals use the '0o' prefix instead

  × 'with' statements are not allowed
    ╭─[salsa/plainJSBinderErrors.ts:30:1]
 30 │         const redundant = 010
 31 │         with (redundant) {
    ·         ────
 32 │             return toFixed()
    ╰────

  × Jump target cannot cross function boundary.
    ╭─[salsa/plainJSBinderErrors.ts:37:1]
 37 │             label: var x = 1
 38 │             break label
    ·                   ─────
 39 │         }
    ╰────

  × Classes can't have an element named '#constructor'
    ╭─[salsa/plainJSBinderErrors.ts:15:1]
 15 │ class C {
 16 │     #constructor = 5
    ·     ──────┬─────
    ·           ╰── Classes can't have an element named '#constructor'
 17 │     deleted() {
    ╰────

  × Expect token
    ╭─[salsa/plainJSGrammarErrors.ts:8:1]
  8 │     q = #unbound
  9 │     m() {
    ·     ┬
    ·     ╰── Expect `in` here, but found `Identifier`
 10 │         #p
    ╰────

  × Automatic Semicolon Insertion
   ╭─[scanner/ecmascript3/scannerES3NumericLiteral3.ts:1:1]
 1 │ 01.0
   ·   ▲
   ·   ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
   ╰────
  help: Try insert a semicolon here

  × Unexpected end of file
   ╭─[scanner/ecmascript3/scannerES3NumericLiteral4.ts:1:1]
 1 │ 1e
   ╰────

  × Invalid Number
   ╭─[scanner/ecmascript3/scannerES3NumericLiteral4.ts:1:1]
 1 │ 1e
   · ─┬
   ·  ╰── invalid float
   ╰────

  × Unexpected end of file
   ╭─[scanner/ecmascript3/scannerES3NumericLiteral6.ts:1:1]
 1 │ 1e+
   ╰────

  × Invalid Number
   ╭─[scanner/ecmascript3/scannerES3NumericLiteral6.ts:1:1]
 1 │ 1e+
   · ─┬─
   ·  ╰── invalid float
   ╰────

  × Automatic Semicolon Insertion
   ╭─[scanner/ecmascript5/scannerNumericLiteral3.ts:1:1]
 1 │ // @target: ES5
 2 │ 01.0
   ·   ▲
   ·   ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
   ╰────
  help: Try insert a semicolon here

  × Unexpected end of file
   ╭─[scanner/ecmascript5/scannerNumericLiteral4.ts:1:1]
 1 │ // @target: ES5
 2 │ 1e
   ╰────

  × Invalid Number
   ╭─[scanner/ecmascript5/scannerNumericLiteral4.ts:1:1]
 1 │ // @target: ES5
 2 │ 1e
   · ─┬
   ·  ╰── invalid float
   ╰────

  × Unexpected end of file
   ╭─[scanner/ecmascript5/scannerNumericLiteral6.ts:1:1]
 1 │ // @target: ES5
 2 │ 1e+
   ╰────

  × Invalid Number
   ╭─[scanner/ecmascript5/scannerNumericLiteral6.ts:1:1]
 1 │ // @target: ES5
 2 │ 1e+
   · ─┬─
   ·  ╰── invalid float
   ╰────

  × Unterminated multiline comment
    ╭─[scanner/ecmascript5/scannerS7.4_A2_T2.ts:11:1]
 11 │     
 12 │ ╭─▶ /*CHECK#1/
 13 │ ├─▶ 
    · ╰──── Unterminated multiline comment
    ╰────

  × Invalid Character `'\n'`
    ╭─[scanner/ecmascript5/scannerS7.8.3_A6.1_T1.ts:12:1]
 12 │ //CHECK#1
 13 │ 0x
    ·   ▲
    ·   ╰── Invalid Character `
`
 14 │ 
    ╰────

  × Invalid escape sequence
    ╭─[scanner/ecmascript5/scannerS7.8.4_A7.1_T4.ts:12:1]
 12 │ //CHECK#
 13 │ "\u000G"
    ·  ──┬──
    ·    ╰── Invalid escape sequence
 14 │ 
    ╰────

  × Unterminated string
    ╭─[scanner/ecmascript5/scannerStringLiterals.ts:9:1]
  9 │ "
 10 │ "Should error because of newline.
    · ─────────────────┬────────────────
    ·                  ╰── Unterminated string
 11 │ "Should error because of end of file.
    ╰────

  × Invalid Character `'\0'`
   ╭─[scanner/ecmascript5/scannerUnexpectedNullCharacter1.ts:1:1]
 1 │ foo + bar;
   ·    ┬
   ·    ╰── Invalid Character ` `
   ╰────

  × Automatic Semicolon Insertion
   ╭─[scanner/ecmascript5/scannerUnexpectedNullCharacter1.ts:1:1]
 1 │ foo + bar;
   ·    ▲
   ·    ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
   ╰────
  help: Try insert a semicolon here

  × Keywords cannot contain escape characters
   ╭─[scanner/ecmascript5/scannerUnicodeEscapeInKeyword1.ts:1:1]
 1 │ \u0076ar x = "hello";
   · ────┬───
   ·     ╰── keyword cannot contain escape characters
   ╰────

  × Illegal break statement
   ╭─[statements/breakStatements/invalidDoWhileBreakStatements.ts:6:1]
 6 │ // naked break not allowed
 7 │ break;
   · ──────
 8 │ 
   ╰────
  help: A `break` statement can only be used within an enclosing iteration or switch statement.

  × Use of undefined label
    ╭─[statements/breakStatements/invalidDoWhileBreakStatements.ts:10:1]
 10 │ ONE:
 11 │ do break TWO; while (true)
    ·          ─┬─
    ·           ╰── This label is used, but not defined
 12 │ 
    ╰────

  × Jump target cannot cross function boundary.
    ╭─[statements/breakStatements/invalidDoWhileBreakStatements.ts:23:1]
 23 │     var fn = function () {
 24 │         break THREE;
    ·               ─────
 25 │     }
    ╰────

  × Use of undefined label
    ╭─[statements/breakStatements/invalidDoWhileBreakStatements.ts:29:1]
 29 │ do {
 30 │     break FIVE;
    ·           ──┬─
    ·             ╰── This label is used, but not defined
 31 │     FIVE:
    ╰────

  × Use of undefined label
    ╭─[statements/breakStatements/invalidDoWhileBreakStatements.ts:39:1]
 39 │ do {
 40 │     break NINE;
    ·           ──┬─
    ·             ╰── This label is used, but not defined
 41 │ }while (true)
    ╰────

  × Illegal break statement
   ╭─[statements/breakStatements/invalidForBreakStatements.ts:6:1]
 6 │ // naked break not allowed
 7 │ break;
   · ──────
 8 │ 
   ╰────
  help: A `break` statement can only be used within an enclosing iteration or switch statement.

  × Use of undefined label
    ╭─[statements/breakStatements/invalidForBreakStatements.ts:10:1]
 10 │ ONE:
 11 │ for(;;) break TWO;
    ·               ─┬─
    ·                ╰── This label is used, but not defined
 12 │ 
    ╰────

  × Jump target cannot cross function boundary.
    ╭─[statements/breakStatements/invalidForBreakStatements.ts:23:1]
 23 │     var fn = function () {
 24 │         break THREE;
    ·               ─────
 25 │     }
    ╰────

  × Use of undefined label
    ╭─[statements/breakStatements/invalidForBreakStatements.ts:29:1]
 29 │ for(;;) {
 30 │     break FIVE;
    ·           ──┬─
    ·             ╰── This label is used, but not defined
 31 │     FIVE:
    ╰────

  × Use of undefined label
    ╭─[statements/breakStatements/invalidForBreakStatements.ts:38:1]
 38 │ for(;;) {
 39 │     break NINE;
    ·           ──┬─
    ·             ╰── This label is used, but not defined
 40 │ }
    ╰────

  × Illegal break statement
   ╭─[statements/breakStatements/invalidForInBreakStatements.ts:6:1]
 6 │ // naked break not allowed
 7 │ break;
   · ──────
 8 │ 
   ╰────
  help: A `break` statement can only be used within an enclosing iteration or switch statement.

  × Use of undefined label
    ╭─[statements/breakStatements/invalidForInBreakStatements.ts:10:1]
 10 │ ONE:
 11 │ for (var x in {}) break TWO;
    ·                         ─┬─
    ·                          ╰── This label is used, but not defined
 12 │ 
    ╰────

  × Jump target cannot cross function boundary.
    ╭─[statements/breakStatements/invalidForInBreakStatements.ts:23:1]
 23 │     var fn = function () {
 24 │         break THREE;
    ·               ─────
 25 │     }
    ╰────

  × Use of undefined label
    ╭─[statements/breakStatements/invalidForInBreakStatements.ts:29:1]
 29 │ for (var x in {}) {
 30 │     break FIVE;
    ·           ──┬─
    ·             ╰── This label is used, but not defined
 31 │     FIVE:
    ╰────

  × Use of undefined label
    ╭─[statements/breakStatements/invalidForInBreakStatements.ts:39:1]
 39 │ for (var x in {}) {
 40 │     break NINE;
    ·           ──┬─
    ·             ╰── This label is used, but not defined
 41 │ }
    ╰────

  × Illegal break statement
   ╭─[statements/breakStatements/invalidWhileBreakStatements.ts:3:1]
 3 │ // naked break not allowed
 4 │ break;
   · ──────
 5 │ 
   ╰────
  help: A `break` statement can only be used within an enclosing iteration or switch statement.

  × Use of undefined label
   ╭─[statements/breakStatements/invalidWhileBreakStatements.ts:7:1]
 7 │ ONE:
 8 │ while (true) break TWO;
   ·                    ─┬─
   ·                     ╰── This label is used, but not defined
 9 │ 
   ╰────

  × Jump target cannot cross function boundary.
    ╭─[statements/breakStatements/invalidWhileBreakStatements.ts:20:1]
 20 │     var fn = function () {
 21 │         break THREE;
    ·               ─────
 22 │     }
    ╰────

  × Use of undefined label
    ╭─[statements/breakStatements/invalidWhileBreakStatements.ts:26:1]
 26 │ while (true) {
 27 │     break FIVE;
    ·           ──┬─
    ·             ╰── This label is used, but not defined
 28 │     FIVE:
    ╰────

  × Use of undefined label
    ╭─[statements/breakStatements/invalidWhileBreakStatements.ts:36:1]
 36 │ while (true) {
 37 │     break NINE;
    ·           ──┬─
    ·             ╰── This label is used, but not defined
 38 │ }
    ╰────

  × Illegal continue statement: no surrounding iteration statement
   ╭─[statements/continueStatements/invalidDoWhileContinueStatements.ts:6:1]
 6 │ // naked continue not allowed
 7 │ continue;
   · ─────────
 8 │ 
   ╰────
  help: A `continue` statement can only be used within an enclosing `for`, `while` or `do while`

  × Use of undefined label
    ╭─[statements/continueStatements/invalidDoWhileContinueStatements.ts:10:1]
 10 │ ONE:
 11 │ do continue TWO; while (true)
    ·             ─┬─
    ·              ╰── This label is used, but not defined
 12 │ 
    ╰────

  × Jump target cannot cross function boundary.
    ╭─[statements/continueStatements/invalidDoWhileContinueStatements.ts:23:1]
 23 │     var fn = function () {
 24 │         continue THREE;
    ·                  ─────
 25 │     }
    ╰────

  × Use of undefined label
    ╭─[statements/continueStatements/invalidDoWhileContinueStatements.ts:29:1]
 29 │ do {
 30 │     continue FIVE;
    ·              ──┬─
    ·                ╰── This label is used, but not defined
 31 │     FIVE:
    ╰────

  × Use of undefined label
    ╭─[statements/continueStatements/invalidDoWhileContinueStatements.ts:39:1]
 39 │ do {
 40 │     continue NINE;
    ·              ──┬─
    ·                ╰── This label is used, but not defined
 41 │ }while (true)
    ╰────

  × Illegal continue statement: no surrounding iteration statement
   ╭─[statements/continueStatements/invalidForContinueStatements.ts:6:1]
 6 │ // naked continue not allowed
 7 │ continue;
   · ─────────
 8 │ 
   ╰────
  help: A `continue` statement can only be used within an enclosing `for`, `while` or `do while`

  × Use of undefined label
    ╭─[statements/continueStatements/invalidForContinueStatements.ts:10:1]
 10 │ ONE:
 11 │ for(;;) continue TWO;
    ·                  ─┬─
    ·                   ╰── This label is used, but not defined
 12 │ 
    ╰────

  × Jump target cannot cross function boundary.
    ╭─[statements/continueStatements/invalidForContinueStatements.ts:23:1]
 23 │     var fn = function () {
 24 │         continue THREE;
    ·                  ─────
 25 │     }
    ╰────

  × Use of undefined label
    ╭─[statements/continueStatements/invalidForContinueStatements.ts:29:1]
 29 │ for(;;) {
 30 │     continue FIVE;
    ·              ──┬─
    ·                ╰── This label is used, but not defined
 31 │     FIVE:
    ╰────

  × Use of undefined label
    ╭─[statements/continueStatements/invalidForContinueStatements.ts:38:1]
 38 │ for(;;) {
 39 │     continue NINE;
    ·              ──┬─
    ·                ╰── This label is used, but not defined
 40 │ }
    ╰────

  × Illegal continue statement: no surrounding iteration statement
   ╭─[statements/continueStatements/invalidForInContinueStatements.ts:6:1]
 6 │ // naked continue not allowed
 7 │ continue;
   · ─────────
 8 │ 
   ╰────
  help: A `continue` statement can only be used within an enclosing `for`, `while` or `do while`

  × Use of undefined label
    ╭─[statements/continueStatements/invalidForInContinueStatements.ts:10:1]
 10 │ ONE:
 11 │ for (var x in {}) continue TWO;
    ·                            ─┬─
    ·                             ╰── This label is used, but not defined
 12 │ 
    ╰────

  × Jump target cannot cross function boundary.
    ╭─[statements/continueStatements/invalidForInContinueStatements.ts:23:1]
 23 │     var fn = function () {
 24 │         continue THREE;
    ·                  ─────
 25 │     }
    ╰────

  × Use of undefined label
    ╭─[statements/continueStatements/invalidForInContinueStatements.ts:29:1]
 29 │ for (var x in {}) {
 30 │     continue FIVE;
    ·              ──┬─
    ·                ╰── This label is used, but not defined
 31 │     FIVE:
    ╰────

  × Use of undefined label
    ╭─[statements/continueStatements/invalidForInContinueStatements.ts:39:1]
 39 │ for (var x in {}) {
 40 │     continue NINE;
    ·              ──┬─
    ·                ╰── This label is used, but not defined
 41 │ }
    ╰────

  × Illegal continue statement: no surrounding iteration statement
   ╭─[statements/continueStatements/invalidSwitchContinueStatement.ts:4:1]
 4 │     case 5:
 5 │         continue;
   ·         ─────────
 6 │ }
   ╰────
  help: A `continue` statement can only be used within an enclosing `for`, `while` or `do while`

  × Illegal continue statement: no surrounding iteration statement
   ╭─[statements/continueStatements/invalidWhileContinueStatements.ts:6:1]
 6 │ // naked continue not allowed
 7 │ continue;
   · ─────────
 8 │ 
   ╰────
  help: A `continue` statement can only be used within an enclosing `for`, `while` or `do while`

  × Use of undefined label
    ╭─[statements/continueStatements/invalidWhileContinueStatements.ts:10:1]
 10 │ ONE:
 11 │ while (true) continue TWO;
    ·                       ─┬─
    ·                        ╰── This label is used, but not defined
 12 │ 
    ╰────

  × Jump target cannot cross function boundary.
    ╭─[statements/continueStatements/invalidWhileContinueStatements.ts:23:1]
 23 │     var fn = function () {
 24 │         continue THREE;
    ·                  ─────
 25 │     }
    ╰────

  × Use of undefined label
    ╭─[statements/continueStatements/invalidWhileContinueStatements.ts:29:1]
 29 │ while (true) {
 30 │     continue FIVE;
    ·              ──┬─
    ·                ╰── This label is used, but not defined
 31 │     FIVE:
    ╰────

  × Use of undefined label
    ╭─[statements/continueStatements/invalidWhileContinueStatements.ts:39:1]
 39 │ while (true) {
 40 │     continue NINE;
    ·              ──┬─
    ·                ╰── This label is used, but not defined
 41 │ }
    ╰────

  × Unexpected token
   ╭─[statements/for-ofStatements/ES5For-of12.ts:1:1]
 1 │ for ([""] of [[""]]) { }
   ·      ────
   ╰────

  × Missing initializer in const declaration
   ╭─[statements/for-ofStatements/ES5For-of20.ts:3:1]
 3 │     for (let v of [v]) {
 4 │         const v;
   ·               ┬
   ·               ╰── const declaration need an initializer
 5 │     }
   ╰────

  × Generators can only be declared at the top level or inside a block
   ╭─[statements/labeledStatements/labeledStatementWithLabel.ts:3:1]
 3 │ label: function fn() { }
 4 │ label: function* gen() { }
   ·        ───────┬───────
   ·               ╰── Generators can only be declared at the top level or inside a block
 5 │ label: async function gen1() { }
   ╰────

  × Async functions can only be declared at the top level or inside a block
   ╭─[statements/labeledStatements/labeledStatementWithLabel.ts:4:1]
 4 │ label: function* gen() { }
 5 │ label: async function gen1() { }
   ·        ──────────┬──────────
   ·                  ╰── Async functions can only be declared at the top level or inside a block
 6 │ label: enum E {}
   ╰────

  × Invalid class declaration
   ╭─[statements/labeledStatements/labeledStatementWithLabel.ts:7:1]
 7 │ label: interface I {}
 8 │ label: class C { }
   ·        ────┬───
   ·            ╰── Classes can only be declared at top level or inside a block
 9 │ label: var a = 1;
   ╰────

  × Automatic Semicolon Insertion
    ╭─[statements/labeledStatements/labeledStatementWithLabel.ts:9:1]
  9 │ label: var a = 1;
 10 │ label: let b = 1;
    ·           ┬
    ·           ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 11 │ label: const c = 1;
    ╰────
  help: Try insert a semicolon here

  × Generators can only be declared at the top level or inside a block
   ╭─[statements/labeledStatements/labeledStatementWithLabel_es2015.ts:3:1]
 3 │ label: function fn() { }
 4 │ label: function* gen() { }
   ·        ───────┬───────
   ·               ╰── Generators can only be declared at the top level or inside a block
 5 │ label: async function gen1() { }
   ╰────

  × Async functions can only be declared at the top level or inside a block
   ╭─[statements/labeledStatements/labeledStatementWithLabel_es2015.ts:4:1]
 4 │ label: function* gen() { }
 5 │ label: async function gen1() { }
   ·        ──────────┬──────────
   ·                  ╰── Async functions can only be declared at the top level or inside a block
 6 │ label: enum E {}
   ╰────

  × Invalid class declaration
   ╭─[statements/labeledStatements/labeledStatementWithLabel_es2015.ts:7:1]
 7 │ label: interface I {}
 8 │ label: class C { }
   ·        ────┬───
   ·            ╰── Classes can only be declared at top level or inside a block
 9 │ label: var a = 1;
   ╰────

  × Automatic Semicolon Insertion
    ╭─[statements/labeledStatements/labeledStatementWithLabel_es2015.ts:9:1]
  9 │ label: var a = 1;
 10 │ label: let b = 1;
    ·           ┬
    ·           ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 11 │ label: const c = 1;
    ╰────
  help: Try insert a semicolon here

  × Generators can only be declared at the top level or inside a block
   ╭─[statements/labeledStatements/labeledStatementWithLabel_strict.ts:3:1]
 3 │ label: function fn() { }
 4 │ label: function* gen() { }
   ·        ───────┬───────
   ·               ╰── Generators can only be declared at the top level or inside a block
 5 │ label: async function gen1() { }
   ╰────

  × Async functions can only be declared at the top level or inside a block
   ╭─[statements/labeledStatements/labeledStatementWithLabel_strict.ts:4:1]
 4 │ label: function* gen() { }
 5 │ label: async function gen1() { }
   ·        ──────────┬──────────
   ·                  ╰── Async functions can only be declared at the top level or inside a block
 6 │ label: enum E {}
   ╰────

  × Invalid class declaration
   ╭─[statements/labeledStatements/labeledStatementWithLabel_strict.ts:7:1]
 7 │ label: interface I {}
 8 │ label: class C { }
   ·        ────┬───
   ·            ╰── Classes can only be declared at top level or inside a block
 9 │ label: var a = 1;
   ╰────

  × Automatic Semicolon Insertion
    ╭─[statements/labeledStatements/labeledStatementWithLabel_strict.ts:9:1]
  9 │ label: var a = 1;
 10 │ label: let b = 1;
    ·           ┬
    ·           ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 11 │ label: const c = 1;
    ╰────
  help: Try insert a semicolon here

  × Unexpected token
   ╭─[statements/throwStatements/invalidThrowStatement.ts:2:1]
 2 │ 
 3 │ throw; 
   ·      ─
 4 │ 
   ╰────

  × Unexpected token
   ╭─[statements/tryStatements/invalidTryStatements.ts:1:1]
 1 │ function fn() {
 2 │     catch(x) { } // error missing try
   ·     ─────
 3 │ 
   ╰────

  × 'with' statements are not allowed
   ╭─[statements/withStatements/withStatements.ts:1:1]
 1 │ var x = 12;
 2 │ with (x) {
   · ────
 3 │     name = 'twelve'
   ╰────

  × Expect token
   ╭─[types/import/importWithTypeArguments.ts:1:1]
 1 │ import<T>
   ·       ┬
   ·       ╰── Expect `from` here, but found `<`
 2 │ const a = import<string, number>
   ╰────

  × Expect token
    ╭─[types/mapped/mappedTypeProperties.ts:9:1]
  9 │     [placeType in PlaceType]: void;
 10 │     model: 'hour' | 'day'
    ·     ──┬──
    ·       ╰── Expect `}` here, but found `Identifier`
 11 │ }
    ╰────

  × Expect token
    ╭─[types/objectTypeLiteral/callSignatures/callSignaturesWithAccessibilityModifiersOnParameters.ts:11:1]
 11 │ var f6 = function (private x: string, public y: number) { }
 12 │ var f7 = (private x: string, public y: number) => { }
    ·                   ┬
    ·                   ╰── Expect `,` here, but found `Identifier`
 13 │ var f8 = <T>(private x: T, public y: T) => { }
    ╰────

  × Automatic Semicolon Insertion
    ╭─[types/objectTypeLiteral/callSignatures/callSignaturesWithParameterInitializers2.ts:19:1]
 19 │ var b = {
 20 │     foo(x = 1), // error
    ·               ▲
    ·               ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 21 │     foo(x = 1) { }, // error
    ╰────
  help: Try insert a semicolon here

  × Rest element must be last element
   ╭─[types/objectTypeLiteral/callSignatures/restParameterWithoutAnnotationIsAnyArray.ts:4:1]
 4 │ var f = function foo(...x) { }
 5 │ var f2 = (...x, ...y) => { }
   ·           ──┬─
   ·             ╰── Rest element must be last element
 6 │ 
   ╰────

  × Rest element must be last element
    ╭─[types/objectTypeLiteral/callSignatures/restParameterWithoutAnnotationIsAnyArray.ts:12:1]
 12 │     (...x);
 13 │     foo(...x, ...y);
    ·         ──┬─
    ·           ╰── Rest element must be last element
 14 │ }
    ╰────

  × Rest element must be last element
    ╭─[types/objectTypeLiteral/callSignatures/restParameterWithoutAnnotationIsAnyArray.ts:22:1]
 22 │     foo(...x) { },
 23 │     a: function foo(...x, ...y) { },
    ·                     ──┬─
    ·                       ╰── Rest element must be last element
 24 │     b: (...x) => { }
    ╰────

  × Rest element must be last element
   ╭─[types/objectTypeLiteral/callSignatures/restParametersOfNonArrayTypes.ts:4:1]
 4 │ var f = function foo(...x: number) { }
 5 │ var f2 = (...x: Date, ...y: boolean) => { }
   ·           ─────┬────
   ·                ╰── Rest element must be last element
 6 │ 
   ╰────

  × Rest element must be last element
    ╭─[types/objectTypeLiteral/callSignatures/restParametersOfNonArrayTypes.ts:12:1]
 12 │     (...x: string);
 13 │     foo(...x: number, ...y: number);
    ·         ──────┬─────
    ·               ╰── Rest element must be last element
 14 │ }
    ╰────

  × Rest element must be last element
    ╭─[types/objectTypeLiteral/callSignatures/restParametersOfNonArrayTypes.ts:22:1]
 22 │     foo(...x: string) { },
 23 │     a: function foo(...x: number, ...y: Date) { },
    ·                     ──────┬─────
    ·                           ╰── Rest element must be last element
 24 │     b: (...x: string) => { }
    ╰────

  × Rest element must be last element
    ╭─[types/objectTypeLiteral/callSignatures/restParametersOfNonArrayTypes2.ts:8:1]
  8 │ var f = function foo(...x: MyThing) { }
  9 │ var f2 = (...x: MyThing, ...y: MyThing) => { }
    ·           ──────┬──────
    ·                 ╰── Rest element must be last element
 10 │ 
    ╰────

  × Rest element must be last element
    ╭─[types/objectTypeLiteral/callSignatures/restParametersOfNonArrayTypes2.ts:16:1]
 16 │     (...x: MyThing);
 17 │     foo(...x: MyThing, ...y: MyThing);
    ·         ──────┬──────
    ·               ╰── Rest element must be last element
 18 │ }
    ╰────

  × Rest element must be last element
    ╭─[types/objectTypeLiteral/callSignatures/restParametersOfNonArrayTypes2.ts:26:1]
 26 │     foo(...x: MyThing) { },
 27 │     a: function foo(...x: MyThing, ...y: MyThing) { },
    ·                     ──────┬──────
    ·                           ╰── Rest element must be last element
 28 │     b: (...x: MyThing) => { }
    ╰────

  × Rest element must be last element
    ╭─[types/objectTypeLiteral/callSignatures/restParametersOfNonArrayTypes2.ts:35:1]
 35 │ var f3 = function foo(...x: MyThing2<string>) { }
 36 │ var f4 = (...x: MyThing2<string>, ...y: MyThing2<string>) => { }
    ·           ───────────┬──────────
    ·                      ╰── Rest element must be last element
 37 │ 
    ╰────

  × Rest element must be last element
    ╭─[types/objectTypeLiteral/callSignatures/restParametersOfNonArrayTypes2.ts:43:1]
 43 │     (...x: MyThing2<string>);
 44 │     foo(...x: MyThing2<string>, ...y: MyThing2<string>);
    ·         ───────────┬──────────
    ·                    ╰── Rest element must be last element
 45 │ }
    ╰────

  × Rest element must be last element
    ╭─[types/objectTypeLiteral/callSignatures/restParametersOfNonArrayTypes2.ts:53:1]
 53 │     foo(...x: MyThing2<string>) { },
 54 │     a: function foo(...x: MyThing2<string>, ...y: MyThing2<string>) { },
    ·                     ───────────┬──────────
    ·                                ╰── Rest element must be last element
 55 │     b: (...x: MyThing2<string>) => { }
    ╰────

  × Rest element must be last element
   ╭─[types/objectTypeLiteral/callSignatures/restParametersWithArrayTypeAnnotations.ts:4:1]
 4 │ var f = function foo(...x: number[]) { }
 5 │ var f2 = (...x: number[], ...y: number[]) => { }
   ·           ───────┬──────
   ·                  ╰── Rest element must be last element
 6 │ 
   ╰────

  × Rest element must be last element
    ╭─[types/objectTypeLiteral/callSignatures/restParametersWithArrayTypeAnnotations.ts:12:1]
 12 │     (...x: number[]);
 13 │     foo(...x: number[], ...y: number[]);
    ·         ───────┬──────
    ·                ╰── Rest element must be last element
 14 │ }
    ╰────

  × Rest element must be last element
    ╭─[types/objectTypeLiteral/callSignatures/restParametersWithArrayTypeAnnotations.ts:22:1]
 22 │     foo(...x: number[]) { },
 23 │     a: function foo(...x: number[], ...y: number[]) { },
    ·                     ───────┬──────
    ·                            ╰── Rest element must be last element
 24 │     b: (...x: number[]) => { }
    ╰────

  × Rest element must be last element
    ╭─[types/objectTypeLiteral/callSignatures/restParametersWithArrayTypeAnnotations.ts:31:1]
 31 │ var f3 = function foo(...x: Array<string>) { }
 32 │ var f4 = (...x: Array<string>, ...y: Array<string>) => { }
    ·           ─────────┬─────────
    ·                    ╰── Rest element must be last element
 33 │ 
    ╰────

  × Rest element must be last element
    ╭─[types/objectTypeLiteral/callSignatures/restParametersWithArrayTypeAnnotations.ts:39:1]
 39 │     (...x: Array<string>);
 40 │     foo(...x: Array<string>, ...y: Array<string>);
    ·         ─────────┬─────────
    ·                  ╰── Rest element must be last element
 41 │ }
    ╰────

  × Rest element must be last element
    ╭─[types/objectTypeLiteral/callSignatures/restParametersWithArrayTypeAnnotations.ts:49:1]
 49 │     foo(...x: Array<string>) { },
 50 │     a: function foo(...x: Array<string>, ...y: Array<string>) { },
    ·                     ─────────┬─────────
    ·                              ╰── Rest element must be last element
 51 │     b: (...x: Array<string>) => { }
    ╰────

  × Expect token
    ╭─[types/objectTypeLiteral/methodSignatures/objectTypesWithOptionalProperties.ts:23:1]
 23 │ var b = {
 24 │     x?: 1 // error
    ·      ┬
    ·      ╰── Expect `,` here, but found `?`
 25 │ }
    ╰────

  × Unexpected token
   ╭─[types/objectTypeLiteral/methodSignatures/objectTypesWithOptionalProperties2.ts:3:1]
 3 │ var a: {
 4 │     x()?: number; // error
   ·        ─
 5 │ }
   ╰────

  × Expect token
    ╭─[types/objectTypeLiteral/propertySignatures/numericNamedPropertyDuplicates.ts:19:1]
 19 │     2: 1
 20 │     2: 1
    ·     ┬
    ·     ╰── Expect `,` here, but found `decimal`
 21 │ }
    ╰────

  × Expect token
    ╭─[types/objectTypeLiteral/propertySignatures/stringNamedPropertyDuplicates.ts:19:1]
 19 │     "a b": 1
 20 │     "a b": 1
    ·     ──┬──
    ·       ╰── Expect `,` here, but found `string`
 21 │ }
    ╰────

  × Rest element must be last element
   ╭─[types/rest/objectRestNegative.ts:2:1]
 2 │ let o = { a: 1, b: 'no' };
 3 │ var { ...mustBeLast, a } = o;
   ·       ──────┬──────
   ·             ╰── Rest element must be last element
 4 │ 
   ╰────

  × Rest element must be last element
    ╭─[types/rest/objectRestNegative.ts:9:1]
  9 │ 
 10 │ function stillMustBeLast({ ...mustBeLast, a }: { a: number, b: string }): void {
    ·                            ──────┬──────
    ·                                  ╰── Rest element must be last element
 11 │ }
    ╰────

  × Invalid assignment
    ╭─[types/rest/objectRestNegative.ts:17:1]
 17 │ let rest: { b: string }
 18 │ ({a, ...rest.b + rest.b} = o);
    ·         ───────┬───────
    ·                ╰── Cannot assign to this expression
    ╰────

  × Rest element must be last element
   ╭─[types/rest/objectRestPropertyMustBeLast.ts:1:1]
 1 │ var {...a, x } = { x: 1 };    // Error, rest must be last property
   ·      ──┬─
   ·        ╰── Rest element must be last element
 2 │ ({...a, x } = { x: 1 });      // Error, rest must be last property
   ╰────

  × Spread must be last element
   ╭─[types/rest/objectRestPropertyMustBeLast.ts:1:1]
 1 │ var {...a, x } = { x: 1 };    // Error, rest must be last property
 2 │ ({...a, x } = { x: 1 });      // Error, rest must be last property
   ·   ──┬─
   ·     ╰── Spread must be last element
 3 │ 
   ╰────

  × Rest element must be last element
   ╭─[types/rest/restElementMustBeLast.ts:1:1]
 1 │ var [...a, x] = [1, 2, 3];  // Error, rest must be last element
   ·      ──┬─
   ·        ╰── Rest element must be last element
 2 │ [...a, x] = [1, 2, 3];      // Error, rest must be last element
   ╰────

  × Spread must be last element
   ╭─[types/rest/restElementMustBeLast.ts:1:1]
 1 │ var [...a, x] = [1, 2, 3];  // Error, rest must be last element
 2 │ [...a, x] = [1, 2, 3];      // Error, rest must be last element
   ·  ──┬─
   ·    ╰── Spread must be last element
   ╰────

  × Expect token
   ╭─[types/specifyingTypes/predefinedTypes/objectTypesWithPredefinedTypesAsName2.ts:2:1]
 2 │ 
 3 │ class void {} // parse error unlike the others
   ·       ──┬─
   ·         ╰── Expect `{` here, but found `void`
   ╰────

  × Unexpected token
   ╭─[types/specifyingTypes/typeQueries/invalidTypeOfTarget.ts:1:1]
 1 │ var x1: typeof {};
   ·                ─
 2 │ var x2: typeof (): void;
   ╰────

  × Unexpected token
   ╭─[types/spread/objectSpreadNegativeParse.ts:1:1]
 1 │ // @lib: es5
 2 │ let o7 = { ...o? };
   ·                  ─
 3 │ let o8 = { ...*o };
   ╰────

  × Expect token
     ╭─[types/thisType/thisTypeInFunctionsNegative.ts:169:1]
 169 │ ///// parse errors /////
 170 │ function modifiers(async this: C): number { return this.n; }
     ·                          ──┬─
     ·                            ╰── Expect `,` here, but found `this`
 171 │ function restParam(...this: C): number { return this.n; }
     ╰────

  × Expect token
    ╭─[types/tuple/named/namedTupleMembersErrors.ts:11:1]
 11 │ 
 12 │ export type Opt = [element: string?]; // question mark on element disallowed
    ·                                   ┬
    ·                                   ╰── Expect `,` here, but found `?`
 13 │ 
    ╰────

  × Expect token
    ╭─[types/tuple/restTupleElements1.ts:12:1]
 12 │ type T08 = [...string];  // Error
 13 │ type T09 = [...string?];  // Error
    ·                      ┬
    ·                      ╰── Expect `,` here, but found `?`
 14 │ type T10 = [string, ...[...string[]]];
    ╰────

  × Automatic Semicolon Insertion
   ╭─[types/typeAliases/reservedNamesInAliases.ts:5:1]
 5 │ type string = I;
 6 │ type void = I;
   ·     ┬
   ·     ╰── Expected a semicolon or an implicit semicolon after a statement, but found none
 7 │ type object = I;
   ╰────
  help: Try insert a semicolon here

  × Unexpected token
    ╭─[types/typeParameters/typeArgumentLists/instantiationExpressionErrors.ts:20:1]
 20 │ 
 21 │ const a8 = f<number><number>;  // Relational operator error
    ·                             ─
 22 │ const a9 = (f<number>)<number>;  // Error, no applicable signatures
    ╰────

  × Unexpected token
   ╭─[types/typeParameters/typeParameterLists/typeParameterConstModifiers.ts:2:1]
 2 │ 
 3 │ declare function f1<const T>(x: T): T;
   ·                     ─────
 4 │ 
   ╰────

  × Expect token
    ╭─[types/typeParameters/typeParameterLists/varianceAnnotations.ts:97:1]
 97 │ 
 98 │ type T20<public T> = T;  // Error
    ·                 ┬
    ·                 ╰── Expect `,` here, but found `Identifier`
 99 │ type T21<in out in T> = T;  // Error
    ╰────

  × Unexpected token
   ╭─[types/typeParameters/typeParameterLists/varianceAnnotationsWithCircularlyReferencesError.ts:3:1]
 3 │ 
 4 │ type T1<in in> = T1 // Error: circularly references 
   ·            ──
 5 │ type T2<out out> = T2 // Error: circularly references 
   ╰────
